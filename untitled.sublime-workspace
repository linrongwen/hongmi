{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"or",
				"order_url"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 1885 files for \"openid\" (regex, case sensitive)\n\n/Users/bbmm/github/dazahui/ectouch20/data/assets/bootstrap/css/font-awesome.min.css:\n    2   *  Font Awesome 4.1.0 by @davegandy - http://fontawesome.io - @fontawesome\n    3   *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\n    4:  */@font-face{font-family:'FontAwesome';src:url('../fonts/fontawesome-webfont.eot?v=4.1.0');src:url('../fonts/fontawesome-webfont.eot?#iefix&v=4.1.0') format('embedded-opentype'),url('../fonts/fontawesome-webfont.woff?v=4.1.0') format('woff'),url('../fonts/fontawesome-webfont.ttf?v=4.1.0') format('truetype'),url('../fonts/fontawesome-webfont.svg?v=4.1.0#fontawesomeregular') format('svg');font-weight:normal;font-style:normal}.fa{display:inline-block;font-family:FontAwesome;font-style:normal;font-weight:normal;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:spin 2s infinite linear;-moz-animation:spin 2s infinite linear;-o-animation:spin 2s infinite linear;animation:spin 2s infinite linear}@-moz-keyframes spin{0%{-moz-transform:rotate(0deg)}100%{-moz-transform:rotate(359deg)}}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg)}}@-o-keyframes spin{0%{-o-transform:rotate(0deg)}100%{-o-transform:rotate(359deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);-webkit-transform:rotate(90deg);-moz-transform:rotate(90deg);-ms-transform:rotate(90deg);-o-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-ms-transform:rotate(180deg);-o-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);-webkit-transform:rotate(270deg);-moz-transform:rotate(270deg);-ms-transform:rotate(270deg);-o-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);-webkit-transform:scale(-1, 1);-moz-transform:scale(-1, 1);-ms-transform:scale(-1, 1);-o-transform:scale(-1, 1);transform:scale(-1, 1)}.fa-flip-vertical{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);-webkit-transform:scale(1, -1);-moz-transform:scale(1, -1);-ms-transform:scale(1, -1);-o-transform:scale(1, -1);transform:scale(1, -1)}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\"\\f000\"}.fa-music:before{content:\"\\f001\"}.fa-search:before{content:\"\\f002\"}.fa-envelope-o:before{content:\"\\f003\"}.fa-heart:before{content:\"\\f004\"}.fa-star:before{content:\"\\f005\"}.fa-star-o:before{content:\"\\f006\"}.fa-user:before{content:\"\\f007\"}.fa-film:before{content:\"\\f008\"}.fa-th-large:before{content:\"\\f009\"}.fa-th:before{content:\"\\f00a\"}.fa-th-list:before{content:\"\\f00b\"}.fa-check:before{content:\"\\f00c\"}.fa-times:before{content:\"\\f00d\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-search-minus:before{content:\"\\f010\"}.fa-power-off:before{content:\"\\f011\"}.fa-signal:before{content:\"\\f012\"}.fa-gear:before,.fa-cog:before{content:\"\\f013\"}.fa-trash-o:before{content:\"\\f014\"}.fa-home:before{content:\"\\f015\"}.fa-file-o:before{content:\"\\f016\"}.fa-clock-o:before{content:\"\\f017\"}.fa-road:before{content:\"\\f018\"}.fa-download:before{content:\"\\f019\"}.fa-arrow-circle-o-down:before{content:\"\\f01a\"}.fa-arrow-circle-o-up:before{content:\"\\f01b\"}.fa-inbox:before{content:\"\\f01c\"}.fa-play-circle-o:before{content:\"\\f01d\"}.fa-rotate-right:before,.fa-repeat:before{content:\"\\f01e\"}.fa-refresh:before{content:\"\\f021\"}.fa-list-alt:before{content:\"\\f022\"}.fa-lock:before{content:\"\\f023\"}.fa-flag:before{content:\"\\f024\"}.fa-headphones:before{content:\"\\f025\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-up:before{content:\"\\f028\"}.fa-qrcode:before{content:\"\\f029\"}.fa-barcode:before{content:\"\\f02a\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-book:before{content:\"\\f02d\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-print:before{content:\"\\f02f\"}.fa-camera:before{content:\"\\f030\"}.fa-font:before{content:\"\\f031\"}.fa-bold:before{content:\"\\f032\"}.fa-italic:before{content:\"\\f033\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-right:before{content:\"\\f038\"}.fa-align-justify:before{content:\"\\f039\"}.fa-list:before{content:\"\\f03a\"}.fa-dedent:before,.fa-outdent:before{content:\"\\f03b\"}.fa-indent:before{content:\"\\f03c\"}.fa-video-camera:before{content:\"\\f03d\"}.fa-photo:before,.fa-image:before,.fa-picture-o:before{content:\"\\f03e\"}.fa-pencil:before{content:\"\\f040\"}.fa-map-marker:before{content:\"\\f041\"}.fa-adjust:before{content:\"\\f042\"}.fa-tint:before{content:\"\\f043\"}.fa-edit:before,.fa-pencil-square-o:before{content:\"\\f044\"}.fa-share-square-o:before{content:\"\\f045\"}.fa-check-square-o:before{content:\"\\f046\"}.fa-arrows:before{content:\"\\f047\"}.fa-step-backward:before{content:\"\\f048\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-backward:before{content:\"\\f04a\"}.fa-play:before{content:\"\\f04b\"}.fa-pause:before{content:\"\\f04c\"}.fa-stop:before{content:\"\\f04d\"}.fa-forward:before{content:\"\\f04e\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-step-forward:before{content:\"\\f051\"}.fa-eject:before{content:\"\\f052\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-times-circle:before{content:\"\\f057\"}.fa-check-circle:before{content:\"\\f058\"}.fa-question-circle:before{content:\"\\f059\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-times-circle-o:before{content:\"\\f05c\"}.fa-check-circle-o:before{content:\"\\f05d\"}.fa-ban:before{content:\"\\f05e\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-mail-forward:before,.fa-share:before{content:\"\\f064\"}.fa-expand:before{content:\"\\f065\"}.fa-compress:before{content:\"\\f066\"}.fa-plus:before{content:\"\\f067\"}.fa-minus:before{content:\"\\f068\"}.fa-asterisk:before{content:\"\\f069\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-gift:before{content:\"\\f06b\"}.fa-leaf:before{content:\"\\f06c\"}.fa-fire:before{content:\"\\f06d\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-warning:before,.fa-exclamation-triangle:before{content:\"\\f071\"}.fa-plane:before{content:\"\\f072\"}.fa-calendar:before{content:\"\\f073\"}.fa-random:before{content:\"\\f074\"}.fa-comment:before{content:\"\\f075\"}.fa-magnet:before{content:\"\\f076\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-retweet:before{content:\"\\f079\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-arrows-v:before{content:\"\\f07d\"}.fa-arrows-h:before{content:\"\\f07e\"}.fa-bar-chart-o:before{content:\"\\f080\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-key:before{content:\"\\f084\"}.fa-gears:before,.fa-cogs:before{content:\"\\f085\"}.fa-comments:before{content:\"\\f086\"}.fa-thumbs-o-up:before{content:\"\\f087\"}.fa-thumbs-o-down:before{content:\"\\f088\"}.fa-star-half:before{content:\"\\f089\"}.fa-heart-o:before{content:\"\\f08a\"}.fa-sign-out:before{content:\"\\f08b\"}.fa-linkedin-square:before{content:\"\\f08c\"}.fa-thumb-tack:before{content:\"\\f08d\"}.fa-external-link:before{content:\"\\f08e\"}.fa-sign-in:before{content:\"\\f090\"}.fa-trophy:before{content:\"\\f091\"}.fa-github-square:before{content:\"\\f092\"}.fa-upload:before{content:\"\\f093\"}.fa-lemon-o:before{content:\"\\f094\"}.fa-phone:before{content:\"\\f095\"}.fa-square-o:before{content:\"\\f096\"}.fa-bookmark-o:before{content:\"\\f097\"}.fa-phone-square:before{content:\"\\f098\"}.fa-twitter:before{content:\"\\f099\"}.fa-facebook:before{content:\"\\f09a\"}.fa-github:before{content:\"\\f09b\"}.fa-unlock:before{content:\"\\f09c\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-rss:before{content:\"\\f09e\"}.fa-hdd-o:before{content:\"\\f0a0\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bell:before{content:\"\\f0f3\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-hand-o-right:before{content:\"\\f0a4\"}.fa-hand-o-left:before{content:\"\\f0a5\"}.fa-hand-o-up:before{content:\"\\f0a6\"}.fa-hand-o-down:before{content:\"\\f0a7\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-globe:before{content:\"\\f0ac\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-filter:before{content:\"\\f0b0\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-group:before,.fa-users:before{content:\"\\f0c0\"}.fa-chain:before,.fa-link:before{content:\"\\f0c1\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-flask:before{content:\"\\f0c3\"}.fa-cut:before,.fa-scissors:before{content:\"\\f0c4\"}.fa-copy:before,.fa-files-o:before{content:\"\\f0c5\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-save:before,.fa-floppy-o:before{content:\"\\f0c7\"}.fa-square:before{content:\"\\f0c8\"}.fa-navicon:before,.fa-reorder:before,.fa-bars:before{content:\"\\f0c9\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-underline:before{content:\"\\f0cd\"}.fa-table:before{content:\"\\f0ce\"}.fa-magic:before{content:\"\\f0d0\"}.fa-truck:before{content:\"\\f0d1\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-plus:before{content:\"\\f0d5\"}.fa-money:before{content:\"\\f0d6\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-columns:before{content:\"\\f0db\"}.fa-unsorted:before,.fa-sort:before{content:\"\\f0dc\"}.fa-sort-down:before,.fa-sort-desc:before{content:\"\\f0dd\"}.fa-sort-up:before,.fa-sort-asc:before{content:\"\\f0de\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-linkedin:before{content:\"\\f0e1\"}.fa-rotate-left:before,.fa-undo:before{content:\"\\f0e2\"}.fa-legal:before,.fa-gavel:before{content:\"\\f0e3\"}.fa-dashboard:before,.fa-tachometer:before{content:\"\\f0e4\"}.fa-comment-o:before{content:\"\\f0e5\"}.fa-comments-o:before{content:\"\\f0e6\"}.fa-flash:before,.fa-bolt:before{content:\"\\f0e7\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-paste:before,.fa-clipboard:before{content:\"\\f0ea\"}.fa-lightbulb-o:before{content:\"\\f0eb\"}.fa-exchange:before{content:\"\\f0ec\"}.fa-cloud-download:before{content:\"\\f0ed\"}.fa-cloud-upload:before{content:\"\\f0ee\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-bell-o:before{content:\"\\f0a2\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cutlery:before{content:\"\\f0f5\"}.fa-file-text-o:before{content:\"\\f0f6\"}.fa-building-o:before{content:\"\\f0f7\"}.fa-hospital-o:before{content:\"\\f0f8\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-beer:before{content:\"\\f0fc\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angle-down:before{content:\"\\f107\"}.fa-desktop:before{content:\"\\f108\"}.fa-laptop:before{content:\"\\f109\"}.fa-tablet:before{content:\"\\f10a\"}.fa-mobile-phone:before,.fa-mobile:before{content:\"\\f10b\"}.fa-circle-o:before{content:\"\\f10c\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-spinner:before{content:\"\\f110\"}.fa-circle:before{content:\"\\f111\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\f112\"}.fa-github-alt:before{content:\"\\f113\"}.fa-folder-o:before{content:\"\\f114\"}.fa-folder-open-o:before{content:\"\\f115\"}.fa-smile-o:before{content:\"\\f118\"}.fa-frown-o:before{content:\"\\f119\"}.fa-meh-o:before{content:\"\\f11a\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-keyboard-o:before{content:\"\\f11c\"}.fa-flag-o:before{content:\"\\f11d\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-terminal:before{content:\"\\f120\"}.fa-code:before{content:\"\\f121\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\"\\f122\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\"\\f123\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-crop:before{content:\"\\f125\"}.fa-code-fork:before{content:\"\\f126\"}.fa-unlink:before,.fa-chain-broken:before{content:\"\\f127\"}.fa-question:before{content:\"\\f128\"}.fa-info:before{content:\"\\f129\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-superscript:before{content:\"\\f12b\"}.fa-subscript:before{content:\"\\f12c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-shield:before{content:\"\\f132\"}.fa-calendar-o:before{content:\"\\f133\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-rocket:before{content:\"\\f135\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-html5:before{content:\"\\f13b\"}.fa-css3:before{content:\"\\f13c\"}.fa-anchor:before{content:\"\\f13d\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-bullseye:before{content:\"\\f140\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-rss-square:before{content:\"\\f143\"}.fa-play-circle:before{content:\"\\f144\"}.fa-ticket:before{content:\"\\f145\"}.fa-minus-square:before{content:\"\\f146\"}.fa-minus-square-o:before{content:\"\\f147\"}.fa-level-up:before{content:\"\\f148\"}.fa-level-down:before{content:\"\\f149\"}.fa-check-square:before{content:\"\\f14a\"}.fa-pencil-square:before{content:\"\\f14b\"}.fa-external-link-square:before{content:\"\\f14c\"}.fa-share-square:before{content:\"\\f14d\"}.fa-compass:before{content:\"\\f14e\"}.fa-toggle-down:before,.fa-caret-square-o-down:before{content:\"\\f150\"}.fa-toggle-up:before,.fa-caret-square-o-up:before{content:\"\\f151\"}.fa-toggle-right:before,.fa-caret-square-o-right:before{content:\"\\f152\"}.fa-euro:before,.fa-eur:before{content:\"\\f153\"}.fa-gbp:before{content:\"\\f154\"}.fa-dollar:before,.fa-usd:before{content:\"\\f155\"}.fa-rupee:before,.fa-inr:before{content:\"\\f156\"}.fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:\"\\f157\"}.fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:\"\\f158\"}.fa-won:before,.fa-krw:before{content:\"\\f159\"}.fa-bitcoin:before,.fa-btc:before{content:\"\\f15a\"}.fa-file:before{content:\"\\f15b\"}.fa-file-text:before{content:\"\\f15c\"}.fa-sort-alpha-asc:before{content:\"\\f15d\"}.fa-sort-alpha-desc:before{content:\"\\f15e\"}.fa-sort-amount-asc:before{content:\"\\f160\"}.fa-sort-amount-desc:before{content:\"\\f161\"}.fa-sort-numeric-asc:before{content:\"\\f162\"}.fa-sort-numeric-desc:before{content:\"\\f163\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-youtube-square:before{content:\"\\f166\"}.fa-youtube:before{content:\"\\f167\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-youtube-play:before{content:\"\\f16a\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-instagram:before{content:\"\\f16d\"}.fa-flickr:before{content:\"\\f16e\"}.fa-adn:before{content:\"\\f170\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitbucket-square:before{content:\"\\f172\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-long-arrow-down:before{content:\"\\f175\"}.fa-long-arrow-up:before{content:\"\\f176\"}.fa-long-arrow-left:before{content:\"\\f177\"}.fa-long-arrow-right:before{content:\"\\f178\"}.fa-apple:before{content:\"\\f179\"}.fa-windows:before{content:\"\\f17a\"}.fa-android:before{content:\"\\f17b\"}.fa-linux:before{content:\"\\f17c\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-skype:before{content:\"\\f17e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-trello:before{content:\"\\f181\"}.fa-female:before{content:\"\\f182\"}.fa-male:before{content:\"\\f183\"}.fa-gittip:before{content:\"\\f184\"}.fa-sun-o:before{content:\"\\f185\"}.fa-moon-o:before{content:\"\\f186\"}.fa-archive:before{content:\"\\f187\"}.fa-bug:before{content:\"\\f188\"}.fa-vk:before{content:\"\\f189\"}.fa-weibo:before{content:\"\\f18a\"}.fa-renren:before{content:\"\\f18b\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-arrow-circle-o-right:before{content:\"\\f18e\"}.fa-arrow-circle-o-left:before{content:\"\\f190\"}.fa-toggle-left:before,.fa-caret-square-o-left:before{content:\"\\f191\"}.fa-dot-circle-o:before{content:\"\\f192\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-turkish-lira:before,.fa-try:before{content:\"\\f195\"}.fa-plus-square-o:before{content:\"\\f196\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-slack:before{content:\"\\f198\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-openid:before{content:\"\\f19b\"}.fa-institution:before,.fa-bank:before,.fa-university:before{content:\"\\f19c\"}.fa-mortar-board:before,.fa-graduation-cap:before{content:\"\\f19d\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-google:before{content:\"\\f1a0\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-digg:before{content:\"\\f1a6\"}.fa-pied-piper-square:before,.fa-pied-piper:before{content:\"\\f1a7\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-language:before{content:\"\\f1ab\"}.fa-fax:before{content:\"\\f1ac\"}.fa-building:before{content:\"\\f1ad\"}.fa-child:before{content:\"\\f1ae\"}.fa-paw:before{content:\"\\f1b0\"}.fa-spoon:before{content:\"\\f1b1\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-automobile:before,.fa-car:before{content:\"\\f1b9\"}.fa-cab:before,.fa-taxi:before{content:\"\\f1ba\"}.fa-tree:before{content:\"\\f1bb\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-database:before{content:\"\\f1c0\"}.fa-file-pdf-o:before{content:\"\\f1c1\"}.fa-file-word-o:before{content:\"\\f1c2\"}.fa-file-excel-o:before{content:\"\\f1c3\"}.fa-file-powerpoint-o:before{content:\"\\f1c4\"}.fa-file-photo-o:before,.fa-file-picture-o:before,.fa-file-image-o:before{content:\"\\f1c5\"}.fa-file-zip-o:before,.fa-file-archive-o:before{content:\"\\f1c6\"}.fa-file-sound-o:before,.fa-file-audio-o:before{content:\"\\f1c7\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\"\\f1c8\"}.fa-file-code-o:before{content:\"\\f1c9\"}.fa-vine:before{content:\"\\f1ca\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-life-bouy:before,.fa-life-saver:before,.fa-support:before,.fa-life-ring:before{content:\"\\f1cd\"}.fa-circle-o-notch:before{content:\"\\f1ce\"}.fa-ra:before,.fa-rebel:before{content:\"\\f1d0\"}.fa-ge:before,.fa-empire:before{content:\"\\f1d1\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-git:before{content:\"\\f1d3\"}.fa-hacker-news:before{content:\"\\f1d4\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-qq:before{content:\"\\f1d6\"}.fa-wechat:before,.fa-weixin:before{content:\"\\f1d7\"}.fa-send:before,.fa-paper-plane:before{content:\"\\f1d8\"}.fa-send-o:before,.fa-paper-plane-o:before{content:\"\\f1d9\"}.fa-history:before{content:\"\\f1da\"}.fa-circle-thin:before{content:\"\\f1db\"}.fa-header:before{content:\"\\f1dc\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-sliders:before{content:\"\\f1de\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-bomb:before{content:\"\\f1e2\"}\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/admin/controllers/ExtendController.class.php:\n  219              $this->message('请选择插件', NULL, 'error');\n  220          }\n  221:         $sql = 'SELECT p.id, p.prize_name, p.issue_status, p.winner, p.dateline, p.openid, u.nickname FROM '.$this->model->pre.'wechat_prize p LEFT JOIN '.$this->model->pre.'wechat_user u ON p.openid = u.openid WHERE p.activity_type = \"'.$ks.'\" and p.prize_type = 1 ORDER BY dateline desc';\n  222          $list = $this->model->query($sql);\n  223          if(empty($list)){\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/admin/controllers/WechatController.class.php:\n  453              }\n  454              $group_id = I('post.group_id');\n  455:             $openid = I('post.id');\n  456:             if (is_array($openid)) {\n  457:                 foreach ($openid as $v) {\n  458                      // 微信端移动用户\n  459                      $this->weObj->updateGroupMembers($group_id, $v);\n  ...\n  461                      $this->model->table('wechat_user')\n  462                          ->data('group_id = \"' . $group_id . '\"')\n  463:                         ->where('openid = \"' . $v . '\"')\n  464                          ->update();\n  465                  }\n  ...\n  482          $where['wechat_id'] = $this->wechat_id;\n  483          $local_user = $this->model->table('wechat_user')\n  484:             ->field('openid')\n  485              ->where($where)\n  486              ->select();\n  ...\n  490          $user_list = array();\n  491          foreach ($local_user as $v) {\n  492:             $user_list[] = $v['openid'];\n  493          }\n  494          // 微信端数据\n  ...\n  496          \n  497          if ($wechat_user['total'] <= 10000) {\n  498:             $wechat_user_list = $wechat_user['data']['openid'];\n  499          } else {\n  500              $num = ceil($wechat_user['total'] / 10000);\n  501:             $wechat_user_list = $wechat_user['data']['openid'];\n  502              for ($i = 0; $i <= $num; $i ++) {\n  503:                 $wechat_user1 = $this->weObj->getUserList($wechat_user['next_openid']);\n  504:                 $wechat_user_list = array_merge($wechat_user_list, $wechat_user1['data']['openid']);\n  505              }\n  506          }\n  ...\n  508          foreach ($local_user as $val) {\n  509              // 数据在微信端存在\n  510:             if (in_array($val['openid'], $wechat_user_list)) {\n  511:                 $info = $this->weObj->getUserInfo($val['openid']);\n  512:                 $info['group_id'] = $this->weObj->getUserGroup($val['openid']);\n  513:                 $where1['openid'] = $val['openid'];\n  514                  $this->model->table('wechat_user')\n  515                      ->data($info)\n  ...\n  517                      ->update();\n  518              } else {\n  519:                 $where2['openid'] = $val['openid'];\n  520                  $data['subscribe'] = 0;\n  521                  $this->model->table('wechat_user')\n  ...\n  547          if (IS_POST) {\n  548              $data = I('post.data');\n  549:             $openid = I('post.openid');\n  550              $rs = Check::rule(array(\n  551:                 Check::must($openid),\n  552:                 L('select_openid')\n  553              ), array(\n  554                  Check::must($data['msg']),\n  ...\n  565              // 微信端发送消息\n  566              $msg = array(\n  567:                 'touser' => $openid,\n  568                  'msgtype' => 'text',\n  569                  'text' => array(\n  ...\n  588          }\n  589          $uid = I('get.uid');\n  590:         $openid = I('get.openid');\n  591:         $openid = $openid ? $where['openid'] = $openid : $where['uid'] = $uid;\n  592          $info = $this->model->table('wechat_user')\n  593:             ->field('uid, nickname, openid')\n  594              ->where($where)\n  595              ->find();\n  ...\n  606          $uid = I('get.uid');\n  607          if (empty($uid)) {\n  608:             $this->message(L('select_openid'), NULL, 'error');\n  609          }\n  610          $nickname = $this->model->table('wechat_user')\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/admin/languages/zh_cn/wechat.php:\n   52  $_LANG['sub_search'] = '请输入昵称、省、市搜索';\n   53  $_LANG['sub_headimg'] = '头像';\n   54: $_LANG['sub_openid'] = '微信用户唯一标识(openid)';\n   55  $_LANG['sub_nickname'] = '昵称';\n   56  $_LANG['sub_sex'] = '性别';\n   ..\n   67  $_LANG['message_time'] = '发送时间';\n   68  $_LANG['button_send'] = '发送';\n   69: $_LANG['select_openid'] = '请选择微信用户';\n   70  $_LANG['sub_help1'] = '只有48小时内给公众号发送过信息的粉丝才能接收到信息';\n   71  $_LANG['sub_binduser'] = '绑定用户';\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/admin/view/extend_winner_list.html:\n   23                      <td class=\"text-center\">\n   24                          {if $val['issue_status']}<a href=\"{url('winner_issue', array('id'=>$val['id'], 'cancel'=>1))}\" class=\"btn btn-primary\">取消发放</a>{else}<a href=\"{url('winner_issue', array('id'=>$val['id']))}\" class=\"btn btn-primary\">立即发放</a>{/if}\n   25:                         <a href=\"{url('wechat/send_custom_message', array('openid'=>$val['openid']))}\" class=\"btn  btn-info fancybox fancybox.iframe\">通知用户</a>\n   26                          <a href=\"javascript:if(confirm('{$lang['confirm_delete']}'))window.location.href='{url('winner_del', array('id'=>$val['id']))};';\" class=\"btn btn-default\">删除</a></td>\n   27                  </tr>\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/admin/view/wechat_send_custom_message.html:\n   17              </tr>\n   18              <tr>\n   19:               <td width=\"200\">{$lang['sub_openid']}:</td>\n   20:               <td><div class=\"col-md-6\">{$info['openid']}</div></td>\n   21              </tr>\n   22              <tr>\n   ..\n   24                <td><div class=\"col-md-4\">\n   25                      <input type=\"hidden\" name=\"data[uid]\" value=\"{$info['uid']}\" />\n   26:                     <input type=\"hidden\" name=\"openid\" value=\"{$info['openid']}\" />\n   27      				<input type=\"submit\" value=\"{$lang['button_send']}\" class=\"btn btn-primary\" />\n   28                    	<input type=\"reset\" value=\"{$lang['button_reset']}\" class=\"btn btn-default\" />\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/admin/view/wechat_subscribe_list.html:\n   31      				{loop $list $key $val}\n   32      				<tr>\n   33:     					<td class=\"text-center\"><input type=\"checkbox\" name=\"id[]\" value=\"{$val['openid']}\" class=\"checks\"></td>\n   34      					<td class=\"text-center\">{if $val['headimgurl']}<a href=\"admin/users.php?act=edit&id={$val['ect_uid']}\"><img src=\"{$val['headimgurl']}\" width=\"50\" alt=\"{$val['nickname']}\" />{/if}</td>\n   35      					<td class=\"text-center\">{$val['nickname']}({if $val['sex'] == 1}男{elseif $val['sex'] == 0}女{else}{/if})<br />{$val['name']}</td>\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/common/controllers/PluginWechatController.class.php:\n  171          $user_id = model('Base')->model->table('wechat_user')\n  172              ->field('ect_uid')\n  173:             ->where('openid = \"' . $fromusername . '\"')\n  174              ->getOne();\n  175          // 增加等级积分\n  ...\n  200          // 从表记录\n  201          $data1['log_id'] = $log_id;\n  202:         $data1['openid'] = $fromusername;\n  203          $data1['keywords'] = $info['command'];\n  204          $data1['createtime'] = $time;\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/default/controllers/ApiController.class.php:\n    9   * ----------------------------------------------------------------------------\n   10   * 功能描述：ECTouch接口控制器\n   11:  * 调用说明：url('api/index', array('openid'=>$openid, 'title'=>$title, 'msg'=>$msg, 'url'=>$url));\n   12   * ----------------------------------------------------------------------------\n   13   * Licensed ( http://www.ectouch.cn/docs/license.txt )\n   ..\n   20  class ApiController extends CommonController\n   21  {\n   22:     // 微信用户openid\n   23:     public $openid = '';\n   24      // 消息标题\n   25      public $title = '';\n   ..\n   35      {\n   36          parent::__construct();\n   37:         $this->openid = I('get.openid');\n   38          $this->title = I('get.title');\n   39          $this->msg = I('get.msg');\n   ..\n   48      {\n   49          // 公众号信息\n   50:         $sql = 'SELECT w.token, w.appid, w.appsecret FROM ' . $this->model->pre . 'wechat w LEFT JOIN ' . $this->model->pre . 'wechat_user u ON w.id = u.wechat_id WHERE u.openid = \"' . $this->openid . '\" and w.status = 1 ORDER BY w.sort asc, w.time desc LIMIT 1';\n   51          $wechat = $this->model->query($sql);\n   52  		$return = false;\n   ..\n   60                  // 微信端发送消息\n   61                  $send_msg = array(\n   62:                     'touser' => $this->openid,\n   63                      'msgtype' => 'news',\n   64                      'news' => array(\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/default/controllers/CommonController.class.php:\n   42          if(is_wechat_browser()){\n   43              //是否显示关注按钮\n   44:             $condition['openid'] = !empty($_SESSION['openid']) ? $_SESSION['openid'] : 0;       \n   45              $userinfo = $this->model->table('wechat_user')->field('subscribe')->where($condition)->find();\n   46              $this->assign('subscribe', $userinfo['subscribe']);\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/default/controllers/FlowController.class.php:\n  567                  }\n  568                  // 如果不是微信浏览器访问并且不是微信会员 则不显示微信支付\n  569:                 if ($payment ['pay_code'] == 'wxpay' && !is_wechat_browser() && empty($_SESSION['openid'])) {\n  570                      unset($payment_list [$key]);\n  571                  }\n  ...\n 1383                      }\n 1384                      // 如果不是微信浏览器访问并且不是微信会员 则不显示微信支付\n 1385:                     if ($payment ['pay_code'] == 'wxpay' && !is_wechat_browser() && empty($_SESSION['openid'])) {\n 1386                          unset($payment_list [$key]);\n 1387                      }\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/default/controllers/MY_FlowController.class.php:\n  339  \n  340              // 模版信息设置\n  341:             $data['openid'] = '';\n  342              $data['open_id'] = 'OPENTM206547887';\n  343              $data['url'] = 'http://'.$_SERVER['HTTP_HOST'].url('sale/order_detail',array('order_id'=>$new_order_id));\n  ...\n  355                  $user_id = M()->table('drp_shop')->field('user_id')->where('id = ' . $drp_id)->getOne();\n  356                  if($user_id){\n  357:                     // 获取openid 和 微信昵称\n  358:                     $userInfo = M()->table('wechat_user')->field('openid,nickname')->where('ect_uid = ' . $user_id)->find();\n  359:                     $data['openid'] = $userInfo['openid'];\n  360                      $data['keyword5'] = $userInfo['nickname'];\n  361:                     if($data['openid']){\n  362                          call_user_func(array('WechatController', 'sendTemplateMessage'), $data);\n  363                      }\n  ...\n  365                      $parent_id1 = M()->table('users')->field('parent_id')->where('user_id = ' . $user_id)->getOne();\n  366                      if($parent_id1){\n  367:                         // 获取openid 和 微信昵称\n  368:                         $userInfo = M()->table('wechat_user')->field('openid,nickname')->where('ect_uid = ' . $parent_id1)->find();\n  369:                         $data['openid'] = $userInfo['openid'];\n  370                          $data['keyword5'] = $userInfo['nickname'];\n  371:                         if($data['openid']){\n  372                              call_user_func(array('WechatController', 'sendTemplateMessage'), $data);\n  373                          }\n  ...\n  375                          $parent_id2 = M()->table('users')->field('parent_id')->where('user_id = ' . $parent_id1)->getOne();\n  376                          if($parent_id2) {\n  377:                             // 获取openid 和 微信昵称\n  378:                             $userInfo = M()->table('wechat_user')->field('openid,nickname')->where('ect_uid = ' . $parent_id2)->find();\n  379:                             $data['openid'] = $userInfo['openid'];\n  380                              $data['keyword5'] = $userInfo['nickname'];\n  381:                             if($data['openid']){\n  382                                  call_user_func(array('WechatController', 'sendTemplateMessage'), $data);\n  383                              }\n  ...\n  494                      }\n  495                      // 如果不是微信浏览器访问并且不是微信会员 则不显示微信支付\n  496:                     if ($payment ['pay_code'] == 'wxpay' && !is_wechat_browser() && empty($_SESSION['openid'])) {\n  497                          unset($payment_list [$key]);\n  498                      }\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/default/controllers/UserController.class.php:\n   80          //是否显示绑定按钮\n   81          $bind = 1;\n   82:         if(isset($_SESSION['wechat_user']) && !empty($_SESSION['wechat_user']['openid'])){\n   83:             $isbind = model('Base')->model->table('wechat_user')->field('isbind')->where(array('openid'=>$_SESSION['wechat_user']['openid']))->getOne();\n   84              //公众号信息\n   85              $wechat = model('Base')->model->table('wechat')->field('id, oauth_status')->where(array('type'=>2, 'status'=>1, 'default_wx'=>1))->find();\n   ..\n  700                  foreach ($payment_list as $key => $payment) {\n  701                      // 如果不是微信浏览器访问并且不是微信会员 则不显示微信支付\n  702:                     if ($payment ['pay_code'] == 'wxpay' && !is_wechat_browser() && empty($_SESSION['openid'])) {\n  703                          unset($payment_list [$key]);\n  704                      }\n  ...\n 1777              if($user_id = self::$user->check_user($username, $password)){\n 1778                  if(!empty($_SESSION['wechat_user'])){\n 1779:                     $condition['openid'] = $_SESSION['wechat_user']['openid'];\n 1780:                     $user = model('Base')->model->table('wechat_user')->field('openid, ect_uid, isbind')->where($condition)->find();\n 1781                      if($user && empty($user['isbind'])){\n 1782                          model('Base')->model->table('wechat_user')->data(array('ect_uid'=>$user_id, 'isbind'=>1))->where($condition)->update();\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/default/controllers/WechatController.class.php:\n  143       * @param array $info            \n  144       */\n  145:     private function subscribe($openid = '', $scene_id = 0)\n  146      {\n  147:         if(!empty($openid)){\n  148              // 用户信息\n  149:             $info = $this->weObj->getUserInfo($openid);\n  150              if (empty($info)) {\n  151                  $info = array();\n  152              }\n  153              // 查找用户是否存在\n  154:             $where['openid'] = $openid;\n  155              $rs = $this->model->table('wechat_user')\n  156                  ->field('ect_uid, subscribe')\n  ...\n  217                  }\n  218                  // 获取用户所在分组ID\n  219:                 //$group_id = $this->weObj->getUserGroup($openid);\n  220:                 $data['group_id'] = isset($info['groupid']) ? $info['groupid'] : $this->weObj->getUserGroup($openid);\n  221                  // 获取被关注公众号信息\n  222                  $data['wechat_id'] = $this->wechat_id;\n  223                  $data['subscribe'] = $info['subscribe'];\n  224:                 $data['openid'] = $info['openid'];\n  225                  $data['nickname'] = $info['nickname'];\n  226                  $data['sex'] = $info['sex'];\n  ...\n  235                  $this->model->table('wechat_user')->data($data)->insert();\n  236                  // 红包信息\n  237:                 $content = $this->send_message($openid, 'bonus', $this->weObj, 1);\n  238                  $bonus_msg = '';\n  239                  if (! empty($content)) {\n  ...\n  243                      // 微信端发送消息\n  244                      $msg = array(\n  245:                         'touser' => $openid,\n  246                          'msgtype' => 'text',\n  247                          'text' => array(\n  ...\n  252  \n  253                      //记录用户操作信息\n  254:                     $this->record_msg($openid, $template . $bonus_msg, 1);\n  255                  }\n  256              } else {\n  257                  //授权用户送红包\n  258:                 $uid = model('Base')->model->table('wechat_user')->field('ect_uid')->where('openid = \"'.$openid.'\"')->getOne();\n  259                  if(!empty($uid)){\n  260                      $bonus_num = model('Base')->model->table('user_bonus')->where('user_id = \"'.$uid.'\"')->count();\n  261                      if($bonus_num <= 0){\n  262                          // 红包信息\n  263:                         $content = $this->send_message($openid, 'bonus', $this->weObj, 1);\n  264                          $bonus_msg = '';\n  265                          if (! empty($content)) {\n  ...\n  269                              // 微信端发送消息\n  270                              $msg = array(\n  271:                                 'touser' => $openid,\n  272                                  'msgtype' => 'text',\n  273                                  'text' => array(\n  ...\n  277                              $this->weObj->sendCustomMessage($msg);\n  278                              //记录用户操作信息\n  279:                             $this->record_msg($openid, $bonus_msg, 1);\n  280                          }\n  281                      }\n  ...\n  283  \n  284                  // 获取用户所在分组ID\n  285:                 $data['group_id'] = isset($info['groupid']) ? $info['groupid'] : $this->weObj->getUserGroup($openid);\n  286                  // 获取被关注公众号信息\n  287                  $data['wechat_id'] = $this->wechat_id;\n  288                  $data['subscribe'] = $info['subscribe'];\n  289:                 $data['openid'] = $info['openid'];\n  290                  $data['nickname'] = $info['nickname'];\n  291                  $data['sex'] = $info['sex'];\n  ...\n  306       * 取消关注\n  307       *\n  308:      * @param string $openid            \n  309       */\n  310:     public function unsubscribe($openid = '')\n  311      {\n  312          // 未关注\n  313:         $where['openid'] = $openid;\n  314          $rs = $this->model->table('wechat_user')\n  315              ->where($where)\n  ...\n  616          $timeout = false;\n  617          //查找用户\n  618:         $uid = $this->model->table('wechat_user')->field('uid')->where(array('openid'=>$fromusername))->getOne();\n  619          if($uid){\n  620              $time_list = $this->model->table('wechat_custom_message')->field('send_time')->where(array('uid'=>$uid))->order('send_time desc')->limit(2)->select();\n  ...\n  627          // 是否处在多客服流程\n  628          $kefu = $this->model->table('wechat_user')\n  629:             ->field('openid')\n  630:             ->where('openid = \"' . $fromusername . '\"')\n  631              ->getOne();\n  632          if($kefu){\n  ...\n  689  \n  690      public static function snsapi_base(){\n  691:         if(is_wechat_browser() && ($_SESSION['user_id'] === 0 || empty($_SESSION['openid']))){\n  692:             $_SESSION['openid'] = isset($_COOKIE['openid']) ? addslashes($_COOKIE['openid']) : '';\n  693              $wxinfo = model('Base')->model->table('wechat')->field('token, appid, appsecret, status')->find();\n  694              if($wxinfo['status']){\n  ...\n  701                      if(isset($_GET['code']) && $_GET['state'] == 'repeat'){\n  702                          $token = $obj->getOauthAccessToken();\n  703:                         $_SESSION['openid'] = $token['openid'];\n  704:                         setcookie('openid', $token['openid'], gmtime() + 86400 * 7);\n  705                      }\n  706                      // 生成请求链接\n  ...\n  721       */\n  722      public static function snsapi_userinfo(){\n  723:         if(is_wechat_browser() && ($_SESSION['user_id'] === 0 || empty($_SESSION['openid'])) && ACTION_NAME != 'third_login'){\n  724              $wxinfo   = model('Base')->model->table('wechat')->field('token, appid, appsecret, status')->find();\n  725              if(!$wxinfo['status']){return false;}\n  ...\n  740       */\n  741       public function record_msg($fromusername, $keywords, $iswechat = 0){\n  742:         $uid = $this->model->table('wechat_user')->field('uid')->where(array('openid'=>$fromusername))->getOne();\n  743          if($uid){\n  744              $data['uid'] = $uid;\n  ...\n  924  \n  925      /**\n  926:      * 发送消息详情,传入openid\n  927       */\n  928      public function sendTemplateMessage($data){\n  ...\n  936              //发送\n  937              $format = array(\n  938:                 'touser' => $data['openid'],\n  939                  'template_id' => $info['template_id'],\n  940                  'url' => $data['url'],\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/default/helpers/function.php:\n 1543          $title = $remind['name'] ? $remind['name'] : $title;\n 1544          $msg = $config['template'] ? str_replace('[$order_id]', $order_id, $config['template']) : $msg;\n 1545:         $sql = \"SELECT p.openid FROM \".M()->pre.\"pay_log p LEFT JOIN \".M()->pre.\"order_info o ON p.order_id = o.order_id WHERE o.order_sn = '$order_id'\";\n 1546          $rs = M()->query($sql);\n 1547:         $openid = $rs[0]['openid'];\n 1548:         if(empty($openid)){\n 1549:             $openid = M()->table('wechat_user')->field('openid')->where('ect_uid = ' . $_SESSION['user_id'])->getOne();\n 1550          }\n 1551:         if (!empty($title) && !empty($openid)) {\n 1552              if(IS_ECSHOP){\n 1553:                 $dourl = __HOST__ . '/mobile/index.php?c=api&'. http_build_query(array('openid' => $openid, 'title' => $title, 'msg' => $msg, 'url' => $url), '', '&');\n 1554              }else{\n 1555:                 $dourl = __HOST__ . '/index.php?c=api&'. http_build_query(array('openid' => $openid, 'title' => $title, 'msg' => $msg, 'url' => $url), '', '&');\n 1556              }\n 1557              Http::doGet($dourl);\n\n/Users/bbmm/github/dazahui/ectouch20/include/apps/default/models/MY_PaymentModel.class.php:\n  104  \n  105                          // 模版信息设置\n  106:                         $data['openid'] = '';\n  107                          $data['open_id'] = 'OPENTM206547887';\n  108                          $data['url'] = 'http://'.$_SERVER['HTTP_HOST'].url('sale/order_detail',array('order_id'=>$new_order_id));\n  ...\n  120                              $user_id = M()->table('drp_shop')->field('user_id')->where('id = ' . $drp_id)->getOne();\n  121                              if($user_id){\n  122:                                 // 获取openid 和 微信昵称\n  123:                                 $userInfo = M()->table('wechat_user')->field('openid,nickname')->where('ect_uid = ' . $user_id)->find();\n  124:                                 $data['openid'] = $userInfo['openid'];\n  125                                  $data['keyword5'] = $userInfo['nickname'];\n  126:                                 if($data['openid']){\n  127                                      call_user_func(array('WechatController', 'sendTemplateMessage'), $data);\n  128                                  }\n  ...\n  130                                  $parent_id1 = M()->table('users')->field('parent_id')->where('user_id = ' . $user_id)->getOne();\n  131                                  if($parent_id1){\n  132:                                     // 获取openid 和 微信昵称\n  133:                                     $userInfo = M()->table('wechat_user')->field('openid,nickname')->where('ect_uid = ' . $parent_id1)->find();\n  134:                                     $data['openid'] = $userInfo['openid'];\n  135                                      $data['keyword5'] = $userInfo['nickname'];\n  136:                                     if($data['openid']){\n  137                                          call_user_func(array('WechatController', 'sendTemplateMessage'), $data);\n  138                                      }\n  ...\n  140                                      $parent_id2 = M()->table('users')->field('parent_id')->where('user_id = ' . $parent_id1)->getOne();\n  141                                      if($parent_id2) {\n  142:                                         // 获取openid 和 微信昵称\n  143:                                         $userInfo = M()->table('wechat_user')->field('openid,nickname')->where('ect_uid = ' . $parent_id2)->find();\n  144:                                         $data['openid'] = $userInfo['openid'];\n  145                                          $data['keyword5'] = $userInfo['nickname'];\n  146:                                         if($data['openid']){\n  147                                              call_user_func(array('WechatController', 'sendTemplateMessage'), $data);\n  148                                          }\n\n/Users/bbmm/github/dazahui/ectouch20/include/languages/zh_cn/admin/wechat.php:\n   72  $_LANG['search for'] = '搜索';\n   73  $_LANG['sub_headimg'] = '头像';\n   74: $_LANG['sub_openid'] = '微信用户唯一标识(openid)';\n   75  $_LANG['sub_nickname'] = '昵称';\n   76  $_LANG['sub_sex'] = '性别';\n   ..\n   87  $_LANG['message_time'] = '发送时间';\n   88  $_LANG['button_send'] = '发送';\n   89: $_LANG['select_openid'] = '请选择微信用户';\n   90  $_LANG['sub_help1'] = '只有48小时内给公众号发送过信息的粉丝才能接收到信息';\n   91  $_LANG['sub_binduser'] = '绑定用户';\n\n/Users/bbmm/github/dazahui/ectouch20/include/modules/payment/wxpay.php:\n   34              'value' => ''\n   35          ),\n   36:         // JSAPI接口中获取openid，审核后在公众平台开启开发模式后可查看\n   37          array(\n   38              'name' => 'wxpay_appsecret',\n\n/Users/bbmm/github/dazahui/ectouch20/include/vendor/WechatAbstract.class.php:\n  708  \n  709  		//以下仅当群发消息时才会有的事件内容\n  710: 		if (isset($this->_receive['TotalCount']))     //分组或openid列表内粉丝数量\n  711  			$array['TotalCount'] = $this->_receive['TotalCount'];\n  712  		if (isset($this->_receive['FilterCount']))    //过滤（过滤是指特定地区、性别的过滤、用户设置拒收的过滤，用户接收已超4条的过滤）后，准备发送的粉丝数\n  ...\n 2171  	/**\n 2172  	 * 批量获取关注用户列表\n 2173: 	 * @param unknown $next_openid\n 2174  	 */\n 2175: 	public function getUserList($next_openid=''){\n 2176  		if (!$this->access_token && !$this->checkAuth()) return false;\n 2177: 		$result = $this->http_get(self::API_URL_PREFIX.self::USER_GET_URL.'access_token='.$this->access_token.'&next_openid='.$next_openid);\n 2178  		if ($result)\n 2179  		{\n ....\n 2191  	/**\n 2192  	 * 获取关注者详细信息\n 2193: 	 * @param string $openid\n 2194: 	 * @return array {subscribe,openid,nickname,sex,city,province,country,language,headimgurl,subscribe_time,[unionid]}\n 2195  	 * 注意：unionid字段 只有在用户将公众号绑定到微信开放平台账号后，才会出现。建议调用前用isset()检测一下\n 2196  	 */\n 2197: 	public function getUserInfo($openid){\n 2198  		if (!$this->access_token && !$this->checkAuth()) return false;\n 2199: 		$result = $this->http_get(self::API_URL_PREFIX.self::USER_INFO_URL.'access_token='.$this->access_token.'&openid='.$openid);\n 2200  		if ($result)\n 2201  		{\n ....\n 2213  	/**\n 2214  	 * 设置用户备注名\n 2215: 	 * @param string $openid\n 2216  	 * @param string $remark 备注名\n 2217  	 * @return boolean|array\n 2218  	 */\n 2219: 	public function updateUserRemark($openid,$remark){\n 2220  	    if (!$this->access_token && !$this->checkAuth()) return false;\n 2221  	    $data = array(\n 2222: 			'openid'=>$openid,\n 2223  			'remark'=>$remark\n 2224  	    );\n ....\n 2259  	/**\n 2260  	 * 获取用户所在分组\n 2261: 	 * @param string $openid\n 2262  	 * @return boolean|int 成功则返回用户分组id\n 2263  	 */\n 2264: 	public function getUserGroup($openid){\n 2265  	    if (!$this->access_token && !$this->checkAuth()) return false;\n 2266  	    $data = array(\n 2267: 	            'openid'=>$openid\n 2268  	    );\n 2269  	    $result = $this->http_post(self::API_URL_PREFIX.self::USER_GROUP_URL.'access_token='.$this->access_token,self::json_encode($data));\n ....\n 2333  	 * 移动用户分组\n 2334  	 * @param int $groupid 分组id\n 2335: 	 * @param string $openid 用户openid\n 2336  	 * @return boolean|array\n 2337  	 */\n 2338: 	public function updateGroupMembers($groupid,$openid){\n 2339  		if (!$this->access_token && !$this->checkAuth()) return false;\n 2340  		$data = array(\n 2341: 				'openid'=>$openid,\n 2342  				'to_groupid'=>$groupid\n 2343  		);\n ....\n 2359  	 * 批量移动用户分组\n 2360  	 * @param int $groupid 分组id\n 2361: 	 * @param string $openid_list 用户openid数组,一次不能超过50个\n 2362  	 * @return boolean|array\n 2363  	 */\n 2364: 	public function batchUpdateGroupMembers($groupid,$openid_list){\n 2365  		if (!$this->access_token && !$this->checkAuth()) return false;\n 2366  		$data = array(\n 2367: 				'openid_list'=>$openid_list,\n 2368  				'to_groupid'=>$groupid\n 2369  		);\n ....\n 2414  	/**\n 2415  	 * 通过code获取Access Token\n 2416: 	 * @return array {access_token,expires_in,refresh_token,openid,scope}\n 2417  	 */\n 2418  	public function getOauthAccessToken(){\n ....\n 2458  	 * 获取授权后的用户资料\n 2459  	 * @param string $access_token\n 2460: 	 * @param string $openid\n 2461: 	 * @return array {openid,nickname,sex,province,city,country,headimgurl,privilege,[unionid]}\n 2462  	 * 注意：unionid字段 只有在用户将公众号绑定到微信开放平台账号后，才会出现。建议调用前用isset()检测一下\n 2463  	 */\n 2464: 	public function getOauthUserinfo($access_token,$openid){\n 2465: 		$result = $this->http_get(self::API_BASE_URL_PREFIX.self::OAUTH_USERINFO_URL.'access_token='.$access_token.'&openid='.$openid);\n 2466  		if ($result)\n 2467  		{\n ....\n 2480  	 * 检验授权凭证是否有效\n 2481  	 * @param string $access_token\n 2482: 	 * @param string $openid\n 2483  	 * @return boolean 是否有效\n 2484  	 */\n 2485: 	public function getOauthAuth($access_token,$openid){\n 2486: 	    $result = $this->http_get(self::API_BASE_URL_PREFIX.self::OAUTH_AUTH_URL.'access_token='.$access_token.'&openid='.$openid);\n 2487  	    if ($result)\n 2488  	    {\n ....\n 2589  	/**\n 2590  	 * 获取多客服会话记录\n 2591: 	 * @param array $data 数据结构{\"starttime\":123456789,\"endtime\":987654321,\"openid\":\"OPENID\",\"pagesize\":10,\"pageindex\":1,}\n 2592  	 * @return boolean|array\n 2593  	 */\n ....\n 2683  	 * 创建指定多客服会话\n 2684  	 * @tutorial 当用户已被其他客服接待或指定客服不在线则会失败\n 2685: 	 * @param string $openid           //用户openid\n 2686  	 * @param string $kf_account     //客服账号\n 2687  	 * @param string $text                 //附加信息，文本会展示在客服人员的多客服客户端，可为空\n ....\n 2692  	 * }\n 2693  	 */\n 2694: 	public function createKFSession($openid,$kf_account,$text=''){\n 2695  	    $data=array(\n 2696: 	    	\"openid\" =>$openid,\n 2697  	        \"kf_account\" => $kf_account\n 2698  	    );\n ....\n 2716  	 * 关闭指定多客服会话\n 2717  	 * @tutorial 当用户被其他客服接待时则会失败\n 2718: 	 * @param string $openid           //用户openid\n 2719  	 * @param string $kf_account     //客服账号\n 2720  	 * @param string $text                 //附加信息，文本会展示在客服人员的多客服客户端，可为空\n ....\n 2725  	 * }\n 2726  	 */\n 2727: 	public function closeKFSession($openid,$kf_account,$text=''){\n 2728  	    $data=array(\n 2729: 	    	\"openid\" =>$openid,\n 2730  	        \"kf_account\" => $kf_account\n 2731  	    );\n ....\n 2748  	/**\n 2749  	 * 获取用户会话状态\n 2750: 	 * @param string $openid           //用户openid\n 2751  	 * @return boolean | array            //成功返回json数组\n 2752  	 * {\n ....\n 2757  	 *  }\n 2758  	 */\n 2759: 	public function getKFSession($openid){\n 2760  	    if (!$this->access_token && !$this->checkAuth()) return false;\n 2761: 	    $result = $this->http_get(self::API_BASE_URL_PREFIX.self::CUSTOM_SESSION_GET .'access_token='.$this->access_token.'&openid='.$openid);\n 2762  	    if ($result)\n 2763  	    {\n ....\n 2775  	/**\n 2776  	 * 获取指定客服的会话列表\n 2777: 	 * @param string $openid           //用户openid\n 2778  	 * @return boolean | array            //成功返回json数组\n 2779  	 *  array(\n 2780  	 *     'sessionlist' => array (\n 2781  	 *         array (\n 2782: 	 *             'openid'=>'OPENID',             //客户 openid\n 2783  	 *             'createtime'=>123456789,  //会话创建时间，UNIX 时间戳\n 2784  	 *         ),\n 2785  	 *         array (\n 2786: 	 *             'openid'=>'OPENID',             //客户 openid\n 2787  	 *             'createtime'=>123456789,  //会话创建时间，UNIX 时间戳\n 2788  	 *         ),\n ....\n 2808  	/**\n 2809  	 * 获取未接入会话列表\n 2810: 	 * @param string $openid           //用户openid\n 2811  	 * @return boolean | array            //成功返回json数组\n 2812  	 *  array (\n ....\n 2814  	 *     'waitcaselist' => array (\n 2815  	 *         array (\n 2816: 	 *             'openid'=>'OPENID',             //客户 openid\n 2817  	 *             'kf_account ' =>'',                   //指定接待的客服，为空则未指定\n 2818  	 *             'createtime'=>123456789,  //会话创建时间，UNIX 时间戳\n 2819  	 *         ),\n 2820  	 *         array (\n 2821: 	 *             'openid'=>'OPENID',             //客户 openid\n 2822  	 *             'kf_account ' =>'',                   //指定接待的客服，为空则未指定\n 2823  	 *             'createtime'=>123456789,  //会话创建时间，UNIX 时间戳\n ....\n 2967  	/**\n 2968  	 * 语义理解接口\n 2969: 	 * @param String $uid      用户唯一id（非开发者id），用户区分公众号下的不同用户（建议填入用户openid）\n 2970  	 * @param String $query    输入文本串\n 2971  	 * @param String $category 需要使用的服务类型，多个用“，”隔开，不能为空\n ....\n 3169  	 * @param string $cardid 卡券ID 必须\n 3170  	 * @param string $code 指定卡券 code 码，只能被领一次。use_custom_code 字段为 true 的卡券必须填写，非自定义 code 不必填写。\n 3171: 	 * @param string $openid 指定领取者的 openid，只有该用户能领取。bind_openid 字段为 true 的卡券必须填写，非自定义 openid 不必填写。\n 3172  	 * @param int $expire_seconds 指定二维码的有效时间，范围是 60 ~ 1800 秒。不填默认为永久有效。\n 3173  	 * @param boolean $is_unique_code 指定下发二维码，生成的二维码随机分配一个 code，领取后不可再次扫描。填写 true 或 false。默认 false。\n ....\n 3175       * @return boolean|string\n 3176       */\n 3177:     public function createCardQrcode($card_id,$code='',$openid='',$expire_seconds=0,$is_unique_code=false,$balance='') {\n 3178          $card = array(\n 3179              'card_id' => $card_id\n ....\n 3184          if ($code)\n 3185              $card['code'] = $code;\n 3186:         if ($openid)\n 3187:             $card['openid'] = $openid;\n 3188          if ($is_unique_code)\n 3189              $card['is_unique_code'] = $is_unique_code;\n ....\n 3218       *  \"errmsg\":\"ok\",\n 3219       *  \"card\":{\"card_id\":\"pFS7Fjg8kV1IdDz01r4SQwMkuCKc\"},\n 3220:      *  \"openid\":\"oFS7Fjl0WsZ9AMZqrI80nbIq8xrA\"\n 3221       * }\n 3222       */\n ....\n 3274       *  \"errcode\":0,\n 3275       *  \"errmsg\":\"ok\",\n 3276:      *  \"openid\":\"oFS7Fjl0WsZ9AMZqrI80nbIq8xrA\",    //用户 openid\n 3277       *  \"card\":{\n 3278       *      \"card_id\":\"pFS7Fjg8kV1IdDz01r4SQwMkuCKc\",\n ....\n 3500      /**\n 3501       * 设置卡券测试白名单\n 3502:      * @param string $openid    测试的 openid 列表\n 3503       * @param string $user      测试的微信号列表\n 3504       * @return boolean\n 3505       */\n 3506:     public function setCardTestWhiteList($openid=array(),$user=array()) {\n 3507          $data = array();\n 3508:         if (count($openid) > 0)\n 3509:             $data['openid'] = $openid;\n 3510          if (count($user) > 0)\n 3511              $data['username'] = $user;\n ....\n 4079                  \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\"\n 4080              },\n 4081:             \"openid\": \"oVDmXjp7y8aG2AlBuRpMZTb1-cmA\"\n 4082          },\n 4083          \"errcode\": 0,\n ....\n 4089       * distance Beacon 信号与手机的距离\n 4090       * page_id 摇周边页面唯一ID\n 4091:      * openid 商户AppID 下用户的唯一标识\n 4092       * poi_id 门店ID，有的话则返回，没有的话不会在JSON 格式内\n 4093       * @access public\n\n/Users/bbmm/github/dazahui/ectouch20/include/vendor/libraries/Wechat.php:\n  701  \n  702  		//以下仅当群发消息时才会有的事件内容\n  703: 		if (isset($this->_receive['TotalCount']))     //分组或openid列表内粉丝数量\n  704  			$array['TotalCount'] = $this->_receive['TotalCount'];\n  705  		if (isset($this->_receive['FilterCount']))    //过滤（过滤是指特定地区、性别的过滤、用户设置拒收的过滤，用户接收已超4条的过滤）后，准备发送的粉丝数\n  ...\n 2072  	/**\n 2073  	 * 批量获取关注用户列表\n 2074: 	 * @param unknown $next_openid\n 2075  	 */\n 2076: 	public function getUserList($next_openid=''){\n 2077  		if (!$this->access_token && !$this->checkAuth()) return false;\n 2078: 		$result = $this->http_get(self::API_URL_PREFIX.self::USER_GET_URL.'access_token='.$this->access_token.'&next_openid='.$next_openid);\n 2079  		if ($result)\n 2080  		{\n ....\n 2092  	/**\n 2093  	 * 获取关注者详细信息\n 2094: 	 * @param string $openid\n 2095: 	 * @return array {subscribe,openid,nickname,sex,city,province,country,language,headimgurl,subscribe_time,[unionid]}\n 2096  	 * 注意：unionid字段 只有在用户将公众号绑定到微信开放平台账号后，才会出现。建议调用前用isset()检测一下\n 2097  	 */\n 2098: 	public function getUserInfo($openid){\n 2099  		if (!$this->access_token && !$this->checkAuth()) return false;\n 2100: 		$result = $this->http_get(self::API_URL_PREFIX.self::USER_INFO_URL.'access_token='.$this->access_token.'&openid='.$openid);\n 2101  		if ($result)\n 2102  		{\n ....\n 2114  	/**\n 2115  	 * 设置用户备注名\n 2116: 	 * @param string $openid\n 2117  	 * @param string $remark 备注名\n 2118  	 * @return boolean|array\n 2119  	 */\n 2120: 	public function updateUserRemark($openid,$remark){\n 2121  	    if (!$this->access_token && !$this->checkAuth()) return false;\n 2122  	    $data = array(\n 2123: 			'openid'=>$openid,\n 2124  			'remark'=>$remark\n 2125  	    );\n ....\n 2160  	/**\n 2161  	 * 获取用户所在分组\n 2162: 	 * @param string $openid\n 2163  	 * @return boolean|int 成功则返回用户分组id\n 2164  	 */\n 2165: 	public function getUserGroup($openid){\n 2166  	    if (!$this->access_token && !$this->checkAuth()) return false;\n 2167  	    $data = array(\n 2168: 	            'openid'=>$openid\n 2169  	    );\n 2170  	    $result = $this->http_post(self::API_URL_PREFIX.self::USER_GROUP_URL.'access_token='.$this->access_token,self::json_encode($data));\n ....\n 2234  	 * 移动用户分组\n 2235  	 * @param int $groupid 分组id\n 2236: 	 * @param string $openid 用户openid\n 2237  	 * @return boolean|array\n 2238  	 */\n 2239: 	public function updateGroupMembers($groupid,$openid){\n 2240  		if (!$this->access_token && !$this->checkAuth()) return false;\n 2241  		$data = array(\n 2242: 				'openid'=>$openid,\n 2243  				'to_groupid'=>$groupid\n 2244  		);\n ....\n 2260  	 * 批量移动用户分组\n 2261  	 * @param int $groupid 分组id\n 2262: 	 * @param string $openid_list 用户openid数组,一次不能超过50个\n 2263  	 * @return boolean|array\n 2264  	 */\n 2265: 	public function batchUpdateGroupMembers($groupid,$openid_list){\n 2266  		if (!$this->access_token && !$this->checkAuth()) return false;\n 2267  		$data = array(\n 2268: 				'openid_list'=>$openid_list,\n 2269  				'to_groupid'=>$groupid\n 2270  		);\n ....\n 2315  	/**\n 2316  	 * 通过code获取Access Token\n 2317: 	 * @return array {access_token,expires_in,refresh_token,openid,scope}\n 2318  	 */\n 2319  	public function getOauthAccessToken(){\n ....\n 2359  	 * 获取授权后的用户资料\n 2360  	 * @param string $access_token\n 2361: 	 * @param string $openid\n 2362: 	 * @return array {openid,nickname,sex,province,city,country,headimgurl,privilege,[unionid]}\n 2363  	 * 注意：unionid字段 只有在用户将公众号绑定到微信开放平台账号后，才会出现。建议调用前用isset()检测一下\n 2364  	 */\n 2365: 	public function getOauthUserinfo($access_token,$openid){\n 2366: 		$result = $this->http_get(self::API_BASE_URL_PREFIX.self::OAUTH_USERINFO_URL.'access_token='.$access_token.'&openid='.$openid);\n 2367  		if ($result)\n 2368  		{\n ....\n 2381  	 * 检验授权凭证是否有效\n 2382  	 * @param string $access_token\n 2383: 	 * @param string $openid\n 2384  	 * @return boolean 是否有效\n 2385  	 */\n 2386: 	public function getOauthAuth($access_token,$openid){\n 2387: 	    $result = $this->http_get(self::API_BASE_URL_PREFIX.self::OAUTH_AUTH_URL.'access_token='.$access_token.'&openid='.$openid);\n 2388  	    if ($result)\n 2389  	    {\n ....\n 2490  	/**\n 2491  	 * 获取多客服会话记录\n 2492: 	 * @param array $data 数据结构{\"starttime\":123456789,\"endtime\":987654321,\"openid\":\"OPENID\",\"pagesize\":10,\"pageindex\":1,}\n 2493  	 * @return boolean|array\n 2494  	 */\n ....\n 2584  	 * 创建指定多客服会话\n 2585  	 * @tutorial 当用户已被其他客服接待或指定客服不在线则会失败\n 2586: 	 * @param string $openid           //用户openid\n 2587  	 * @param string $kf_account     //客服账号\n 2588  	 * @param string $text                 //附加信息，文本会展示在客服人员的多客服客户端，可为空\n ....\n 2593  	 * }\n 2594  	 */\n 2595: 	public function createKFSession($openid,$kf_account,$text=''){\n 2596  	    $data=array(\n 2597: 	    	\"openid\" =>$openid,\n 2598  	        \"kf_account\" => $kf_account\n 2599  	    );\n ....\n 2617  	 * 关闭指定多客服会话\n 2618  	 * @tutorial 当用户被其他客服接待时则会失败\n 2619: 	 * @param string $openid           //用户openid\n 2620  	 * @param string $kf_account     //客服账号\n 2621  	 * @param string $text                 //附加信息，文本会展示在客服人员的多客服客户端，可为空\n ....\n 2626  	 * }\n 2627  	 */\n 2628: 	public function closeKFSession($openid,$kf_account,$text=''){\n 2629  	    $data=array(\n 2630: 	    	\"openid\" =>$openid,\n 2631  	        \"kf_account\" => $kf_account\n 2632  	    );\n ....\n 2649  	/**\n 2650  	 * 获取用户会话状态\n 2651: 	 * @param string $openid           //用户openid\n 2652  	 * @return boolean | array            //成功返回json数组\n 2653  	 * {\n ....\n 2658  	 *  }\n 2659  	 */\n 2660: 	public function getKFSession($openid){\n 2661  	    if (!$this->access_token && !$this->checkAuth()) return false;\n 2662: 	    $result = $this->http_get(self::API_BASE_URL_PREFIX.self::CUSTOM_SESSION_GET .'access_token='.$this->access_token.'&openid='.$openid);\n 2663  	    if ($result)\n 2664  	    {\n ....\n 2676  	/**\n 2677  	 * 获取指定客服的会话列表\n 2678: 	 * @param string $openid           //用户openid\n 2679  	 * @return boolean | array            //成功返回json数组\n 2680  	 *  array(\n 2681  	 *     'sessionlist' => array (\n 2682  	 *         array (\n 2683: 	 *             'openid'=>'OPENID',             //客户 openid\n 2684  	 *             'createtime'=>123456789,  //会话创建时间，UNIX 时间戳\n 2685  	 *         ),\n 2686  	 *         array (\n 2687: 	 *             'openid'=>'OPENID',             //客户 openid\n 2688  	 *             'createtime'=>123456789,  //会话创建时间，UNIX 时间戳\n 2689  	 *         ),\n ....\n 2709  	/**\n 2710  	 * 获取未接入会话列表\n 2711: 	 * @param string $openid           //用户openid\n 2712  	 * @return boolean | array            //成功返回json数组\n 2713  	 *  array (\n ....\n 2715  	 *     'waitcaselist' => array (\n 2716  	 *         array (\n 2717: 	 *             'openid'=>'OPENID',             //客户 openid\n 2718  	 *             'kf_account ' =>'',                   //指定接待的客服，为空则未指定\n 2719  	 *             'createtime'=>123456789,  //会话创建时间，UNIX 时间戳\n 2720  	 *         ),\n 2721  	 *         array (\n 2722: 	 *             'openid'=>'OPENID',             //客户 openid\n 2723  	 *             'kf_account ' =>'',                   //指定接待的客服，为空则未指定\n 2724  	 *             'createtime'=>123456789,  //会话创建时间，UNIX 时间戳\n ....\n 2868  	/**\n 2869  	 * 语义理解接口\n 2870: 	 * @param String $uid      用户唯一id（非开发者id），用户区分公众号下的不同用户（建议填入用户openid）\n 2871  	 * @param String $query    输入文本串\n 2872  	 * @param String $category 需要使用的服务类型，多个用“，”隔开，不能为空\n ....\n 3070  	 * @param string $cardid 卡券ID 必须\n 3071  	 * @param string $code 指定卡券 code 码，只能被领一次。use_custom_code 字段为 true 的卡券必须填写，非自定义 code 不必填写。\n 3072: 	 * @param string $openid 指定领取者的 openid，只有该用户能领取。bind_openid 字段为 true 的卡券必须填写，非自定义 openid 不必填写。\n 3073  	 * @param int $expire_seconds 指定二维码的有效时间，范围是 60 ~ 1800 秒。不填默认为永久有效。\n 3074  	 * @param boolean $is_unique_code 指定下发二维码，生成的二维码随机分配一个 code，领取后不可再次扫描。填写 true 或 false。默认 false。\n ....\n 3076       * @return boolean|string\n 3077       */\n 3078:     public function createCardQrcode($card_id,$code='',$openid='',$expire_seconds=0,$is_unique_code=false,$balance='') {\n 3079          $card = array(\n 3080                  'card_id' => $card_id\n ....\n 3082          if ($code)\n 3083              $card['code'] = $code;\n 3084:         if ($openid)\n 3085:             $card['openid'] = $openid;\n 3086          if ($expire_seconds)\n 3087              $card['expire_seconds'] = $expire_seconds;\n ....\n 3119       *  \"errmsg\":\"ok\",\n 3120       *  \"card\":{\"card_id\":\"pFS7Fjg8kV1IdDz01r4SQwMkuCKc\"},\n 3121:      *  \"openid\":\"oFS7Fjl0WsZ9AMZqrI80nbIq8xrA\"\n 3122       * }\n 3123       */\n ....\n 3175       *  \"errcode\":0,\n 3176       *  \"errmsg\":\"ok\",\n 3177:      *  \"openid\":\"oFS7Fjl0WsZ9AMZqrI80nbIq8xrA\",    //用户 openid\n 3178       *  \"card\":{\n 3179       *      \"card_id\":\"pFS7Fjg8kV1IdDz01r4SQwMkuCKc\",\n ....\n 3381      /**\n 3382       * 设置卡券测试白名单\n 3383:      * @param string $openid    测试的 openid 列表\n 3384       * @param string $user      测试的微信号列表\n 3385       * @return boolean\n 3386       */\n 3387:     public function setCardTestWhiteList($openid=array(),$user=array()) {\n 3388          $data = array();\n 3389:         if (count($openid) > 0)\n 3390:             $data['openid'] = $openid;\n 3391          if (count($user) > 0)\n 3392              $data['username'] = $user;\n ....\n 3960                  \"uuid\": \"FDA50693-A4E2-4FB1-AFCF-C6EB07647825\"\n 3961              },\n 3962:             \"openid\": \"oVDmXjp7y8aG2AlBuRpMZTb1-cmA\"\n 3963          },\n 3964          \"errcode\": 0,\n ....\n 3970       * distance Beacon 信号与手机的距离\n 3971       * page_id 摇周边页面唯一ID\n 3972:      * openid 商户AppID 下用户的唯一标识\n 3973       * poi_id 门店ID，有的话则返回，没有的话不会在JSON 格式内\n 3974       * @access public\n\n/Users/bbmm/github/dazahui/ectouch20/install/sqldata/wechat.sql:\n   72    `send_time` int(11) unsigned NOT NULL DEFAULT '0',\n   73    `msg_id` varchar(20) DEFAULT NULL COMMENT '微信端返回的消息ID',\n   74:   `totalcount` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'group_id下粉丝数；或者openid_list中的粉丝数',\n   75    `filtercount` int(10) unsigned NOT NULL DEFAULT '0',\n   76    `sentcount` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '发送成功的粉丝数',\n   ..\n  134  CREATE TABLE IF NOT EXISTS `ecs_wechat_point` (\n  135    `log_id` mediumint(8) unsigned NOT NULL COMMENT '积分增加记录id',\n  136:   `openid` varchar(100) DEFAULT NULL,\n  137    `keywords` varchar(100) NOT NULL COMMENT '关键词',\n  138    `createtime` int(11) unsigned NOT NULL DEFAULT '0'\n  ...\n  148    `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n  149    `wechat_id` int(11) unsigned NOT NULL,\n  150:   `openid` varchar(100) NOT NULL,\n  151    `prize_name` varchar(100) NOT NULL,\n  152    `issue_status` int(2) NOT NULL DEFAULT '0' COMMENT '发放状态，0未发放，1发放',\n  ...\n  253    `wechat_id` int(10) unsigned NOT NULL DEFAULT '0',\n  254    `subscribe` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '用户是否订阅该公众号标识',\n  255:   `openid` varchar(255) NOT NULL COMMENT '用户的标识',\n  256    `nickname` varchar(255) NOT NULL COMMENT '用户的昵称',\n  257    `sex` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '用户的性别',\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/connect/qq.php:\n  107              // 保存登录信息，此示例中使用session保存\n  108              $this->access_token = $result['access_token']; // access token echo '授权完成，请记录<br/>access token：<input size=\"50\" value=\"', $result['access_token'], '\">' . $_SESSION['qq_t'];\n  109:             $openid = $this->get_openid();\n  110              // 获取用户信息\n  111:             $userinfo = $this->get_user_info($openid);\n  112              // 处理数据\n  113:             $userinfo['aite_id'] = $type . '_' . $openid; // 添加登录标示\n  114              $user = init_users();\n  115              if ($userinfo['user_name'] = model('Users')->get_one_user($userinfo['aite_id'])) {\n  ...\n  125                  $userinfo['user_name'] = $userinfo['user_name'] . rand(1000, 9999); // 重名处理\n  126              }\n  127:             $userinfo['email'] = empty($userinfo['email']) ? substr($openid, -6) . '@' . get_top_domain() : $userinfo['email'];\n  128              // 插入数据库\n  129              model('Users')->third_reg($userinfo);\n  ...\n  183  \n  184      /**\n  185:      * 获取登录用户的openid\n  186       *\n  187       * @return Ambigous <>\n  188       */\n  189:     public function get_openid() {\n  190          $params = array(\n  191              'access_token' => $this->access_token\n  ...\n  198              $json_r = json_decode($result_a[1], true);\n  199          }\n  200:         return $json_r['openid'];\n  201      }\n  202  \n  203      /**\n  204:      * 根据openid获取用户信息\n  205       *\n  206:      * @param unknown $openid            \n  207       * @return Ambigous <multitype:, mixed>\n  208       */\n  209:     public function get_user_info($openid) {\n  210          $params = array(\n  211:             'openid' => $openid\n  212          );\n  213          return $this->api('user/get_user_info', $params);\n  ...\n  228       * 发布分享\n  229       *\n  230:      * @param unknown $openid            \n  231       * @param unknown $title            \n  232       * @param unknown $url            \n  ...\n  237       * @return Ambigous <multitype:, mixed>\n  238       */\n  239:     public function add_share($openid, $title, $url, $site, $fromurl, $images = '', $summary = '') {\n  240          $params = array(\n  241:             'openid' => $openid,\n  242              'title' => $title,\n  243              'url' => $url,\n  ...\n  257       * @param string $method            \n  258       * @return Ambigous <multitype:, mixed>\n  259:      *         //示例：根据openid获取用户信息\n  260:      *         $result=$qq->api('user/get_user_info', array('openid'=>$openid), 'GET');\n  261       */\n  262      public function api($url, $params = array(), $method = 'GET') {\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/connect/sina.php:\n  104              // 保存登录信息，此示例中使用session保存\n  105             $this->access_token = $result['access_token']; // access token echo '授权完成，请记录<br/>access token：<input size=\"50\" value=\"', $result['access_token'], '\">' . $_SESSION['qq_t'];\n  106:             $openid = $this->get_openid();\n  107              // 获取用户信息\n  108:             $userinfo = $this->get_user_info($openid);\n  109              // 处理数据\n  110:             $userinfo['aite_id'] = $type . '_' . $openid; // 添加登录标示\n  111              $user = init_users();\n  112              if ($userinfo['user_name'] = model('Users')->get_one_user($userinfo['aite_id'])) {\n  ...\n  123                  $userinfo['user_name'] = $userinfo['user_name'] . rand(1000, 9999); // 重名处理\n  124              }\n  125:             $userinfo['email'] = empty($userinfo['email']) ? substr($openid, -6) . '@' . get_top_domain() : $userinfo['email'];\n  126              // 插入数据库\n  127              model('Users')->third_reg($userinfo);\n  ...\n  177       * @return Ambigous <>\n  178       */\n  179:     public function get_openid() {\n  180          $params = array();\n  181          $result = $this->api('account/get_uid', $params);\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/connect/weixin.php:\n   91      public function act_login($info, $url){\n   92          // 微信浏览器浏览\n   93:         if (is_wechat_browser() && ($_SESSION['user_id'] === 0 || empty($_SESSION['openid']))) {\n   94              return $this->weObj->getOauthRedirect($url, 1);\n   95          }\n   ..\n  107          if (!empty($code)) {\n  108              $token = $this->weObj->getOauthAccessToken();\n  109:             $userinfo = $this->weObj->getOauthUserinfo($token['access_token'], $token['openid']);\n  110              $_SESSION['wechat_user'] = empty($userinfo) ? array() : $userinfo;\n  111  			if(!empty($userinfo)){\n  ...\n  134      {\n  135          $time = time();\n  136:         $ret = model('Base')->model->table('wechat_user')->field('openid, ect_uid')->where('openid = \"' . $userinfo['openid'] . '\"')->find();\n  137          if (empty($ret)) {\n  138              //微信用户绑定会员id\n  ...\n  194              \n  195              // 获取用户所在分组ID\n  196:             $group_id = $weObj->getUserGroup($userinfo['openid']);\n  197              $group_id = $group_id ? $group_id : 0;\n  198  \n  199              $data1['wechat_id'] = $wechat_id;\n  200              $data1['subscribe'] = 0;\n  201:             $data1['openid'] = $userinfo['openid'];\n  202              $data1['nickname'] = $userinfo['nickname'];\n  203              $data1['sex'] = $userinfo['sex'];\n  ...\n  215              //开放平台有privilege字段,公众平台没有\n  216              unset($userinfo['privilege']);\n  217:             model('Base')->model->table('wechat_user')->data($userinfo)->where(array('openid'=> $userinfo['openid']))->update();\n  218              $new_user_name = model('Base')->model->table('users')->field('user_name')->where(array('user_id'=>$ret['ect_uid']))->getOne();\n  219              ECTouch::user()->set_session($new_user_name);\n  ...\n  221              model('Users')->update_user_info();\n  222          }\n  223:         $_SESSION['openid'] = $userinfo['openid'];\n  224:         setcookie('openid', $userinfo['openid'], gmtime() + 86400 * 7);\n  225      }\n  226  \n\n/Users/bbmm/github/dazahui/ectouch20/plugins/payment/wxpay.php:\n   39          // 配置参数\n   40          $this->payment = $payment;\n   41:         // 网页授权获取用户openid\n   42:         $openid = empty($_SESSION['openid']) ? $_SESSION['wechat_user']['openid'] : $_SESSION['openid'];\n   43:         if (!isset($openid) || empty($openid)) {\n   44              return false;\n   45          }\n   ..\n   47          // 设置必填参数\n   48          // 根目录url\n   49:         $this->setParameter(\"openid\", \"$openid\"); // 商品描述\n   50          $this->setParameter(\"body\", $order['order_sn']); // 商品描述\n   51          $this->setParameter(\"out_trade_no\", $order['order_sn'] . 'A' . ($order['order_amount'] * 100) . 'B' . $order['log_id']); // 商户订单号\n   ..\n  131                          model('Payment')->order_paid($log_id, 2);\n  132                      }\n  133:                     // 修改订单信息(openid，tranid)\n  134                      model('Base')->model->table('pay_log')\n  135:                         ->data('openid = \"' . $postdata['openid'] . '\", transid = \"' . $postdata['transaction_id'] . '\"')\n  136                          ->where('log_id = ' . $log_id)\n  137                          ->update();\n  ...\n  293              } elseif ($this->parameters[\"trade_type\"] == null) {\n  294                  throw new Exception(\"缺少统一支付接口必填参数trade_type！\" . \"<br>\");\n  295:             } elseif ($this->parameters[\"trade_type\"] == \"JSAPI\" && $this->parameters[\"openid\"] == NULL) {\n  296:                 throw new Exception(\"统一支付接口中，缺少必填参数openid！trade_type为JSAPI时，openid为必填参数！\" . \"<br>\");\n  297              }\n  298              $this->parameters[\"appid\"] = $this->payment['wxpay_appid']; // 公众账号ID\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/bdsjh/bdsjh.class.php:\n  107              // 开启积分赠送\n  108              if (isset($config['point_status']) && $config['point_status'] == 1) {\n  109:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n  110                  $num = model('base')->model->table('wechat_point')\n  111                      ->field('createtime')\n  ...\n  126      public function html_show()\n  127      {\n  128:         if(isset($_SESSION['openid']) && !empty($_SESSION['openid'])){\n  129              $file = ADDONS_PATH . 'wechat/' . $this->plugin_name . '/view/index.php';\n  130              if (file_exists($file)) {\n  ...\n  155                  show_message($rs, '绑定手机号', url('wechat/plugin_show', array('name' => $this->plugin_name)));\n  156              }\n  157:             if(!isset($_SESSION['openid'])){\n  158                  show_message('您需要微信授权登录，才能进行绑定手机号操作！', '返回首页', url('index/index'));\n  159              }\n  ...\n  176  \n  177              //绑定手机号\n  178:             $ect_uid = model('Base')->model->table('wechat_user')->field('ect_uid')->where('openid = \"'.$_SESSION['openid'].'\"')->getOne();\n  179              $mobile_phone = model('Base')->model->table('users')->field('mobile_phone')->where('user_id = \"'.$ect_uid.'\"')->getOne();\n  180  \n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/best/best.class.php:\n   99              // 开启积分赠送\n  100              if (isset($config['point_status']) && $config['point_status'] == 1) {\n  101:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n  102                  $num = model('base')->model->table('wechat_point')\n  103                      ->field('createtime')\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/bonus/bonus.class.php:\n   68              if(isset($config['bonus_status']) && $config['bonus_status'] == 1){\n   69                  //用户第一次关注赠送红包并且设置了赠送的红包\n   70:                 $uid = model('Base')->model->table('wechat_user')->field('ect_uid')->where('openid = \"'.$fromusername.'\"')->getOne();\n   71                  if(!empty($uid) && !empty($config['bonus'])){\n   72                      $bonus_num = model('Base')->model->table('user_bonus')->where('user_id = \"'.$uid.'\"')->count();\n   ..\n  107              // 开启积分赠送\n  108              if (isset($config['point_status']) && $config['point_status'] == 1) {\n  109:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n  110                  $num = model('base')->model->table('wechat_point')\n  111                      ->field('createtime')\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/ddcx/ddcx.class.php:\n   58      {\n   59          $articles = array('type'=>'text', 'content'=>'暂无订单信息');\n   60:         $uid = model('Base')->model->table('wechat_user')->field('ect_uid')->where('openid = \"'.$fromusername.'\"')->getOne();\n   61          if(!empty($uid)){\n   62              //订单ID\n   ..\n  108              // 开启积分赠送\n  109              if (isset($config['point_status']) && $config['point_status'] == 1) {\n  110:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n  111                  $num = model('base')->model->table('wechat_point')\n  112                      ->field('createtime')\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/dzp/dzp.class.php:\n  113              // 开启积分赠送\n  114              if (isset($config['point_status']) && $config['point_status'] == 1) {\n  115:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n  116                  $num = model('Base')->model->table('wechat_point')\n  117                      ->field('createtime')\n  ...\n  137          $endtime = strtotime($config['endtime']);\n  138          // 用户抽奖剩余的次数\n  139:         $openid = session('openid');\n  140          $count = model('Base')->model->table('wechat_prize')\n  141:             ->where('openid = \"' . $openid . '\"  and activity_type = \"'.$this->plugin_name.'\" and dateline between \"' . $starttime . '\" and \"' . $endtime . '\"')\n  142              ->count();\n  143          $config['prize_num'] = ($config['prize_num'] - $count) < 0 ? 0 : $config['prize_num'] - $count;\n  144          // 中奖记录\n  145:         $sql = 'SELECT u.nickname, p.prize_name, p.id FROM ' . model('Base')->model->pre . 'wechat_prize p LEFT JOIN ' . model('Base')->model->pre . 'wechat_user u ON p.openid = u.openid where dateline between \"' . $starttime . '\" and \"' . $endtime . '\" and p.prize_type = 1 and p.activity_type = \"'.$this->plugin_name.'\" ORDER BY dateline desc limit 10';\n  146          $list = model('Base')->model->query($sql);\n  147          $wechat_js_sdk = $this->get_wechat_sdk();\n  ...\n  187              $rs = model('Base')->model->table('wechat_prize')\n  188                  ->field('winner')\n  189:                 ->where('openid = \"' . session('openid') . '\" and id = ' . $id)\n  190                  ->getOne();\n  191              if (! empty($rs)) {\n  ...\n  202              $rs = array();\n  203              // 未登录\n  204:             $openid = session('openid');\n  205:             if (empty($openid)) {\n  206                  $rs['status'] = 2;\n  207                  $rs['msg'] = '请先登录';\n  ...\n  229              // 超过次数\n  230  			$num = model('Base')->model->table('wechat_prize')\n  231: 				->where('openid = \"' . $openid . '\" and activity_type = \"'.$this->plugin_name.'\" and dateline between \"' . $starttime . '\" and \"' . $endtime . '\"')\n  232  				->count();\n  233  			if ($num <= 0) {\n  ...\n  291                  // 抽奖记录\n  292                  $data['wechat_id'] = $wxid;\n  293:                 $data['openid'] = $openid;\n  294                  $data['prize_name'] = $prize_name[$level];\n  295                  $data['dateline'] = time();\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/ggk/ggk.class.php:\n  113              // 开启积分赠送\n  114              if (isset($config['point_status']) && $config['point_status'] == 1) {\n  115:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n  116                  $num = model('Base')->model->table('wechat_point')\n  117                      ->field('createtime')\n  ...\n  137          $endtime = strtotime($config['endtime']);\n  138          // 用户抽奖剩余的次数\n  139:         $openid = session('openid');\n  140          $count = model('Base')->model->table('wechat_prize')\n  141:             ->where('openid = \"' . $openid . '\"  and activity_type = \"'.$this->plugin_name.'\" and dateline between \"' . $starttime . '\" and \"' . $endtime . '\"')\n  142              ->count();\n  143          $config['prize_num'] = ($config['prize_num'] - $count) < 0 ? 0 : $config['prize_num'] - $count;\n  144          // 中奖记录\n  145:         $sql = 'SELECT u.nickname, p.prize_name, p.id FROM ' . model('Base')->model->pre . 'wechat_prize p LEFT JOIN ' . model('Base')->model->pre . 'wechat_user u ON p.openid = u.openid where dateline between \"' . $starttime . '\" and \"' . $endtime . '\" and p.prize_type = 1 and p.activity_type = \"'.$this->plugin_name.'\" ORDER BY dateline desc limit 10';\n  146          $list = model('Base')->model->query($sql);\n  147          $wechat_js_sdk = $this->get_wechat_sdk();\n  ...\n  187              $rs = model('Base')->model->table('wechat_prize')\n  188                  ->field('winner')\n  189:                 ->where('openid = \"' . session('openid') . '\" and id = ' . $id)\n  190                  ->getOne();\n  191              if (! empty($rs)) {\n  ...\n  219              }\n  220              // 未登录\n  221:            $openid = session('openid');\n  222:             if (empty($openid)) {\n  223                  $rs['status'] = 2;\n  224                  $rs['msg'] = '请先登录';\n  ...\n  244              // 超过次数\n  245              $num = model('Base')->model->table('wechat_prize')\n  246:                 ->where('openid = \"' . $openid . '\"  and activity_type = \"'.$this->plugin_name.'\" and dateline between \"' . $starttime . '\" and \"' . $endtime . '\"')\n  247                  ->count();\n  248              if ($num <= 0) {\n  ...\n  315                  $data['prize_type'] = $prize_type;\n  316                  $data['wechat_id'] = $wxid;\n  317:                 $data['openid'] = $openid;\n  318                  $data['prize_name'] = $prize_name;\n  319                  $data['dateline'] = time();\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/hot/hot.class.php:\n   99              // 开启积分赠送\n  100              if (isset($config['point_status']) && $config['point_status'] == 1) {\n  101:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n  102                  $num = model('Base')->model->table('wechat_point')\n  103                      ->field('createtime')\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/jfcx/jfcx.class.php:\n   58      {\n   59          $articles = array('type'=>'text', 'content'=>'暂无积分信息');\n   60:         $uid = model('Base')->model->table('wechat_user')->field('ect_uid')->where('openid = \"'.$fromusername.'\"')->getOne();\n   61          if(!empty($uid)){\n   62              $data = model('Base')->model->table('users')->field('rank_points, pay_points, user_money')->where('user_id = '.$uid)->find();\n   ..\n   84              // 开启积分赠送\n   85              if (isset($config['point_status']) && $config['point_status'] == 1) {\n   86:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n   87                  $num = model('base')->model->table('wechat_point')\n   88                      ->field('createtime')\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/news/news.class.php:\n   99              // 开启积分赠送\n  100              if (isset($config['point_status']) && $config['point_status'] == 1) {\n  101:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n  102                  $num = model('Base')->model->table('wechat_point')\n  103                      ->field('createtime')\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/recommend/recommend.class.php:\n  103              // 开启积分赠送\n  104              if (isset($config['point_status']) && $config['point_status'] == 1) {\n  105:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n  106                  $num = model('base')->model->table('wechat_point')\n  107                      ->field('createtime')\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/sign/sign.class.php:\n   63          if (isset($config['point_status']) && $config['point_status'] == 1) {\n   64              // 签到次数\n   65:             $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n   66              $num = model('Base')->model->table('wechat_point')\n   67                  ->field('createtime')\n   ..\n   97              // 开启积分赠送\n   98              if (isset($config['point_status']) && $config['point_status'] == 1) {\n   99:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n  100                  $num = model('Base')->model->table('wechat_point')\n  101                      ->field('createtime')\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/wlcx/wlcx.class.php:\n   58      {\n   59          $articles = array('type'=>'text', 'content'=>'暂无物流信息');\n   60:         $uid = model('Base')->model->table('wechat_user')->field('ect_uid')->where('openid = \"'.$fromusername.'\"')->getOne();\n   61          if(!empty($uid)){\n   62              //订单ID\n   ..\n   92              // 开启积分赠送\n   93              if (isset($config['point_status']) && $config['point_status'] == 1) {\n   94:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n   95                  $num = model('base')->model->table('wechat_point')\n   96                      ->field('createtime')\n\n/Users/bbmm/github/dazahui/ectouch20/plugins/wechat/zjd/zjd.class.php:\n  113              // 开启积分赠送\n  114              if (isset($config['point_status']) && $config['point_status'] == 1) {\n  115:                 $where = 'openid = \"' . $fromusername . '\" and keywords = \"' . $info['command'] . '\" and createtime > (UNIX_TIMESTAMP(NOW())- ' . $config['point_interval'] . ')';\n  116                  $num = model('Base')->model->table('wechat_point')\n  117                      ->field('createtime')\n  ...\n  149          $endtime = strtotime($config['endtime']);\n  150          // 用户抽奖剩余的次数\n  151:         $openid = isset($_SESSION['wechat_user']) ? $_SESSION['wechat_user']['openid'] : '';\n  152          $count = model('Base')->model->table('wechat_prize')\n  153:             ->where('openid = \"' . $openid . '\"  and activity_type = \"'.$this->plugin_name.'\" and dateline between \"' . $starttime . '\" and \"' . $endtime . '\"')\n  154              ->count();\n  155          $config['prize_num'] = ($config['prize_num'] - $count) < 0 ? 0 : $config['prize_num'] - $count;\n  156          // 中奖记录\n  157:         $sql = 'SELECT u.nickname, p.prize_name, p.id FROM ' . model('Base')->model->pre . 'wechat_prize p LEFT JOIN ' . model('Base')->model->pre . 'wechat_user u ON p.openid = u.openid where dateline between \"' . $starttime . '\" and \"' . $endtime . '\" and p.prize_type = 1 and p.activity_type = \"'.$this->plugin_name.'\" ORDER BY dateline desc limit 10';\n  158          $list = model('Base')->model->query($sql);\n  159          $wechat_js_sdk = $this->get_wechat_sdk();\n  ...\n  199              $rs = model('Base')->model->table('wechat_prize')\n  200                  ->field('winner')\n  201:                 ->where('openid = \"' . $_SESSION['wechat_user']['openid'] . '\" and id = ' . $id)\n  202                  ->getOne();\n  203              if (! empty($rs)) {\n  ...\n  214              $rs = array();\n  215              // 未登录\n  216:             $openid = isset($_SESSION['wechat_user']) ? $_SESSION['wechat_user']['openid'] : '';\n  217:             if (empty($openid)) {\n  218                  $rs['status'] = 2;\n  219                  $rs['msg'] = '请先登录';\n  ...\n  240              }\n  241              // 超过次数\n  242:             if (! empty($openid)) {\n  243                  $num = model('Base')->model->table('wechat_prize')\n  244:                     ->where('openid = \"' . $openid . '\"  and activity_type = \"'.$this->plugin_name.'\" and dateline between \"' . $starttime . '\" and \"' . $endtime . '\"')\n  245                      ->count();\n  246                  if ($num <= 0) {\n  ...\n  298                  // 抽奖记录\n  299                  $data['wechat_id'] = $wxid;\n  300:                 $data['openid'] = $openid;\n  301                  $data['prize_name'] = $prize_name[$level];\n  302                  $data['dateline'] = time();\n\n/Users/bbmm/github/dazahui/ectouch20/themes/default/default/sale/bootstrap/css/font-awesome.min.css:\n    2   *  Font Awesome 4.1.0 by @davegandy - http://fontawesome.io - @fontawesome\n    3   *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\n    4:  */@font-face{font-family:'FontAwesome';src:url('../fonts/fontawesome-webfont.eot?v=4.1.0');src:url('../fonts/fontawesome-webfont.eot?#iefix&v=4.1.0') format('embedded-opentype'),url('../fonts/fontawesome-webfont.woff?v=4.1.0') format('woff'),url('../fonts/fontawesome-webfont.ttf?v=4.1.0') format('truetype'),url('../fonts/fontawesome-webfont.svg?v=4.1.0#fontawesomeregular') format('svg');font-weight:normal;font-style:normal}.fa{display:inline-block;font-family:FontAwesome;font-style:normal;font-weight:normal;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:spin 2s infinite linear;-moz-animation:spin 2s infinite linear;-o-animation:spin 2s infinite linear;animation:spin 2s infinite linear}@-moz-keyframes spin{0%{-moz-transform:rotate(0deg)}100%{-moz-transform:rotate(359deg)}}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg)}}@-o-keyframes spin{0%{-o-transform:rotate(0deg)}100%{-o-transform:rotate(359deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);-webkit-transform:rotate(90deg);-moz-transform:rotate(90deg);-ms-transform:rotate(90deg);-o-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-ms-transform:rotate(180deg);-o-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);-webkit-transform:rotate(270deg);-moz-transform:rotate(270deg);-ms-transform:rotate(270deg);-o-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);-webkit-transform:scale(-1, 1);-moz-transform:scale(-1, 1);-ms-transform:scale(-1, 1);-o-transform:scale(-1, 1);transform:scale(-1, 1)}.fa-flip-vertical{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);-webkit-transform:scale(1, -1);-moz-transform:scale(1, -1);-ms-transform:scale(1, -1);-o-transform:scale(1, -1);transform:scale(1, -1)}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\"\\f000\"}.fa-music:before{content:\"\\f001\"}.fa-search:before{content:\"\\f002\"}.fa-envelope-o:before{content:\"\\f003\"}.fa-heart:before{content:\"\\f004\"}.fa-star:before{content:\"\\f005\"}.fa-star-o:before{content:\"\\f006\"}.fa-user:before{content:\"\\f007\"}.fa-film:before{content:\"\\f008\"}.fa-th-large:before{content:\"\\f009\"}.fa-th:before{content:\"\\f00a\"}.fa-th-list:before{content:\"\\f00b\"}.fa-check:before{content:\"\\f00c\"}.fa-times:before{content:\"\\f00d\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-search-minus:before{content:\"\\f010\"}.fa-power-off:before{content:\"\\f011\"}.fa-signal:before{content:\"\\f012\"}.fa-gear:before,.fa-cog:before{content:\"\\f013\"}.fa-trash-o:before{content:\"\\f014\"}.fa-home:before{content:\"\\f015\"}.fa-file-o:before{content:\"\\f016\"}.fa-clock-o:before{content:\"\\f017\"}.fa-road:before{content:\"\\f018\"}.fa-download:before{content:\"\\f019\"}.fa-arrow-circle-o-down:before{content:\"\\f01a\"}.fa-arrow-circle-o-up:before{content:\"\\f01b\"}.fa-inbox:before{content:\"\\f01c\"}.fa-play-circle-o:before{content:\"\\f01d\"}.fa-rotate-right:before,.fa-repeat:before{content:\"\\f01e\"}.fa-refresh:before{content:\"\\f021\"}.fa-list-alt:before{content:\"\\f022\"}.fa-lock:before{content:\"\\f023\"}.fa-flag:before{content:\"\\f024\"}.fa-headphones:before{content:\"\\f025\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-up:before{content:\"\\f028\"}.fa-qrcode:before{content:\"\\f029\"}.fa-barcode:before{content:\"\\f02a\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-book:before{content:\"\\f02d\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-print:before{content:\"\\f02f\"}.fa-camera:before{content:\"\\f030\"}.fa-font:before{content:\"\\f031\"}.fa-bold:before{content:\"\\f032\"}.fa-italic:before{content:\"\\f033\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-right:before{content:\"\\f038\"}.fa-align-justify:before{content:\"\\f039\"}.fa-list:before{content:\"\\f03a\"}.fa-dedent:before,.fa-outdent:before{content:\"\\f03b\"}.fa-indent:before{content:\"\\f03c\"}.fa-video-camera:before{content:\"\\f03d\"}.fa-photo:before,.fa-image:before,.fa-picture-o:before{content:\"\\f03e\"}.fa-pencil:before{content:\"\\f040\"}.fa-map-marker:before{content:\"\\f041\"}.fa-adjust:before{content:\"\\f042\"}.fa-tint:before{content:\"\\f043\"}.fa-edit:before,.fa-pencil-square-o:before{content:\"\\f044\"}.fa-share-square-o:before{content:\"\\f045\"}.fa-check-square-o:before{content:\"\\f046\"}.fa-arrows:before{content:\"\\f047\"}.fa-step-backward:before{content:\"\\f048\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-backward:before{content:\"\\f04a\"}.fa-play:before{content:\"\\f04b\"}.fa-pause:before{content:\"\\f04c\"}.fa-stop:before{content:\"\\f04d\"}.fa-forward:before{content:\"\\f04e\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-step-forward:before{content:\"\\f051\"}.fa-eject:before{content:\"\\f052\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-times-circle:before{content:\"\\f057\"}.fa-check-circle:before{content:\"\\f058\"}.fa-question-circle:before{content:\"\\f059\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-times-circle-o:before{content:\"\\f05c\"}.fa-check-circle-o:before{content:\"\\f05d\"}.fa-ban:before{content:\"\\f05e\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-mail-forward:before,.fa-share:before{content:\"\\f064\"}.fa-expand:before{content:\"\\f065\"}.fa-compress:before{content:\"\\f066\"}.fa-plus:before{content:\"\\f067\"}.fa-minus:before{content:\"\\f068\"}.fa-asterisk:before{content:\"\\f069\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-gift:before{content:\"\\f06b\"}.fa-leaf:before{content:\"\\f06c\"}.fa-fire:before{content:\"\\f06d\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-warning:before,.fa-exclamation-triangle:before{content:\"\\f071\"}.fa-plane:before{content:\"\\f072\"}.fa-calendar:before{content:\"\\f073\"}.fa-random:before{content:\"\\f074\"}.fa-comment:before{content:\"\\f075\"}.fa-magnet:before{content:\"\\f076\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-retweet:before{content:\"\\f079\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-arrows-v:before{content:\"\\f07d\"}.fa-arrows-h:before{content:\"\\f07e\"}.fa-bar-chart-o:before{content:\"\\f080\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-key:before{content:\"\\f084\"}.fa-gears:before,.fa-cogs:before{content:\"\\f085\"}.fa-comments:before{content:\"\\f086\"}.fa-thumbs-o-up:before{content:\"\\f087\"}.fa-thumbs-o-down:before{content:\"\\f088\"}.fa-star-half:before{content:\"\\f089\"}.fa-heart-o:before{content:\"\\f08a\"}.fa-sign-out:before{content:\"\\f08b\"}.fa-linkedin-square:before{content:\"\\f08c\"}.fa-thumb-tack:before{content:\"\\f08d\"}.fa-external-link:before{content:\"\\f08e\"}.fa-sign-in:before{content:\"\\f090\"}.fa-trophy:before{content:\"\\f091\"}.fa-github-square:before{content:\"\\f092\"}.fa-upload:before{content:\"\\f093\"}.fa-lemon-o:before{content:\"\\f094\"}.fa-phone:before{content:\"\\f095\"}.fa-square-o:before{content:\"\\f096\"}.fa-bookmark-o:before{content:\"\\f097\"}.fa-phone-square:before{content:\"\\f098\"}.fa-twitter:before{content:\"\\f099\"}.fa-facebook:before{content:\"\\f09a\"}.fa-github:before{content:\"\\f09b\"}.fa-unlock:before{content:\"\\f09c\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-rss:before{content:\"\\f09e\"}.fa-hdd-o:before{content:\"\\f0a0\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bell:before{content:\"\\f0f3\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-hand-o-right:before{content:\"\\f0a4\"}.fa-hand-o-left:before{content:\"\\f0a5\"}.fa-hand-o-up:before{content:\"\\f0a6\"}.fa-hand-o-down:before{content:\"\\f0a7\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-globe:before{content:\"\\f0ac\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-filter:before{content:\"\\f0b0\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-group:before,.fa-users:before{content:\"\\f0c0\"}.fa-chain:before,.fa-link:before{content:\"\\f0c1\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-flask:before{content:\"\\f0c3\"}.fa-cut:before,.fa-scissors:before{content:\"\\f0c4\"}.fa-copy:before,.fa-files-o:before{content:\"\\f0c5\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-save:before,.fa-floppy-o:before{content:\"\\f0c7\"}.fa-square:before{content:\"\\f0c8\"}.fa-navicon:before,.fa-reorder:before,.fa-bars:before{content:\"\\f0c9\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-underline:before{content:\"\\f0cd\"}.fa-table:before{content:\"\\f0ce\"}.fa-magic:before{content:\"\\f0d0\"}.fa-truck:before{content:\"\\f0d1\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-plus:before{content:\"\\f0d5\"}.fa-money:before{content:\"\\f0d6\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-columns:before{content:\"\\f0db\"}.fa-unsorted:before,.fa-sort:before{content:\"\\f0dc\"}.fa-sort-down:before,.fa-sort-desc:before{content:\"\\f0dd\"}.fa-sort-up:before,.fa-sort-asc:before{content:\"\\f0de\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-linkedin:before{content:\"\\f0e1\"}.fa-rotate-left:before,.fa-undo:before{content:\"\\f0e2\"}.fa-legal:before,.fa-gavel:before{content:\"\\f0e3\"}.fa-dashboard:before,.fa-tachometer:before{content:\"\\f0e4\"}.fa-comment-o:before{content:\"\\f0e5\"}.fa-comments-o:before{content:\"\\f0e6\"}.fa-flash:before,.fa-bolt:before{content:\"\\f0e7\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-paste:before,.fa-clipboard:before{content:\"\\f0ea\"}.fa-lightbulb-o:before{content:\"\\f0eb\"}.fa-exchange:before{content:\"\\f0ec\"}.fa-cloud-download:before{content:\"\\f0ed\"}.fa-cloud-upload:before{content:\"\\f0ee\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-bell-o:before{content:\"\\f0a2\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cutlery:before{content:\"\\f0f5\"}.fa-file-text-o:before{content:\"\\f0f6\"}.fa-building-o:before{content:\"\\f0f7\"}.fa-hospital-o:before{content:\"\\f0f8\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-beer:before{content:\"\\f0fc\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angle-down:before{content:\"\\f107\"}.fa-desktop:before{content:\"\\f108\"}.fa-laptop:before{content:\"\\f109\"}.fa-tablet:before{content:\"\\f10a\"}.fa-mobile-phone:before,.fa-mobile:before{content:\"\\f10b\"}.fa-circle-o:before{content:\"\\f10c\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-spinner:before{content:\"\\f110\"}.fa-circle:before{content:\"\\f111\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\f112\"}.fa-github-alt:before{content:\"\\f113\"}.fa-folder-o:before{content:\"\\f114\"}.fa-folder-open-o:before{content:\"\\f115\"}.fa-smile-o:before{content:\"\\f118\"}.fa-frown-o:before{content:\"\\f119\"}.fa-meh-o:before{content:\"\\f11a\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-keyboard-o:before{content:\"\\f11c\"}.fa-flag-o:before{content:\"\\f11d\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-terminal:before{content:\"\\f120\"}.fa-code:before{content:\"\\f121\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\"\\f122\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\"\\f123\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-crop:before{content:\"\\f125\"}.fa-code-fork:before{content:\"\\f126\"}.fa-unlink:before,.fa-chain-broken:before{content:\"\\f127\"}.fa-question:before{content:\"\\f128\"}.fa-info:before{content:\"\\f129\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-superscript:before{content:\"\\f12b\"}.fa-subscript:before{content:\"\\f12c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-shield:before{content:\"\\f132\"}.fa-calendar-o:before{content:\"\\f133\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-rocket:before{content:\"\\f135\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-html5:before{content:\"\\f13b\"}.fa-css3:before{content:\"\\f13c\"}.fa-anchor:before{content:\"\\f13d\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-bullseye:before{content:\"\\f140\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-rss-square:before{content:\"\\f143\"}.fa-play-circle:before{content:\"\\f144\"}.fa-ticket:before{content:\"\\f145\"}.fa-minus-square:before{content:\"\\f146\"}.fa-minus-square-o:before{content:\"\\f147\"}.fa-level-up:before{content:\"\\f148\"}.fa-level-down:before{content:\"\\f149\"}.fa-check-square:before{content:\"\\f14a\"}.fa-pencil-square:before{content:\"\\f14b\"}.fa-external-link-square:before{content:\"\\f14c\"}.fa-share-square:before{content:\"\\f14d\"}.fa-compass:before{content:\"\\f14e\"}.fa-toggle-down:before,.fa-caret-square-o-down:before{content:\"\\f150\"}.fa-toggle-up:before,.fa-caret-square-o-up:before{content:\"\\f151\"}.fa-toggle-right:before,.fa-caret-square-o-right:before{content:\"\\f152\"}.fa-euro:before,.fa-eur:before{content:\"\\f153\"}.fa-gbp:before{content:\"\\f154\"}.fa-dollar:before,.fa-usd:before{content:\"\\f155\"}.fa-rupee:before,.fa-inr:before{content:\"\\f156\"}.fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:\"\\f157\"}.fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:\"\\f158\"}.fa-won:before,.fa-krw:before{content:\"\\f159\"}.fa-bitcoin:before,.fa-btc:before{content:\"\\f15a\"}.fa-file:before{content:\"\\f15b\"}.fa-file-text:before{content:\"\\f15c\"}.fa-sort-alpha-asc:before{content:\"\\f15d\"}.fa-sort-alpha-desc:before{content:\"\\f15e\"}.fa-sort-amount-asc:before{content:\"\\f160\"}.fa-sort-amount-desc:before{content:\"\\f161\"}.fa-sort-numeric-asc:before{content:\"\\f162\"}.fa-sort-numeric-desc:before{content:\"\\f163\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-youtube-square:before{content:\"\\f166\"}.fa-youtube:before{content:\"\\f167\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-youtube-play:before{content:\"\\f16a\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-instagram:before{content:\"\\f16d\"}.fa-flickr:before{content:\"\\f16e\"}.fa-adn:before{content:\"\\f170\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitbucket-square:before{content:\"\\f172\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-long-arrow-down:before{content:\"\\f175\"}.fa-long-arrow-up:before{content:\"\\f176\"}.fa-long-arrow-left:before{content:\"\\f177\"}.fa-long-arrow-right:before{content:\"\\f178\"}.fa-apple:before{content:\"\\f179\"}.fa-windows:before{content:\"\\f17a\"}.fa-android:before{content:\"\\f17b\"}.fa-linux:before{content:\"\\f17c\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-skype:before{content:\"\\f17e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-trello:before{content:\"\\f181\"}.fa-female:before{content:\"\\f182\"}.fa-male:before{content:\"\\f183\"}.fa-gittip:before{content:\"\\f184\"}.fa-sun-o:before{content:\"\\f185\"}.fa-moon-o:before{content:\"\\f186\"}.fa-archive:before{content:\"\\f187\"}.fa-bug:before{content:\"\\f188\"}.fa-vk:before{content:\"\\f189\"}.fa-weibo:before{content:\"\\f18a\"}.fa-renren:before{content:\"\\f18b\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-arrow-circle-o-right:before{content:\"\\f18e\"}.fa-arrow-circle-o-left:before{content:\"\\f190\"}.fa-toggle-left:before,.fa-caret-square-o-left:before{content:\"\\f191\"}.fa-dot-circle-o:before{content:\"\\f192\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-turkish-lira:before,.fa-try:before{content:\"\\f195\"}.fa-plus-square-o:before{content:\"\\f196\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-slack:before{content:\"\\f198\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-openid:before{content:\"\\f19b\"}.fa-institution:before,.fa-bank:before,.fa-university:before{content:\"\\f19c\"}.fa-mortar-board:before,.fa-graduation-cap:before{content:\"\\f19d\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-google:before{content:\"\\f1a0\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-digg:before{content:\"\\f1a6\"}.fa-pied-piper-square:before,.fa-pied-piper:before{content:\"\\f1a7\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-language:before{content:\"\\f1ab\"}.fa-fax:before{content:\"\\f1ac\"}.fa-building:before{content:\"\\f1ad\"}.fa-child:before{content:\"\\f1ae\"}.fa-paw:before{content:\"\\f1b0\"}.fa-spoon:before{content:\"\\f1b1\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-automobile:before,.fa-car:before{content:\"\\f1b9\"}.fa-cab:before,.fa-taxi:before{content:\"\\f1ba\"}.fa-tree:before{content:\"\\f1bb\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-database:before{content:\"\\f1c0\"}.fa-file-pdf-o:before{content:\"\\f1c1\"}.fa-file-word-o:before{content:\"\\f1c2\"}.fa-file-excel-o:before{content:\"\\f1c3\"}.fa-file-powerpoint-o:before{content:\"\\f1c4\"}.fa-file-photo-o:before,.fa-file-picture-o:before,.fa-file-image-o:before{content:\"\\f1c5\"}.fa-file-zip-o:before,.fa-file-archive-o:before{content:\"\\f1c6\"}.fa-file-sound-o:before,.fa-file-audio-o:before{content:\"\\f1c7\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\"\\f1c8\"}.fa-file-code-o:before{content:\"\\f1c9\"}.fa-vine:before{content:\"\\f1ca\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-life-bouy:before,.fa-life-saver:before,.fa-support:before,.fa-life-ring:before{content:\"\\f1cd\"}.fa-circle-o-notch:before{content:\"\\f1ce\"}.fa-ra:before,.fa-rebel:before{content:\"\\f1d0\"}.fa-ge:before,.fa-empire:before{content:\"\\f1d1\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-git:before{content:\"\\f1d3\"}.fa-hacker-news:before{content:\"\\f1d4\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-qq:before{content:\"\\f1d6\"}.fa-wechat:before,.fa-weixin:before{content:\"\\f1d7\"}.fa-send:before,.fa-paper-plane:before{content:\"\\f1d8\"}.fa-send-o:before,.fa-paper-plane-o:before{content:\"\\f1d9\"}.fa-history:before{content:\"\\f1da\"}.fa-circle-thin:before{content:\"\\f1db\"}.fa-header:before{content:\"\\f1dc\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-sliders:before{content:\"\\f1de\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-bomb:before{content:\"\\f1e2\"}\n\n/Users/bbmm/github/dazahui/ectouch20/themes/default/sale/bootstrap/css/font-awesome.min.css:\n    2   *  Font Awesome 4.1.0 by @davegandy - http://fontawesome.io - @fontawesome\n    3   *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\n    4:  */@font-face{font-family:'FontAwesome';src:url('../fonts/fontawesome-webfont.eot?v=4.1.0');src:url('../fonts/fontawesome-webfont.eot?#iefix&v=4.1.0') format('embedded-opentype'),url('../fonts/fontawesome-webfont.woff?v=4.1.0') format('woff'),url('../fonts/fontawesome-webfont.ttf?v=4.1.0') format('truetype'),url('../fonts/fontawesome-webfont.svg?v=4.1.0#fontawesomeregular') format('svg');font-weight:normal;font-style:normal}.fa{display:inline-block;font-family:FontAwesome;font-style:normal;font-weight:normal;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:spin 2s infinite linear;-moz-animation:spin 2s infinite linear;-o-animation:spin 2s infinite linear;animation:spin 2s infinite linear}@-moz-keyframes spin{0%{-moz-transform:rotate(0deg)}100%{-moz-transform:rotate(359deg)}}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg)}}@-o-keyframes spin{0%{-o-transform:rotate(0deg)}100%{-o-transform:rotate(359deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);-webkit-transform:rotate(90deg);-moz-transform:rotate(90deg);-ms-transform:rotate(90deg);-o-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-ms-transform:rotate(180deg);-o-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);-webkit-transform:rotate(270deg);-moz-transform:rotate(270deg);-ms-transform:rotate(270deg);-o-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);-webkit-transform:scale(-1, 1);-moz-transform:scale(-1, 1);-ms-transform:scale(-1, 1);-o-transform:scale(-1, 1);transform:scale(-1, 1)}.fa-flip-vertical{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);-webkit-transform:scale(1, -1);-moz-transform:scale(1, -1);-ms-transform:scale(1, -1);-o-transform:scale(1, -1);transform:scale(1, -1)}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\"\\f000\"}.fa-music:before{content:\"\\f001\"}.fa-search:before{content:\"\\f002\"}.fa-envelope-o:before{content:\"\\f003\"}.fa-heart:before{content:\"\\f004\"}.fa-star:before{content:\"\\f005\"}.fa-star-o:before{content:\"\\f006\"}.fa-user:before{content:\"\\f007\"}.fa-film:before{content:\"\\f008\"}.fa-th-large:before{content:\"\\f009\"}.fa-th:before{content:\"\\f00a\"}.fa-th-list:before{content:\"\\f00b\"}.fa-check:before{content:\"\\f00c\"}.fa-times:before{content:\"\\f00d\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-search-minus:before{content:\"\\f010\"}.fa-power-off:before{content:\"\\f011\"}.fa-signal:before{content:\"\\f012\"}.fa-gear:before,.fa-cog:before{content:\"\\f013\"}.fa-trash-o:before{content:\"\\f014\"}.fa-home:before{content:\"\\f015\"}.fa-file-o:before{content:\"\\f016\"}.fa-clock-o:before{content:\"\\f017\"}.fa-road:before{content:\"\\f018\"}.fa-download:before{content:\"\\f019\"}.fa-arrow-circle-o-down:before{content:\"\\f01a\"}.fa-arrow-circle-o-up:before{content:\"\\f01b\"}.fa-inbox:before{content:\"\\f01c\"}.fa-play-circle-o:before{content:\"\\f01d\"}.fa-rotate-right:before,.fa-repeat:before{content:\"\\f01e\"}.fa-refresh:before{content:\"\\f021\"}.fa-list-alt:before{content:\"\\f022\"}.fa-lock:before{content:\"\\f023\"}.fa-flag:before{content:\"\\f024\"}.fa-headphones:before{content:\"\\f025\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-up:before{content:\"\\f028\"}.fa-qrcode:before{content:\"\\f029\"}.fa-barcode:before{content:\"\\f02a\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-book:before{content:\"\\f02d\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-print:before{content:\"\\f02f\"}.fa-camera:before{content:\"\\f030\"}.fa-font:before{content:\"\\f031\"}.fa-bold:before{content:\"\\f032\"}.fa-italic:before{content:\"\\f033\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-right:before{content:\"\\f038\"}.fa-align-justify:before{content:\"\\f039\"}.fa-list:before{content:\"\\f03a\"}.fa-dedent:before,.fa-outdent:before{content:\"\\f03b\"}.fa-indent:before{content:\"\\f03c\"}.fa-video-camera:before{content:\"\\f03d\"}.fa-photo:before,.fa-image:before,.fa-picture-o:before{content:\"\\f03e\"}.fa-pencil:before{content:\"\\f040\"}.fa-map-marker:before{content:\"\\f041\"}.fa-adjust:before{content:\"\\f042\"}.fa-tint:before{content:\"\\f043\"}.fa-edit:before,.fa-pencil-square-o:before{content:\"\\f044\"}.fa-share-square-o:before{content:\"\\f045\"}.fa-check-square-o:before{content:\"\\f046\"}.fa-arrows:before{content:\"\\f047\"}.fa-step-backward:before{content:\"\\f048\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-backward:before{content:\"\\f04a\"}.fa-play:before{content:\"\\f04b\"}.fa-pause:before{content:\"\\f04c\"}.fa-stop:before{content:\"\\f04d\"}.fa-forward:before{content:\"\\f04e\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-step-forward:before{content:\"\\f051\"}.fa-eject:before{content:\"\\f052\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-times-circle:before{content:\"\\f057\"}.fa-check-circle:before{content:\"\\f058\"}.fa-question-circle:before{content:\"\\f059\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-times-circle-o:before{content:\"\\f05c\"}.fa-check-circle-o:before{content:\"\\f05d\"}.fa-ban:before{content:\"\\f05e\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-mail-forward:before,.fa-share:before{content:\"\\f064\"}.fa-expand:before{content:\"\\f065\"}.fa-compress:before{content:\"\\f066\"}.fa-plus:before{content:\"\\f067\"}.fa-minus:before{content:\"\\f068\"}.fa-asterisk:before{content:\"\\f069\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-gift:before{content:\"\\f06b\"}.fa-leaf:before{content:\"\\f06c\"}.fa-fire:before{content:\"\\f06d\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-warning:before,.fa-exclamation-triangle:before{content:\"\\f071\"}.fa-plane:before{content:\"\\f072\"}.fa-calendar:before{content:\"\\f073\"}.fa-random:before{content:\"\\f074\"}.fa-comment:before{content:\"\\f075\"}.fa-magnet:before{content:\"\\f076\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-retweet:before{content:\"\\f079\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-arrows-v:before{content:\"\\f07d\"}.fa-arrows-h:before{content:\"\\f07e\"}.fa-bar-chart-o:before{content:\"\\f080\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-key:before{content:\"\\f084\"}.fa-gears:before,.fa-cogs:before{content:\"\\f085\"}.fa-comments:before{content:\"\\f086\"}.fa-thumbs-o-up:before{content:\"\\f087\"}.fa-thumbs-o-down:before{content:\"\\f088\"}.fa-star-half:before{content:\"\\f089\"}.fa-heart-o:before{content:\"\\f08a\"}.fa-sign-out:before{content:\"\\f08b\"}.fa-linkedin-square:before{content:\"\\f08c\"}.fa-thumb-tack:before{content:\"\\f08d\"}.fa-external-link:before{content:\"\\f08e\"}.fa-sign-in:before{content:\"\\f090\"}.fa-trophy:before{content:\"\\f091\"}.fa-github-square:before{content:\"\\f092\"}.fa-upload:before{content:\"\\f093\"}.fa-lemon-o:before{content:\"\\f094\"}.fa-phone:before{content:\"\\f095\"}.fa-square-o:before{content:\"\\f096\"}.fa-bookmark-o:before{content:\"\\f097\"}.fa-phone-square:before{content:\"\\f098\"}.fa-twitter:before{content:\"\\f099\"}.fa-facebook:before{content:\"\\f09a\"}.fa-github:before{content:\"\\f09b\"}.fa-unlock:before{content:\"\\f09c\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-rss:before{content:\"\\f09e\"}.fa-hdd-o:before{content:\"\\f0a0\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bell:before{content:\"\\f0f3\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-hand-o-right:before{content:\"\\f0a4\"}.fa-hand-o-left:before{content:\"\\f0a5\"}.fa-hand-o-up:before{content:\"\\f0a6\"}.fa-hand-o-down:before{content:\"\\f0a7\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-globe:before{content:\"\\f0ac\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-filter:before{content:\"\\f0b0\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-group:before,.fa-users:before{content:\"\\f0c0\"}.fa-chain:before,.fa-link:before{content:\"\\f0c1\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-flask:before{content:\"\\f0c3\"}.fa-cut:before,.fa-scissors:before{content:\"\\f0c4\"}.fa-copy:before,.fa-files-o:before{content:\"\\f0c5\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-save:before,.fa-floppy-o:before{content:\"\\f0c7\"}.fa-square:before{content:\"\\f0c8\"}.fa-navicon:before,.fa-reorder:before,.fa-bars:before{content:\"\\f0c9\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-underline:before{content:\"\\f0cd\"}.fa-table:before{content:\"\\f0ce\"}.fa-magic:before{content:\"\\f0d0\"}.fa-truck:before{content:\"\\f0d1\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-plus:before{content:\"\\f0d5\"}.fa-money:before{content:\"\\f0d6\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-columns:before{content:\"\\f0db\"}.fa-unsorted:before,.fa-sort:before{content:\"\\f0dc\"}.fa-sort-down:before,.fa-sort-desc:before{content:\"\\f0dd\"}.fa-sort-up:before,.fa-sort-asc:before{content:\"\\f0de\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-linkedin:before{content:\"\\f0e1\"}.fa-rotate-left:before,.fa-undo:before{content:\"\\f0e2\"}.fa-legal:before,.fa-gavel:before{content:\"\\f0e3\"}.fa-dashboard:before,.fa-tachometer:before{content:\"\\f0e4\"}.fa-comment-o:before{content:\"\\f0e5\"}.fa-comments-o:before{content:\"\\f0e6\"}.fa-flash:before,.fa-bolt:before{content:\"\\f0e7\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-paste:before,.fa-clipboard:before{content:\"\\f0ea\"}.fa-lightbulb-o:before{content:\"\\f0eb\"}.fa-exchange:before{content:\"\\f0ec\"}.fa-cloud-download:before{content:\"\\f0ed\"}.fa-cloud-upload:before{content:\"\\f0ee\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-bell-o:before{content:\"\\f0a2\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cutlery:before{content:\"\\f0f5\"}.fa-file-text-o:before{content:\"\\f0f6\"}.fa-building-o:before{content:\"\\f0f7\"}.fa-hospital-o:before{content:\"\\f0f8\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-beer:before{content:\"\\f0fc\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angle-down:before{content:\"\\f107\"}.fa-desktop:before{content:\"\\f108\"}.fa-laptop:before{content:\"\\f109\"}.fa-tablet:before{content:\"\\f10a\"}.fa-mobile-phone:before,.fa-mobile:before{content:\"\\f10b\"}.fa-circle-o:before{content:\"\\f10c\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-spinner:before{content:\"\\f110\"}.fa-circle:before{content:\"\\f111\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\f112\"}.fa-github-alt:before{content:\"\\f113\"}.fa-folder-o:before{content:\"\\f114\"}.fa-folder-open-o:before{content:\"\\f115\"}.fa-smile-o:before{content:\"\\f118\"}.fa-frown-o:before{content:\"\\f119\"}.fa-meh-o:before{content:\"\\f11a\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-keyboard-o:before{content:\"\\f11c\"}.fa-flag-o:before{content:\"\\f11d\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-terminal:before{content:\"\\f120\"}.fa-code:before{content:\"\\f121\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\"\\f122\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\"\\f123\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-crop:before{content:\"\\f125\"}.fa-code-fork:before{content:\"\\f126\"}.fa-unlink:before,.fa-chain-broken:before{content:\"\\f127\"}.fa-question:before{content:\"\\f128\"}.fa-info:before{content:\"\\f129\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-superscript:before{content:\"\\f12b\"}.fa-subscript:before{content:\"\\f12c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-shield:before{content:\"\\f132\"}.fa-calendar-o:before{content:\"\\f133\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-rocket:before{content:\"\\f135\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-html5:before{content:\"\\f13b\"}.fa-css3:before{content:\"\\f13c\"}.fa-anchor:before{content:\"\\f13d\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-bullseye:before{content:\"\\f140\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-rss-square:before{content:\"\\f143\"}.fa-play-circle:before{content:\"\\f144\"}.fa-ticket:before{content:\"\\f145\"}.fa-minus-square:before{content:\"\\f146\"}.fa-minus-square-o:before{content:\"\\f147\"}.fa-level-up:before{content:\"\\f148\"}.fa-level-down:before{content:\"\\f149\"}.fa-check-square:before{content:\"\\f14a\"}.fa-pencil-square:before{content:\"\\f14b\"}.fa-external-link-square:before{content:\"\\f14c\"}.fa-share-square:before{content:\"\\f14d\"}.fa-compass:before{content:\"\\f14e\"}.fa-toggle-down:before,.fa-caret-square-o-down:before{content:\"\\f150\"}.fa-toggle-up:before,.fa-caret-square-o-up:before{content:\"\\f151\"}.fa-toggle-right:before,.fa-caret-square-o-right:before{content:\"\\f152\"}.fa-euro:before,.fa-eur:before{content:\"\\f153\"}.fa-gbp:before{content:\"\\f154\"}.fa-dollar:before,.fa-usd:before{content:\"\\f155\"}.fa-rupee:before,.fa-inr:before{content:\"\\f156\"}.fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:\"\\f157\"}.fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:\"\\f158\"}.fa-won:before,.fa-krw:before{content:\"\\f159\"}.fa-bitcoin:before,.fa-btc:before{content:\"\\f15a\"}.fa-file:before{content:\"\\f15b\"}.fa-file-text:before{content:\"\\f15c\"}.fa-sort-alpha-asc:before{content:\"\\f15d\"}.fa-sort-alpha-desc:before{content:\"\\f15e\"}.fa-sort-amount-asc:before{content:\"\\f160\"}.fa-sort-amount-desc:before{content:\"\\f161\"}.fa-sort-numeric-asc:before{content:\"\\f162\"}.fa-sort-numeric-desc:before{content:\"\\f163\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-youtube-square:before{content:\"\\f166\"}.fa-youtube:before{content:\"\\f167\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-youtube-play:before{content:\"\\f16a\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-instagram:before{content:\"\\f16d\"}.fa-flickr:before{content:\"\\f16e\"}.fa-adn:before{content:\"\\f170\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitbucket-square:before{content:\"\\f172\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-long-arrow-down:before{content:\"\\f175\"}.fa-long-arrow-up:before{content:\"\\f176\"}.fa-long-arrow-left:before{content:\"\\f177\"}.fa-long-arrow-right:before{content:\"\\f178\"}.fa-apple:before{content:\"\\f179\"}.fa-windows:before{content:\"\\f17a\"}.fa-android:before{content:\"\\f17b\"}.fa-linux:before{content:\"\\f17c\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-skype:before{content:\"\\f17e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-trello:before{content:\"\\f181\"}.fa-female:before{content:\"\\f182\"}.fa-male:before{content:\"\\f183\"}.fa-gittip:before{content:\"\\f184\"}.fa-sun-o:before{content:\"\\f185\"}.fa-moon-o:before{content:\"\\f186\"}.fa-archive:before{content:\"\\f187\"}.fa-bug:before{content:\"\\f188\"}.fa-vk:before{content:\"\\f189\"}.fa-weibo:before{content:\"\\f18a\"}.fa-renren:before{content:\"\\f18b\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-arrow-circle-o-right:before{content:\"\\f18e\"}.fa-arrow-circle-o-left:before{content:\"\\f190\"}.fa-toggle-left:before,.fa-caret-square-o-left:before{content:\"\\f191\"}.fa-dot-circle-o:before{content:\"\\f192\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-turkish-lira:before,.fa-try:before{content:\"\\f195\"}.fa-plus-square-o:before{content:\"\\f196\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-slack:before{content:\"\\f198\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-openid:before{content:\"\\f19b\"}.fa-institution:before,.fa-bank:before,.fa-university:before{content:\"\\f19c\"}.fa-mortar-board:before,.fa-graduation-cap:before{content:\"\\f19d\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-google:before{content:\"\\f1a0\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-digg:before{content:\"\\f1a6\"}.fa-pied-piper-square:before,.fa-pied-piper:before{content:\"\\f1a7\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-language:before{content:\"\\f1ab\"}.fa-fax:before{content:\"\\f1ac\"}.fa-building:before{content:\"\\f1ad\"}.fa-child:before{content:\"\\f1ae\"}.fa-paw:before{content:\"\\f1b0\"}.fa-spoon:before{content:\"\\f1b1\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-automobile:before,.fa-car:before{content:\"\\f1b9\"}.fa-cab:before,.fa-taxi:before{content:\"\\f1ba\"}.fa-tree:before{content:\"\\f1bb\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-database:before{content:\"\\f1c0\"}.fa-file-pdf-o:before{content:\"\\f1c1\"}.fa-file-word-o:before{content:\"\\f1c2\"}.fa-file-excel-o:before{content:\"\\f1c3\"}.fa-file-powerpoint-o:before{content:\"\\f1c4\"}.fa-file-photo-o:before,.fa-file-picture-o:before,.fa-file-image-o:before{content:\"\\f1c5\"}.fa-file-zip-o:before,.fa-file-archive-o:before{content:\"\\f1c6\"}.fa-file-sound-o:before,.fa-file-audio-o:before{content:\"\\f1c7\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\"\\f1c8\"}.fa-file-code-o:before{content:\"\\f1c9\"}.fa-vine:before{content:\"\\f1ca\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-life-bouy:before,.fa-life-saver:before,.fa-support:before,.fa-life-ring:before{content:\"\\f1cd\"}.fa-circle-o-notch:before{content:\"\\f1ce\"}.fa-ra:before,.fa-rebel:before{content:\"\\f1d0\"}.fa-ge:before,.fa-empire:before{content:\"\\f1d1\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-git:before{content:\"\\f1d3\"}.fa-hacker-news:before{content:\"\\f1d4\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-qq:before{content:\"\\f1d6\"}.fa-wechat:before,.fa-weixin:before{content:\"\\f1d7\"}.fa-send:before,.fa-paper-plane:before{content:\"\\f1d8\"}.fa-send-o:before,.fa-paper-plane-o:before{content:\"\\f1d9\"}.fa-history:before{content:\"\\f1da\"}.fa-circle-thin:before{content:\"\\f1db\"}.fa-header:before{content:\"\\f1dc\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-sliders:before{content:\"\\f1de\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-bomb:before{content:\"\\f1e2\"}\n\n456 matches across 40 files\n",
			"settings":
			{
				"buffer_size": 131775,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "include/apps/default/helpers/function.php",
			"settings":
			{
				"buffer_size": 53449,
				"line_ending": "Windows"
			}
		},
		{
			"file": "include/apps/default/controllers/MY_FlowController.class.php",
			"settings":
			{
				"buffer_size": 24516,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\n\n/**\n * ECTouch Open Source Project\n * ============================================================================\n * Copyright (c) 2012-2014 http://ectouch.cn All rights reserved.\n * ----------------------------------------------------------------------------\n * 文件名称：FlowControoller.class.php\n * ----------------------------------------------------------------------------\n * 功能描述：购物流程控制器\n * ----------------------------------------------------------------------------\n * Licensed ( http://www.ectouch.cn/docs/license.txt )\n * ----------------------------------------------------------------------------\n */\n/* 访问控制 */\ndefined('IN_ECTOUCH') or die('Deny Access');\n\nclass FlowController extends CommonController {\n\n    /**\n     * 购物车列表\n     */\n    public function index() {\n		$_SESSION['flow_type'] = CART_GENERAL_GOODS;\n        /* 如果是一步购物，跳到结算中心 */\n        if (C('one_step_buy') == '1') {\n            ecs_header(\"Location: \" . url('flow/checkout') . \"\\n\");\n        }\n\n        // 取得商品列表，计算合计\n        $cart_goods = model('Order')->get_cart_goods();\n        $this->assign('goods_list', $cart_goods ['goods_list']);\n        $this->assign('total', $cart_goods ['total']);\n\n        if ($cart_goods['goods_list']) {\n            // 相关产品\n            $linked_goods = model('Goods')->get_linked_goods($cart_goods ['goods_list']);\n            $this->assign('linked_goods', $linked_goods);\n        }\n\n        // 购物车的描述的格式化\n        $this->assign('shopping_money', sprintf(L('shopping_money'), $cart_goods ['total'] ['goods_price']));\n        $this->assign('market_price_desc', sprintf(L('than_market_price'), $cart_goods ['total'] ['market_price'], $cart_goods ['total'] ['saving'], $cart_goods ['total'] ['save_rate']));\n\n        // 取得优惠活动\n        $favourable_list = model('Flow')->favourable_list_flow($_SESSION ['user_rank']);\n        usort($favourable_list, array(\"FlowModel\", \"cmp_favourable\"));\n        $this->assign('favourable_list', $favourable_list);\n\n        // 计算折扣\n        $discount = model('Order')->compute_discount();\n        $this->assign('discount', $discount ['discount']);\n\n        // 折扣信息\n        $favour_name = empty($discount ['name']) ? '' : join(',', $discount ['name']);\n        $this->assign('your_discount', sprintf(L('your_discount'), $favour_name, price_format($discount ['discount'])));\n\n        // 增加是否在购物车里显示商品图\n        $this->assign('show_goods_thumb', C('show_goods_in_cart'));\n\n        // 增加是否在购物车里显示商品属性\n        $this->assign('show_goods_attribute', C('show_attr_in_cart'));\n\n        // 取得购物车中基本件ID\n        $condition = \"session_id = '\" . SESS_ID . \"' \" . \"AND rec_type = '\" . CART_GENERAL_GOODS . \"' \" . \"AND is_gift = 0 \" . \"AND extension_code <> 'package_buy' \" . \"AND parent_id = 0 \";\n        $parent_list = $this->model->table('cart')->field('goods_id')->where($condition)->getCol();\n        //根据基本件id获取 购物车中商品配件列表\n        $fittings_list = model('Goods')->get_goods_fittings($parent_list);\n        $this->assign('fittings_list', $fittings_list);\n        $this->assign('currency_format', C('currency_format'));\n        $this->assign('integral_scale', C('integral_scale'));\n        $this->assign('step', 'cart');\n        $this->assign('title', L('shopping_cart'));\n        $this->display('flow.dwt');\n    }\n\n    /**\n     * 获取购物车内的相关配件\n     */\n    public function goods_fittings() {\n        if (IS_AJAX) {\n            $start = $_POST ['last'];\n            $limit = $_POST ['amount'];\n            $condition = \"session_id = '\" . SESS_ID . \"' \" . \"AND rec_type = '\" . CART_GENERAL_GOODS . \"' \" . \"AND is_gift = 0 \" . \"AND extension_code <> 'package_buy' \" . \"AND parent_id = 0\";\n            $parent_list = $this->model->table('cart')->field('goods_id')->where($condition)->getCol();\n            //根据基本件id获取 购物车中商品配件列表\n            $fittings_list = model('Goods')->get_goods_fittings($parent_list);\n            if ($fittings_list) {\n                foreach ($fittings_list as $key => $fittings) {\n                    $this->assign('fittings', $fittings);\n                    $sayList[] = array(\n                        'single_item' => ECTouch::view()->fetch('library/asynclist_info.lbi')\n                    );\n                }\n            }\n            echo json_encode($sayList);\n            exit();\n        }\n\n        // 赋值于模板\n        $this->assign('title', L('goods_fittings'));\n\n        $this->display('goods_fittings.dwt');\n    }\n\n    /**\n     * 优惠活动（赠品）\n     */\n    public function label_favourable() {\n        // 取得优惠活动\n        $favourable_list = model('Flow')->favourable_list_flow($_SESSION ['user_rank']);\n        usort($favourable_list, array(\"FlowModel\", \"cmp_favourable\"));\n        $this->assign('favourable_list', $favourable_list);\n\n        $this->assign('step', 'label_favourable');\n        $this->assign('title', L('label_favourable'));\n        $this->display('flow.dwt');\n    }\n\n    /**\n     * 购物车列表 连接到index\n     */\n    public function cart() {\n        $this->index();\n    }\n\n    /**\n     * 立即购买\n     */\n    public function add_to_cart() {\n        //对goods处理\n        $_POST ['goods'] = strip_tags(urldecode($_POST ['goods']));\n        $_POST ['goods'] = json_str_iconv($_POST ['goods']);\n        if (!empty($_REQUEST ['goods_id']) && empty($_POST ['goods'])) {\n            if (!is_numeric($_REQUEST ['goods_id']) || intval($_REQUEST ['goods_id']) <= 0) {\n                ecs_header(\"Location:./\\n\");\n            }\n            $goods_id = intval($_REQUEST ['goods_id']);\n            exit();\n        }\n        // 初始化返回数组\n        $result = array(\n            'error' => 0,\n            'message' => '',\n            'content' => '',\n            'goods_id' => '',\n            'product_spec' => ''\n        );\n\n        if (empty($_POST ['goods'])) {\n            $result ['error'] = 1;\n            die(json_encode($result));\n        }\n        $json = new EcsJson;\n        $goods = $json->decode($_POST ['goods']);\n        $result['goods_id'] = $goods->goods_id;\n        $result['product_spec'] = $goods->spec;\n        // 检查：如果商品有规格，而post的数据没有规格，把商品的规格属性通过JSON传到前台\n        if (empty($goods->spec) and empty($goods->quick)) {\n            $sql = \"SELECT a.attr_id, a.attr_name, a.attr_type, \" . \"g.goods_attr_id, g.attr_value, g.attr_price \" . 'FROM ' . $this->model->pre . 'goods_attr AS g ' . 'LEFT JOIN ' . $this->model->pre . 'attribute AS a ON a.attr_id = g.attr_id ' . \"WHERE a.attr_type != 0 AND g.goods_id = '\" . $goods->goods_id . \"' \" . 'ORDER BY a.sort_order, g.attr_price, g.goods_attr_id';\n            $res = $this->model->query($sql);\n            if (!empty($res)) {\n                $spe_arr = array();\n                foreach ($res as $row) {\n                    $spe_arr [$row ['attr_id']] ['attr_type'] = $row ['attr_type'];\n                    $spe_arr [$row ['attr_id']] ['name'] = $row ['attr_name'];\n                    $spe_arr [$row ['attr_id']] ['attr_id'] = $row ['attr_id'];\n                    $spe_arr [$row ['attr_id']] ['values'] [] = array(\n                        'label' => $row ['attr_value'],\n                        'price' => $row ['attr_price'],\n                        'format_price' => price_format($row ['attr_price'], false),\n                        'id' => $row ['goods_attr_id']\n                    );\n                }\n                $i = 0;\n                $spe_array = array();\n                foreach ($spe_arr as $row) {\n                    $spe_array [] = $row;\n                }\n                $result ['error'] = ERR_NEED_SELECT_ATTR;\n                $result ['goods_id'] = $goods->goods_id;\n                $result ['parent'] = $goods->parent;\n                $result ['message'] = $spe_array;\n\n                die(json_encode($result));\n            }\n        }\n        // 更新：如果是一步购物，先清空购物车\n        if (C('one_step_buy') == '1') {\n            model('Order')->clear_cart();\n        }\n        // 查询：系统启用了库存，检查输入的商品数量是否有效\n        // 查询\n        $arrGoods = $this->model->table('goods')->field('goods_name,goods_number,extension_code')->where('goods_id =' . $goods->goods_id)->find();\n        $goodsnmber = model('Users')->get_goods_number($goods->goods_id);\n        $goodsnmber+=$goods->number;\n        if (intval(C('use_storage')) > 0 && $arrGoods ['extension_code'] != 'package_buy') {\n            if ($arrGoods ['goods_number'] < $goodsnmber) {\n                $result['error'] = 1;\n                $result['message'] = sprintf(L('stock_insufficiency'), $arrGoods ['goods_name'], $arrGoods ['goods_number'], $arrGoods ['goods_number']);\n                if (C('use_how_oos') == 1){\n                    $result['message'] =L('oos_tips');\n                }\n                die(json_encode($result));\n            }\n        }\n        // 检查：商品数量是否合法\n        if (!is_numeric($goods->number) || intval($goods->number) <= 0) {\n            $result ['error'] = 1;\n            $result ['message'] = L('invalid_number');\n        } else {\n            // 更新：添加到购物车\n            if (model('Order')->addto_cart($goods->goods_id, $goods->number, $goods->spec, $goods->parent)) {\n                if (C('cart_confirm') > 2) {\n                    $result ['message'] = '';\n                } else {\n                    $result ['message'] = C('cart_confirm') == 1 ? L('addto_cart_success_1') : L('addto_cart_success_2');\n                }\n                $result ['content'] = insert_cart_info();\n                $result ['one_step_buy'] = C('one_step_buy');\n            } else {\n                $result ['message'] = ECTouch::err()->last_message();\n                $result ['error'] = ECTouch::err()->error_no;\n                $result ['goods_id'] = stripslashes($goods->goods_id);\n                if (is_array($goods->spec)) {\n                    $result ['product_spec'] = implode(',', $goods->spec);\n                } else {\n                    $result ['product_spec'] = $goods->spec;\n                }\n            }\n        }\n        $cart_confirm = C('cart_confirm');\n        $result ['confirm_type'] = !empty($cart_confirm) ? C('cart_confirm') : 2;\n        // 返回购物车商品总数量\n        $result ['cart_number'] = insert_cart_info_number();\n        die(json_encode($result));\n    }\n\n    /**\n     * 点击刷新购物车\n     */\n    public function ajax_update_cart() {\n        //格式化返回数组\n        $result = array(\n            'error' => 0,\n            'message' => ''\n        );\n        // 是否有接收值\n        if (isset($_POST ['rec_id']) && isset($_POST ['goods_number'])) {\n            $key = $_POST ['rec_id'];\n            $val = $_POST ['goods_number'];\n            $val = intval(make_semiangle($val));\n            if ($val <= 0 && !is_numeric($key)) {\n                $result ['error'] = 99;\n                $result ['message'] = '';\n                die(json_encode($result));\n            }\n            // 查询：\n            $condition = \" rec_id='$key' AND session_id='\" . SESS_ID . \"'\";\n            $goods = $this->model->table('cart')->field('goods_id,goods_attr_id,product_id,extension_code')->where($condition)->find();\n\n            $sql = \"SELECT g.goods_name,g.goods_number \" . \"FROM \" . $this->model->pre . \"goods AS g, \" . $this->model->pre . \"cart AS c \" . \"WHERE g.goods_id =c.goods_id AND c.rec_id = '$key'\";\n            $res = $this->model->query($sql);\n            $row = $res[0];\n            // 查询：系统启用了库存，检查输入的商品数量是否有效\n            if (intval(C('use_storage')) > 0 && $goods ['extension_code'] != 'package_buy') {\n                if ($row ['goods_number'] < $val) {\n                    $result ['error'] = 1;\n                    $result ['message'] = sprintf(L('stock_insufficiency'), $row ['goods_name'], $row ['goods_number'], $row ['goods_number']);\n                    $result ['err_max_number'] = $row ['goods_number'];\n                    die(json_encode($result));\n                }\n                /* 是货品 */\n                $goods ['product_id'] = trim($goods ['product_id']);\n                if (!empty($goods ['product_id'])) {\n                    $condition = \" goods_id = '\" . $goods ['goods_id'] . \"' AND product_id = '\" . $goods ['product_id'] . \"'\";\n                    $product_number = $this->model->table('products')->field('product_number')->where($condition)->getOne();\n                    if ($product_number < $val) {\n                        $result ['error'] = 2;\n                        $result ['message'] = sprintf(L('stock_insufficiency'), $row ['goods_name'], $product_number, $product_number);\n                        die(json_encode($result));\n                    }\n                }\n            } elseif (intval(C('use_storage')) > 0 && $goods ['extension_code'] == 'package_buy') {\n                if (model('Order')->judge_package_stock($goods ['goods_id'], $val)) {\n                    $result ['error'] = 3;\n                    $result ['message'] = L('package_stock_insufficiency');\n                    die(json_encode($result));\n                }\n            }\n            /* 查询：检查该项是否为基本件 以及是否存在配件 */\n            /* 此处配件是指添加商品时附加的并且是设置了优惠价格的配件 此类配件都有parent_idgoods_number为1 */\n            $sql = \"SELECT b.goods_number,b.rec_id\n			FROM \" . $this->model->pre . \"cart a, \" . $this->model->pre . \"cart b\n				WHERE a.rec_id = '$key'\n				AND a.session_id = '\" . SESS_ID . \"'\n			AND a.extension_code <>'package_buy'\n			AND b.parent_id = a.goods_id\n			AND b.session_id = '\" . SESS_ID . \"'\";\n\n            $offers_accessories_res = $this->model->query($sql);\n\n            // 订货数量大于0\n            if ($val > 0) {\n                /* 判断是否为超出数量的优惠价格的配件 删除 */\n                $row_num = 1;\n                foreach ($offers_accessories_res as $offers_accessories_row) {\n                    if ($row_num > $val) {\n                        $sql = \"DELETE FROM\" . $this->model->pre . \"cart WHERE session_id = '\" . SESS_ID . \"' \" . \" AND rec_id ='\" . $offers_accessories_row ['rec_id'] . \"' LIMIT 1\";\n                        $this->model->query($sql);\n                    }\n\n                    $row_num++;\n                }\n\n                /* 处理超值礼包 */\n                if ($goods ['extension_code'] == 'package_buy') {\n                    // 更新购物车中的商品数量\n                    $sql = \"UPDATE \" . $this->model->pre . \"cart SET goods_number= '$val' WHERE rec_id='$key' AND session_id='\" . SESS_ID . \"'\";\n                } /* 处理普通商品或非优惠的配件 */ else {\n                    $attr_id = empty($goods ['goods_attr_id']) ? array() : explode(',', $goods ['goods_attr_id']);\n                    $goods_price = model('GoodsBase')->get_final_price($goods ['goods_id'], $val, true, $attr_id);\n\n                    // 更新购物车中的商品数量\n                    $sql = \"UPDATE \" . $this->model->pre . \"cart SET goods_number= '$val', goods_price = '$goods_price' WHERE rec_id='$key' AND session_id='\" . SESS_ID . \"'\";\n                }\n            }  // 订货数量等于0\n            else {\n                /* 如果是基本件并且有优惠价格的配件则删除优惠价格的配件 */\n                foreach ($offers_accessories_res as $offers_accessories_row) {\n                    $sql = \"DELETE FROM \" . $this->model->pre . \"cart WHERE session_id= '\" . SESS_ID . \"' \" . \"AND rec_id ='\" . $offers_accessories_row ['rec_id'] . \"' LIMIT 1\";\n                    $this->model->query($sql);\n                }\n\n                $sql = \"DELETE FROM \" . $this->model->pre . \"cart WHERE rec_id='$key' AND session_id='\" . SESS_ID . \"'\";\n            }\n\n            $this->model->query($sql);\n            /* 删除所有赠品 */\n            $sql = \"DELETE FROM \" . $this->model->pre . \"cart WHERE session_id = '\" . SESS_ID . \"' AND is_gift <> 0\";\n            $this->model->query($sql);\n\n            $result ['rec_id'] = $key;\n            $result ['goods_number'] = $val;\n            $result ['goods_subtotal'] = '';\n            $result ['total_desc'] = '';\n            $result ['cart_info'] = insert_cart_info();\n            /* 计算合计 */\n            $cart_goods = model('Order')->get_cart_goods();\n            foreach ($cart_goods ['goods_list'] as $goods) {\n                if ($goods ['rec_id'] == $key) {\n                    $result ['goods_subtotal'] = $goods ['subtotal'];\n                    break;\n                }\n            }\n            $market_price_desc = sprintf(L('than_market_price'), $cart_goods ['total'] ['market_price'], $cart_goods ['total'] ['saving'], $cart_goods ['total'] ['save_rate']);\n            /* 计算折扣 */\n            $discount = model('Order')->compute_discount();\n            $favour_name = empty($discount ['name']) ? '' : join(',', $discount ['name']);\n            $your_discount = sprintf('', $favour_name, price_format($discount ['discount']));\n            $result ['total_desc'] = $cart_goods ['total'] ['goods_price'];\n            $result ['total_number'] = $cart_goods ['total'] ['total_number'];\n            $result['market_total'] =  $cart_goods['total']['market_price'];//市场价格\n            die(json_encode($result));\n        } else {\n            $result ['error'] = 100;\n            $result ['message'] = '';\n            die(json_encode($result));\n        }\n    }\n\n    /**\n     * 删除购物车中的商品\n     */\n    public function drop_goods() {\n        $rec_id = intval($_GET ['id']);\n        //删除购物车中的商品\n        model('Flow')->flow_drop_cart_goods($rec_id);\n        ecs_header(\"Location: \" . url('flow/index') . \"\\n\");\n    }\n\n    /**\n     * 订单确认\n     */\n    public function checkout() {\n        /* 取得购物类型 */\n        $flow_type = isset($_SESSION ['flow_type']) ? intval($_SESSION ['flow_type']) : CART_GENERAL_GOODS;\n        /* 团购标志 */\n        if ($flow_type == CART_GROUP_BUY_GOODS) {\n            $this->assign('is_group_buy', 1);\n        } /* 积分兑换商品 */ elseif ($flow_type == CART_EXCHANGE_GOODS) {\n            $this->assign('is_exchange_goods', 1);\n        } else {\n            // 正常购物流程 清空其他购物流程情况\n            $_SESSION ['flow_order'] ['extension_code'] = '';\n        }\n        /* 检查购物车中是否有商品 */\n        $condition = \"session_id = '\" . SESS_ID . \"' \" . \"AND parent_id = 0 AND is_gift = 0 AND rec_type = '$flow_type'\";\n        $count = $this->model->table('cart')->field('COUNT(*)')->where($condition)->getOne();\n        if ($count == 0) {\n            show_message(L('no_goods_in_cart'), '', '', 'warning');\n        }\n\n        //  检查用户是否已经登录 如果用户已经登录了则检查是否有默认的收货地址 如果没有登录则跳转到登录和注册页面\n        if (empty($_SESSION ['direct_shopping']) && $_SESSION ['user_id'] == 0) {\n            /* 用户没有登录且没有选定匿名购物，转向到登录页面 */\n            $this->redirect(url('user/login',array('step'=>'flow')));\n            exit;\n        }\n        // 获取收货人信息\n        $consignee = model('Order')->get_consignee($_SESSION ['user_id']);\n        /* 检查收货人信息是否完整 */\n        if (!model('Order')->check_consignee_info($consignee, $flow_type)) {\n            /* 如果不完整则转向到收货人信息填写界面 */\n            ecs_header(\"Location: \" . url('flow/consignee_list') . \"\\n\");\n        }\n        // 获取配送地址\n        $consignee_list = model('Users')->get_consignee_list($_SESSION ['user_id']);\n        $this->assign('consignee_list', $consignee_list);\n        //获取默认配送地址\n        $address_id = $this->model->table('users')->field('address_id')->where(\"user_id = '\" . $_SESSION['user_id'] . \"' \")->getOne();\n        $this->assign('address_id', $address_id);\n\n        $_SESSION ['flow_consignee'] = $consignee;\n        $this->assign('consignee', $consignee);\n\n        /* 对商品信息赋值 */\n        $cart_goods = model('Order')->cart_goods($flow_type); // 取得商品列表，计算合计\n        $this->assign('goods_list', $cart_goods);\n\n        /* 对是否允许修改购物车赋值 */\n        if ($flow_type != CART_GENERAL_GOODS || C('one_step_buy') == '1') {\n            $this->assign('allow_edit_cart', 0);\n        } else {\n            $this->assign('allow_edit_cart', 1);\n        }\n\n        // 取得购物流程设置\n        $this->assign('config', C('CFG'));\n        // 取得订单信息\n        $order = model('Order')->flow_order_info();\n        $this->assign('order', $order);\n        /* 计算折扣 */\n        if ($flow_type != CART_EXCHANGE_GOODS && $flow_type != CART_GROUP_BUY_GOODS) {\n            $discount = model('Order')->compute_discount();\n            $this->assign('discount', $discount ['discount']);\n            $favour_name = empty($discount ['name']) ? '' : join(',', $discount ['name']);\n            $this->assign('your_discount', sprintf(L('your_discount'), $favour_name, price_format($discount ['discount'])));\n        }\n\n        //计算订单的费用\n        $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n\n        $this->assign('total', $total);\n        $this->assign('shopping_money', sprintf(L('shopping_money'), $total ['formated_goods_price']));\n        $this->assign('market_price_desc', sprintf(L('than_market_price'), $total ['formated_market_price'], $total ['formated_saving'], $total ['save_rate']));\n\n        /* 取得可以得到的积分和红包 */\n        $this->assign('total_integral', model('Order')->cart_amount(false, $flow_type) - $total ['bonus'] - $total ['integral_money']);\n        $this->assign('total_bonus', price_format(model('Order')->get_total_bonus(), false));\n\n\n        /* 取得配送列表 */\n        $region = array(\n            $consignee ['country'],\n            $consignee ['province'],\n            $consignee ['city'],\n            $consignee ['district']\n        );\n        $shipping_list = model('Shipping')->available_shipping_list($region);\n        $cart_weight_price = model('Order')->cart_weight_price($flow_type);\n        $insure_disabled = true;\n        $cod_disabled = true;\n\n        // 查看购物车中是否全为免运费商品，若是则把运费赋为零\n        $condition = \"`session_id` = '\" . SESS_ID . \"' AND `extension_code` != 'package_buy' AND `is_shipping` = 0\";\n        $shipping_count = $this->model->table('cart')->field('count(*)')->where($condition)->getOne();\n        foreach ($shipping_list as $key => $val) {\n\n            $shipping_cfg = unserialize_config($val ['configure']);\n            $shipping_fee = ($shipping_count == 0 and $cart_weight_price ['free_shipping'] == 1) ? 0 : shipping_fee($val['shipping_code'], unserialize($val ['configure']), $cart_weight_price ['weight'], $cart_weight_price ['amount'], $cart_weight_price ['number']);\n\n            $shipping_list [$key] ['format_shipping_fee'] = price_format($shipping_fee, false);\n            $shipping_list [$key] ['shipping_fee'] = $shipping_fee;\n            $shipping_list [$key] ['free_money'] = price_format($shipping_cfg ['free_money'], false);\n            $shipping_list [$key] ['insure_formated'] = strpos($val ['insure'], '%') === false ? price_format($val ['insure'], false) : $val ['insure'];\n\n            /* 当前的配送方式是否支持保价 */\n            if ($val ['shipping_id'] == $order ['shipping_id']) {\n                $insure_disabled = ($val ['insure'] == 0);\n                $cod_disabled = ($val ['support_cod'] == 0);\n            }\n	        // 兼容过滤ecjia配送方式\n            if (substr($val['shipping_code'], 0 , 5) == 'ship_') {\n                unset($shipping_list[$key]);\n            }\n        }\n\n        $this->assign('shipping_list', $shipping_list);\n        $this->assign('insure_disabled', $insure_disabled);\n        $this->assign('cod_disabled', $cod_disabled);\n\n        /* 取得支付列表 */\n        if ($order ['shipping_id'] == 0) {\n            $cod = true;\n            $cod_fee = 0;\n        } else {\n            $shipping = model('Shipping')->shipping_info($order ['shipping_id']);\n            $cod = $shipping ['support_cod'];\n\n            if ($cod) {\n                /* 如果是团购，且保证金大于0，不能使用货到付款 */\n                if ($flow_type == CART_GROUP_BUY_GOODS) {\n                    $group_buy_id = $_SESSION ['extension_id'];\n                    if ($group_buy_id <= 0) {\n                        show_message('error group_buy_id');\n                    }\n                    $group_buy = model('GroupBuyBase')->group_buy_info($group_buy_id);\n                    if (empty($group_buy)) {\n                        show_message('group buy not exists: ' . $group_buy_id);\n                    }\n\n                    if ($group_buy ['deposit'] > 0) {\n                        $cod = false;\n                        $cod_fee = 0;\n\n                        /* 赋值保证金 */\n                        $this->assign('gb_deposit', $group_buy ['deposit']);\n                    }\n                }\n\n                if ($cod) {\n                    $shipping_area_info = model('Shipping')->shipping_area_info($order ['shipping_id'], $region);\n                    $cod_fee = $shipping_area_info ['pay_fee'];\n                }\n            } else {\n                $cod_fee = 0;\n            }\n        }\n\n        // 给货到付款的手续费加<span id>，以便改变配送的时候动态显示\n        $payment_list = model('Order')->available_payment_list(1, $cod_fee);\n        if (isset($payment_list)) {\n            foreach ($payment_list as $key => $payment) {\n                // 只保留显示手机版支付方式\n                if(!file_exists(ROOT_PATH . 'plugins/payment/'.$payment['pay_code'].'.php')){\n                    unset($payment_list[$key]);\n                }\n                if ($payment ['is_cod'] == '1') {\n                    $payment_list [$key] ['format_pay_fee'] = '<span id=\"ECS_CODFEE\">' . $payment ['format_pay_fee'] . '</span>';\n                }\n\n                /* 如果有易宝神州行支付 如果订单金额大于300 则不显示 */\n                if ($payment ['pay_code'] == 'yeepayszx' && $total ['amount'] > 300) {\n                    unset($payment_list [$key]);\n                }\n                /* 如果有余额支付 */\n                if ($payment ['pay_code'] == 'balance') {\n                    /* 如果未登录，不显示 */\n                    if ($_SESSION ['user_id'] == 0) {\n                        unset($payment_list [$key]);\n                    } else {\n                        if ($_SESSION ['flow_order'] ['pay_id'] == $payment ['pay_id']) {\n                            $this->assign('disable_surplus', 1);\n                        }\n                    }\n                }\n                // 如果不是微信浏览器访问并且不是微信会员 则不显示微信支付\n                if ($payment ['pay_code'] == 'wxpay' && !is_wechat_browser() && empty($_SESSION['openid'])) {\n                    unset($payment_list [$key]);\n                }\n                // 兼容过滤ecjia支付方式\n                if (substr($payment['pay_code'], 0 , 4) == 'pay_') {\n                    unset($payment_list[$key]);\n                }\n            }\n        }\n        $this->assign('payment_list', $payment_list);\n\n        /* 取得包装与贺卡 */\n        if ($total ['real_goods_count'] > 0) {\n            /* 只有有实体商品,才要判断包装和贺卡 */\n            $use_package = C('use_package');\n            if (!isset($use_package) || C('use_package') == '1') {\n                /* 如果使用包装，取得包装列表及用户选择的包装 */\n                $this->assign('pack_list', model('Order')->pack_list());\n            }\n\n            /* 如果使用贺卡，取得贺卡列表及用户选择的贺卡 */\n            $use_card = C('use_card');\n            if (!isset($use_card) || C('use_card') == '1') {\n                $this->assign('card_list', model('Order')->card_list());\n            }\n        }\n\n        $user_info = model('Order')->user_info($_SESSION ['user_id']);\n\n        /* 如果使用余额，取得用户余额 */\n        $use_surplus = C('use_surplus');\n        if ((!isset($use_surplus) || C('use_surplus') == '1') && $_SESSION ['user_id'] > 0 && $user_info ['user_money'] > 0) {\n            // 能使用余额\n            $this->assign('allow_use_surplus', 1);\n            $this->assign('your_surplus', $user_info ['user_money']);\n        }\n\n        /* 如果使用积分，取得用户可用积分及本订单最多可以使用的积分 */\n        $use_integral = C('use_integral');\n        if ((!isset($use_integral) || C('use_integral') == '1') && $_SESSION ['user_id'] > 0 && $user_info ['pay_points'] > 0 && ($flow_type != CART_GROUP_BUY_GOODS && $flow_type != CART_EXCHANGE_GOODS)) {\n            // 能使用积分\n            $this->assign('allow_use_integral', 1);\n            $this->assign('order_max_integral', model('Flow')->flow_available_points()); // 可用积分\n            $this->assign('your_integral', $user_info ['pay_points']); // 用户积分\n        }\n\n        /* 如果使用红包，取得用户可以使用的红包及用户选择的红包 */\n        $use_bonus = C('use_bonus');\n        if ((!isset($use_bonus) || C('use_bonus') == '1') && ($flow_type != CART_GROUP_BUY_GOODS && $flow_type != CART_EXCHANGE_GOODS)) {\n            // 取得用户可用红包\n            $user_bonus = model('Order')->user_bonus($_SESSION ['user_id'], $total ['goods_price']);\n            if (!empty($user_bonus)) {\n                foreach ($user_bonus as $key => $val) {\n                    $user_bonus [$key] ['bonus_money_formated'] = price_format($val ['type_money'], false);\n                }\n                $this->assign('bonus_list', $user_bonus);\n            }\n\n            // 能使用红包\n            $this->assign('allow_use_bonus', 1);\n        }\n\n        /* 如果使用缺货处理，取得缺货处理列表 */\n        $use_how_oos = C('use_how_oos');\n        if (!isset($use_how_oos) || $use_how_oos == '1') {\n            $oos = L('oos');\n            if (is_array($oos) && !empty($oos)) {\n                $this->assign('how_oos_list', L('oos'));\n            }\n        }\n\n        /* 如果能开发票，取得发票内容列表 */\n        $can_invoice = C('can_invoice');\n        $invoice_content = C('invoice_content');\n        if ((!isset($can_invoice) || $can_invoice == '1') && isset($invoice_content) && trim($invoice_content) != '' && $flow_type != CART_EXCHANGE_GOODS) {\n            $inv_content_list = explode(\"\\n\", str_replace(\"\\r\", '', C('invoice_content')));\n            $this->assign('inv_content_list', $inv_content_list);\n\n            $inv_type_list = array();\n            $invoice_type = C('invoice_type');\n            foreach ($invoice_type['type'] as $key => $type) {\n                if (!empty($type)) {\n                    $inv_type_list [$type] = $type . ' [' . floatval($invoice_type['rate'] [$key]) . '%]';\n                }\n            }\n            $this->assign('inv_type_list', $inv_type_list);\n        }\n        // print_r($inv_type_list);\n\n        /* 保存 session */\n        $_SESSION ['flow_order'] = $order;\n        $this->assign('currency_format', C('currency_format'));\n        $this->assign('integral_scale', C('integral_scale'));\n        $this->assign('step', ACTION_NAME);\n        model('Common')->assign_dynamic('shopping_flow');\n\n        $this->assign('title', L('order_detail'));\n\n        $this->display('flow.dwt');\n    }\n\n    /**\n     * 登录信息\n     */\n    public function login() {\n        //用户登录注册\n        if ($_SERVER ['REQUEST_METHOD'] == 'GET') {\n            $this->assign('anonymous_buy', C('anonymous_buy'));\n\n            /* 检查是否有赠品，如果有提示登录后重新选择赠品 */\n            $count = $this->model->table('cart')->field('count(*)')->where(\"session_id = '\" . SESS_ID . \"' AND is_gift > 0\")->getOne();\n            if ($count > 0) {\n                $this->assign('need_rechoose_gift', 1);\n            }\n\n            /* 检查是否需要注册码 */\n            $captcha = intval(C('captcha'));\n            if (($captcha & CAPTCHA_LOGIN) && (!($captcha & CAPTCHA_LOGIN_FAIL) || (($captcha & CAPTCHA_LOGIN_FAIL) && $_SESSION ['login_fail'] > 2)) && gd_version() > 0) {\n                $this->assign('enabled_login_captcha', 1);\n                $this->assign('rand', mt_rand());\n            }\n            if ($captcha & CAPTCHA_REGISTER) {\n                $this->assign('enabled_register_captcha', 1);\n                $this->assign('rand', mt_rand());\n            }\n        } else {\n            $act = in($_POST ['act']);\n            $username = in($_POST ['username']);\n            $password = in($_POST ['password']);\n            $remember = in($_POST ['remember']);\n            $email = in($_POST ['email']);\n            $post_captcha = in($_POST ['captcha']);\n            if ($act == 'signin') {\n                $captcha = intval(C('captcha'));\n                if (($captcha & CAPTCHA_LOGIN) && (!($captcha & CAPTCHA_LOGIN_FAIL) || (($captcha & CAPTCHA_LOGIN_FAIL) && $_SESSION ['login_fail'] > 2)) && gd_version() > 0) {\n                    if (empty($post_captcha)) {\n                        show_message(L('invalid_captcha'));\n                    }\n\n                    if ($_SESSION ['ectouch_verify'] !== $_POST ['captcha']) {\n                        show_message(L('invalid_captcha'));\n                    }\n                }\n                if (self::$user->login($username, $password, isset($remember))) {\n                    model('Users')->update_user_info(); // 更新用户信息\n                    model('Users')->recalculate_price(); // 重新计算购物车中的商品价格\n\n                    /* 检查购物车中是否有商品 没有商品则跳转到首页 */\n                    $count = $this->model->table('cart')->field('count(*)')->where(\"session_id = '\" . SESS_ID . \"'\")->getOne();\n                    if ($count > 0) {\n                        ecs_header(\"Location: \" . url('flow/checkout') . \"\\n\");\n                    } else {\n                        ecs_header(\"Location:index.php\\n\");\n                    }\n                } else {\n                    $_SESSION ['login_fail']++;\n                    show_message(L('signin_failed'), '', url('flow/index', array('step' => 'login')));\n                }\n            } elseif ($act == 'signup') {\n                if ((intval(C('captcha')) & CAPTCHA_REGISTER) && gd_version() > 0) {\n                    if (empty($post_captcha)) {\n                        show_message(L('invalid_captcha'));\n                    }\n                    if ($_SESSION ['ectouch_verify'] !== $_POST ['captcha']) {\n                        show_message(L('invalid_captcha'));\n                    }\n                }\n\n                if (model('Users')->register(trim($username), trim($password), trim($email))) {\n                    /* 用户注册成功 */\n                    ecs_header(\"Location: \" . url('flow/consignee') . \"\\n\");\n                } else {\n                    ECTouch::err()->show();\n                }\n            } else {\n                // TODO: 非法访问的处理\n            }\n        }\n        $this->assign('currency_format', C('currency_format'));\n        $this->assign('integral_scale', C('integral_scale'));\n        $this->assign('step', ACTION_NAME);\n        $this->assign('action', 'login');\n        /* 验证码相关设置 */\n        if ((intval(C('captcha')) & CAPTCHA_REGISTER) && gd_version() > 0) {\n            $this->assign('enabled_captcha', 1);\n            $this->assign('rand', mt_rand());\n        }\n        $this->display('flow.dwt');\n    }\n\n    /**\n     * 收货信息\n     */\n    public function consignee() {\n        if ($_SERVER ['REQUEST_METHOD'] == 'GET') {\n            /* 取得购物类型 */\n            $flow_type = isset($_SESSION ['flow_type']) ? intval($_SESSION ['flow_type']) : CART_GENERAL_GOODS;\n            //收货人信息填写界面\n            if (isset($_REQUEST ['direct_shopping'])) {\n                $_SESSION ['direct_shopping'] = 1;\n            }\n\n            /* 取得国家列表、商店所在国家、商店所在国家的省列表 */\n            $this->assign('country_list', model('RegionBase')->get_regions());\n            $this->assign('shop_country', C('shop_country'));\n            $this->assign('shop_province_list', model('RegionBase')->get_regions(1, C('shop_country')));\n\n            /* 获得用户所有的收货人信息 */\n            if ($_SESSION ['user_id'] > 0) {\n                $addressId = I('get.id');\n                if ($addressId > 0) {\n                    $consignee_list[] = model('Users')->get_consignee_list($_SESSION ['user_id'], $addressId);\n                } else {\n                    $consignee_list [] = array(\n                        'country' => C('shop_country')\n                    );\n                }\n            } else {\n                if (isset($_SESSION ['flow_consignee'])) {\n                    $consignee_list = array(\n                        $_SESSION ['flow_consignee']\n                    );\n                } else {\n                    $consignee_list [] = array(\n                        'country' => C('shop_country')\n                    );\n                }\n            }\n            $this->assign('name_of_region', array(\n                C('name_of_region_1'),\n                C('name_of_region_2'),\n                C('name_of_region_3'),\n                C('name_of_region_4')\n            ));\n            $this->assign('consignee_list', $consignee_list);\n\n            /* 取得每个收货地址的省市区列表 */\n            $city_list = array();\n            $district_list = array();\n            foreach ($consignee_list as $region_id => $consignee) {\n                $consignee ['country'] = isset($consignee ['country']) ? intval($consignee ['country']) : 1;\n                $consignee ['province'] = isset($consignee ['province']) ? intval($consignee ['province']) : 0;\n                $consignee ['city'] = isset($consignee ['city']) ? intval($consignee ['city']) : 0;\n\n                $city_list [$region_id] = model('RegionBase')->get_regions(2, $consignee ['province']);\n                $district_list [$region_id] = model('RegionBase')->get_regions(3, $consignee ['city']);\n            }\n            $this->assign('province_list', model('RegionBase')->get_regions(1, $consignee ['country']));\n            $this->assign('city_list', $city_list);\n            $this->assign('district_list', $district_list);\n\n            /* 返回收货人页面代码 */\n            $this->assign('real_goods_count', model('Order')->exist_real_goods(0, $flow_type) ? 1 : 0 );\n        } else {\n            /*  保存收货人信息 	 */\n            $consignee = array(\n                'address_id' => empty($_POST ['address_id']) ? 0 : intval($_POST ['address_id']),\n                'consignee' => empty($_POST ['consignee']) ? '' : I('post.consignee'),\n                'country' => empty($_POST ['country']) ? '' : intval($_POST ['country']),\n                'province' => empty($_POST ['province']) ? '' : intval($_POST ['province']),\n                'city' => empty($_POST ['city']) ? '' : intval($_POST ['city']),\n                'district' => empty($_POST ['district']) ? '' : intval($_POST ['district']),\n                'address' => empty($_POST ['address']) ? '' : I('post.address'),\n                'mobile' => empty($_POST ['mobile']) ? '' : make_semiangle(I('post.mobile'))\n            );\n\n            if ($_SESSION ['user_id'] > 0) {\n                /* 如果用户已经登录，则保存收货人信息 */\n                $consignee ['user_id'] = $_SESSION ['user_id'];\n                model('Users')->save_consignee($consignee, true);\n            }\n\n            /* 保存到session */\n            $_SESSION ['flow_consignee'] = stripslashes_deep($consignee);\n            ecs_header(\"Location: \" . url('flow/checkout') . \"\\n\");\n        }\n\n        $this->assign('currency_format', C('currency_format'));\n        $this->assign('integral_scale', C('integral_scale'));\n        $this->assign('step', ACTION_NAME);\n        $this->assign('title', L('consignee_info'));\n        $this->display('flow.dwt');\n    }\n\n    /**\n     *  把优惠活动加入购物车\n     */\n    public function add_favourable() {\n        /* 取得优惠活动信息 */\n        $act_id = intval($_POST ['act_id']);\n        $favourable = model('GoodsBase')->favourable_info($act_id);\n        if (empty($favourable)) {\n            show_message(L('favourable_not_exist'));\n        }\n\n        /* 判断用户能否享受该优惠 */\n        if (!model('Flow')->favourable_available($favourable)) {\n            show_message(L('favourable_not_available'));\n        }\n\n        /* 检查购物车中是否已有该优惠 */\n        $cart_favourable = model('Flow')->cart_favourable();\n        if (model('Flow')->favourable_used($favourable, $cart_favourable)) {\n            show_message(L('favourable_used'));\n        }\n\n        /* 赠品（特惠品）优惠 */\n        if ($favourable ['act_type'] == FAT_GOODS) {\n            /* 检查是否选择了赠品 */\n            if (empty($_POST ['gift'])) {\n                show_message(L('pls_select_gift'));\n            }\n\n            /* 检查是否已在购物车 */\n            $condition = \" session_id = '\" . SESS_ID . \"'\" . \" AND rec_type = '\" . CART_GENERAL_GOODS . \"'\" . \" AND is_gift = '$act_id'\" . \" AND goods_id \" . db_create_in($_POST ['gift']);\n            $gift_name = $this->model->table('cart')->field('goods_name')->where($condition)->getCol();\n            if (!empty($gift_name)) {\n                show_message(sprintf(L('gift_in_cart'), join(',', $gift_name)));\n            }\n\n            /* 检查数量是否超过上限 */\n            $count = isset($cart_favourable [$act_id]) ? $cart_favourable [$act_id] : 0;\n            if ($favourable ['act_type_ext'] > 0 && $count + count($_POST ['gift']) > $favourable ['act_type_ext']) {\n                show_message(L('gift_count_exceed'));\n            }\n\n            /* 添加赠品到购物车 */\n            foreach ($favourable ['gift'] as $gift) {\n                if (in_array($gift ['id'], $_POST ['gift'])) {\n                    model('Flow')->add_gift_to_cart($act_id, $gift ['id'], $gift ['price']);\n                }\n            }\n        } elseif ($favourable ['act_type'] == FAT_DISCOUNT) {\n            model('Flow')->add_favourable_to_cart($act_id, $favourable ['act_name'], model('Flow')->cart_favourable_amount($favourable) * (100 - $favourable ['act_type_ext']) / 100);\n        } elseif ($favourable ['act_type'] == FAT_PRICE) {\n            model('Flow')->add_favourable_to_cart($act_id, $favourable ['act_name'], $favourable ['act_type_ext']);\n        }\n\n        /* 刷新购物车 */\n        ecs_header(\"Location: \" . url('flow/index') . \"\\n\");\n    }\n\n    /**\n     * 改变配送方式\n     */\n    public function select_shipping() {\n        // 格式化返回数组\n        $result = array(\n            'error' => '',\n            'content' => '',\n            'need_insure' => 0\n        );\n        /* 取得购物类型 */\n        $flow_type = isset($_SESSION ['flow_type']) ? intval($_SESSION ['flow_type']) : CART_GENERAL_GOODS;\n        /* 获得收货人信息 */\n        $consignee = model('Order')->get_consignee($_SESSION ['user_id']);\n        /* 对商品信息赋值 */\n        $cart_goods = model('Order')->cart_goods($flow_type); // 取得商品列表，计算合计\n        if (empty($cart_goods) || !model('Order')->check_consignee_info($consignee, $flow_type)) {\n            $result ['error'] = L('no_goods_in_cart');\n        } else {\n            /* 取得购物流程设置 */\n            $this->assign('config', C('CFG'));\n            /* 取得订单信息 */\n            $order = model('Order')->flow_order_info();\n\n            $order ['shipping_id'] = intval($_REQUEST ['shipping']);\n            $regions = array(\n                $consignee ['country'],\n                $consignee ['province'],\n                $consignee ['city'],\n                $consignee ['district']\n            );\n            $shipping_info = model('Shipping')->shipping_area_info($order ['shipping_id'], $regions);\n\n            /* 计算订单的费用 */\n            $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n            $this->assign('total', $total);\n\n            /* 取得可以得到的积分和红包 */\n            $this->assign('total_integral', model('Order')->cart_amount(false, $flow_type) - $total ['bonus'] - $total ['integral_money']);\n            $this->assign('total_bonus', price_format(model('Order')->get_total_bonus(), false));\n\n            /* 团购标志 */\n            if ($flow_type == CART_GROUP_BUY_GOODS) {\n                $this->assign('is_group_buy', 1);\n            }\n\n            $result ['cod_fee'] = $shipping_info ['pay_fee'];\n            if (strpos($result ['cod_fee'], '%') === false) {\n                $result ['cod_fee'] = price_format($result ['cod_fee'], false);\n            }\n            $result ['need_insure'] = ($shipping_info ['insure'] > 0 && !empty($order ['need_insure'])) ? 1 : 0;\n            $result ['content'] = ECTouch::$view->fetch('library/order_total.lbi');\n        }\n        echo json_encode($result);\n    }\n\n    /**\n     *  提交订单\n     */\n    public function done() {\n        /* 取得购物类型 */\n        $flow_type = isset($_SESSION ['flow_type']) ? intval($_SESSION ['flow_type']) : CART_GENERAL_GOODS;\n        /* 检查购物车中是否有商品 */\n        $condition = \" session_id = '\" . SESS_ID . \"' \" . \"AND parent_id = 0 AND is_gift = 0 AND rec_type = '$flow_type'\";\n        $count = $this->model->table('cart')->field('COUNT(*)')done->where($condition)->getOne();\n        if ($count == 0) {\n            show_message(L('no_goods_in_cart'), '', '', 'warning');\n        }\n        /* 如果使用库存，且下订单时减库存，则减少库存 */\n        if (C('use_storage') == '1' && C('stock_dec_time') == SDT_PLACE) {\n            $cart_goods_stock = model('Order')->get_cart_goods();\n            $_cart_goods_stock = array();\n            foreach ($cart_goods_stock ['goods_list'] as $value) {\n                $_cart_goods_stock [$value ['rec_id']] = $value ['goods_number'];\n            }\n            model('Flow')->flow_cart_stock($_cart_goods_stock);\n            unset($cart_goods_stock, $_cart_goods_stock);\n        }\n        // 检查用户是否已经登录 如果用户已经登录了则检查是否有默认的收货地址 如果没有登录则跳转到登录和注册页面\n        if (empty($_SESSION ['direct_shopping']) && $_SESSION ['user_id'] == 0) {\n            /* 用户没有登录且没有选定匿名购物，转向到登录页面 */\n            ecs_header(\"Location: \" . url('user/login') . \"\\n\");\n        }\n\n        // 获取收货人信息\n        $consignee = model('Order')->get_consignee($_SESSION ['user_id']);\n        /* 检查收货人信息是否完整 */\n        if (!model('Order')->check_consignee_info($consignee, $flow_type)) {\n            /* 如果不完整则转向到收货人信息填写界面 */\n            ecs_header(\"Location: \" . url('flow/consignee') . \"\\n\");\n        }\n\n        // 处理接收信息\n        $how_oos = I('post.how_oos', 0);\n        $card_message = I('post.card_message', trim, '');\n        $inv_type = I('post.inv_type', '');\n        $inv_payee = I('post.inv_payee', trim, '');\n        $inv_content = I('post.inv_content', trim,'');\n        $postscript = I('post.postscript',trim, '');\n        $oos = L('oos.' . $how_oos);\n        // 订单信息\n        $order = array(\n            'shipping_id' => I('post.shipping'),\n            'pay_id' => I('post.payment'), // 付款方式\n            'pack_id' => I('post.pack', 0),\n            'card_id' => isset($_POST ['card']) ? intval($_POST ['card']) : 0,\n            'card_message' => $card_message,\n            'surplus' => isset($_POST ['surplus']) ? floatval($_POST ['surplus']) : 0.00,\n            'integral' => isset($_POST ['integral']) ? intval($_POST ['integral']) : 0,\n            'bonus_id' => isset($_POST ['bonus']) ? intval($_POST ['bonus']) : 0,\n            'need_inv' => empty($_POST ['need_inv']) ? 0 : 1,\n            'inv_type' => $inv_type,\n            'inv_payee' => $inv_payee,\n            'inv_content' => $inv_content,\n            'postscript' => $postscript,\n            'how_oos' => isset($oos) ? addslashes(\"$oos\") : '',\n            'need_insure' => isset($_POST ['need_insure']) ? intval($_POST ['need_insure']) : 0,\n            'user_id' => $_SESSION ['user_id'],\n            'add_time' => gmtime(),\n            'order_status' => OS_UNCONFIRMED,\n            'shipping_status' => SS_UNSHIPPED,\n            'pay_status' => PS_UNPAYED,\n            'agency_id' => model('Order')->get_agency_by_regions(array(\n                $consignee ['country'],\n                $consignee ['province'],\n                $consignee ['city'],\n                $consignee ['district']\n            ))\n        );\n\n        /* 扩展信息 */\n        if (isset($_SESSION ['flow_type']) && intval($_SESSION ['flow_type']) != CART_GENERAL_GOODS) {\n            $order ['extension_code'] = $_SESSION ['extension_code'];\n            $order ['extension_id'] = $_SESSION ['extension_id'];\n        } else {\n            $order ['extension_code'] = '';\n            $order ['extension_id'] = 0;\n        }\n        /* 检查积分余额是否合法 */\n        $user_id = $_SESSION ['user_id'];\n        if ($user_id > 0) {\n\n            $user_info = model('Order')->user_info($user_id);\n            $order ['surplus'] = min($order ['surplus'], $user_info ['user_money'] + $user_info ['credit_line']);\n            if ($order ['surplus'] < 0) {\n                $order ['surplus'] = 0;\n            }\n\n            // 查询用户有多少积分\n            $flow_points = model('Flow')->flow_available_points(); // 该订单允许使用的积分\n            $user_points = $user_info ['pay_points']; // 用户的积分总数\n\n            $order ['integral'] = min($order ['integral'], $user_points, $flow_points);\n            if ($order ['integral'] < 0) {\n                $order ['integral'] = 0;\n            }\n        } else {\n            $order ['surplus'] = 0;\n            $order ['integral'] = 0;\n        }\n\n        /* 检查红包是否存在 */\n        if ($order ['bonus_id'] > 0) {\n            $bonus = model('Order')->bonus_info($order ['bonus_id']);\n            if (empty($bonus) || $bonus ['user_id'] != $user_id || $bonus ['order_id'] > 0 || $bonus ['min_goods_amount'] > model('Order')->cart_amount(true, $flow_type)) {\n                $order ['bonus_id'] = 0;\n            }\n        } elseif (isset($_POST ['bonus_sn'])) {\n            $bonus_sn = trim($_POST ['bonus_sn']);\n            $bonus = model('Order')->bonus_info(0, $bonus_sn);\n            $now = gmtime();\n            if (empty($bonus) || $bonus ['user_id'] > 0 || $bonus ['order_id'] > 0 || $bonus ['min_goods_amount'] > model('Order')->cart_amount(true, $flow_type) || $now > $bonus ['use_end_date']) {\n\n            } else {\n                if ($user_id > 0) {\n                    $sql = \"UPDATE \" . $this->model->pre . \"user_bonus SET user_id = '$user_id' WHERE bonus_id = '$bonus[bonus_id]' LIMIT 1\";\n                    $this->model->query($sql);\n                }\n                $order ['bonus_id'] = $bonus ['bonus_id'];\n                $order ['bonus_sn'] = $bonus_sn;\n            }\n        }\n\n        /* 订单中的商品 */\n        $cart_goods = model('Order')->cart_goods($flow_type);\n        if (empty($cart_goods)) {\n            show_message(L('no_goods_in_cart'), L('back_home'), './', 'warning');\n        }\n\n        /* 检查商品总额是否达到最低限购金额 */\n        if ($flow_type == CART_GENERAL_GOODS && model('Order')->cart_amount(true, CART_GENERAL_GOODS) < C('min_goods_amount')) {\n            show_message(sprintf(L('goods_amount_not_enough'), price_format(C('min_goods_amount'), false)));\n        }\n\n        /* 收货人信息 */\n        foreach ($consignee as $key => $value) {\n            $order [$key] = addslashes($value);\n        }\n\n        /* 判断是不是实体商品 */\n        foreach ($cart_goods as $val) {\n            /* 统计实体商品的个数 */\n            if ($val ['is_real']) {\n                $is_real_good = 1;\n            }\n        }\n        if (isset($is_real_good)) {\n            $res = $this->model->table('shipping')->field('shipping_id')->where(\"shipping_id=\" . $order ['shipping_id'] . \" AND enabled =1\")->getOne();\n            if (!$res) {\n                show_message(L('flow_no_shipping'));\n            }\n        }\n        /* 订单中的总额 */\n        $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n        $order ['bonus'] = $total ['bonus'];\n        $order ['goods_amount'] = $total ['goods_price'];\n        $order ['discount'] = $total ['discount'];\n        $order ['surplus'] = $total ['surplus'];\n        $order ['tax'] = $total ['tax'];\n\n        // 购物车中的商品能享受红包支付的总额\n        $discount_amout = model('Order')->compute_discount_amount();\n        // 红包和积分最多能支付的金额为商品总额\n        $temp_amout = $order ['goods_amount'] - $discount_amout;\n        if ($temp_amout <= 0) {\n            $order ['bonus_id'] = 0;\n        }\n\n        /* 配送方式 */\n        if ($order ['shipping_id'] > 0) {\n            $shipping = model('Shipping')->shipping_info($order ['shipping_id']);\n            $order ['shipping_name'] = addslashes($shipping ['shipping_name']);\n        }\n        $order ['shipping_fee'] = $total ['shipping_fee'];\n        $order ['insure_fee'] = $total ['shipping_insure'];\n\n        /* 支付方式 */\n        if ($order ['pay_id'] > 0) {\n            $payment = model('Order')->payment_info($order ['pay_id']);\n            $order ['pay_name'] = addslashes($payment ['pay_name']);\n        }\n\n        $order ['pay_fee'] = $total ['pay_fee'];\n        $order ['cod_fee'] = $total ['cod_fee'];\n\n        /* 商品包装 */\n        if ($order ['pack_id'] > 0) {\n            $pack = model('Order')->pack_info($order ['pack_id']);\n            $order ['pack_name'] = addslashes($pack ['pack_name']);\n        }\n        $order ['pack_fee'] = $total ['pack_fee'];\n\n        /* 祝福贺卡 */\n        if ($order ['card_id'] > 0) {\n            $card = model('Order')->card_info($order ['card_id']);\n            $order ['card_name'] = addslashes($card ['card_name']);\n        }\n        $order ['card_fee'] = $total ['card_fee'];\n        $order ['order_amount'] = number_format($total ['amount'], 2, '.', '');\n\n        /* 如果全部使用余额支付，检查余额是否足够 */\n        if ($payment ['pay_code'] == 'balance' && $order ['order_amount'] > 0) {\n            if ($order ['surplus'] > 0) {    // 余额支付里如果输入了一个金额\n                $order ['order_amount'] = $order ['order_amount'] + $order ['surplus'];\n                $order ['surplus'] = 0;\n            }\n            if ($order ['order_amount'] > ($user_info ['user_money'] + $user_info ['credit_line'])) {\n                show_message(L('balance_not_enough'));\n            } else {\n                $order ['surplus'] = $order ['order_amount'];\n                $order ['order_amount'] = 0;\n            }\n        }\n\n        /* 如果订单金额为0（使用余额或积分或红包支付），修改订单状态为已确认、已付款 */\n        if ($order ['order_amount'] <= 0) {\n            $order ['order_status'] = OS_CONFIRMED;\n            $order ['confirm_time'] = gmtime();\n            $order ['pay_status'] = PS_PAYED;\n            $order ['pay_time'] = gmtime();\n            $order ['order_amount'] = 0;\n        }\n\n        $order ['integral_money'] = $total ['integral_money'];\n        $order ['integral'] = $total ['integral'];\n\n        if ($order ['extension_code'] == 'exchange_goods') {\n            $order ['integral_money'] = 0;\n            $order ['integral'] = $total ['exchange_integral'];\n        }\n\n        $order ['from_ad'] = !empty($_SESSION ['from_ad']) ? $_SESSION ['from_ad'] : '0';\n        $order ['referer'] = !empty($_SESSION ['referer']) ? addslashes($_SESSION ['referer']). 'Touch' : 'Touch';\n\n        /* 记录扩展信息 */\n        if ($flow_type != CART_GENERAL_GOODS) {\n            $order ['extension_code'] = $_SESSION ['extension_code'];\n            $order ['extension_id'] = $_SESSION ['extension_id'];\n        }\n\n        $parent_id = M()->table('users')->field('parent_id')->where(\"user_id=\".$_SESSION['user_id'])->getOne();\n        $order ['parent_id'] = $parent_id;\n\n        /* 插入订单表 */\n        $error_no = 0;\n        do {\n            $order ['order_sn'] = get_order_sn(); // 获取新订单号\n            $new_order = model('Common')->filter_field('order_info', $order);\n            $this->model->table('order_info')->data($new_order)->insert();\n            $error_no = M()->errno();\n\n            if ($error_no > 0 && $error_no != 1062) {\n                die(M()->errorMsg());\n            }\n        } while ($error_no == 1062); // 如果是订单号重复则重新提交数据\n        $new_order_id = M()->insert_id();\n        $order ['order_id'] = $new_order_id;\n\n        /* 插入订单商品 */\n        $sql = \"INSERT INTO \" . $this->model->pre . \"order_goods( \" . \"order_id, goods_id, goods_name, goods_sn, product_id, goods_number, market_price, \" . \"goods_price, goods_attr, is_real, extension_code, parent_id, is_gift, goods_attr_id) \" . \" SELECT '$new_order_id', goods_id, goods_name, goods_sn, product_id, goods_number, market_price, \" . \"goods_price, goods_attr, is_real, extension_code, parent_id, is_gift, goods_attr_id \" . \" FROM \" . $this->model->pre . \"cart WHERE session_id = '\" . SESS_ID . \"' AND rec_type = '$flow_type'\";\n        $this->model->query($sql);\n        /* 修改拍卖活动状态 */\n        if ($order ['extension_code'] == 'auction') {\n            $sql = \"UPDATE \" . $this->model->pre . \"goods_activity SET is_finished='2' WHERE act_id=\" . $order ['extension_id'];\n            $this->model->query($sql);\n        }\n\n        /* 处理余额、积分、红包 */\n        if ($order ['user_id'] > 0 && $order ['surplus'] > 0) {\n            model('ClipsBase')->log_account_change($order ['user_id'], $order ['surplus'] * (- 1), 0, 0, 0, sprintf(L('pay_order'), $order ['order_sn']));\n        }\n        if ($order ['user_id'] > 0 && $order ['integral'] > 0) {\n            model('ClipsBase')->log_account_change($order ['user_id'], 0, 0, 0, $order ['integral'] * (- 1), sprintf(L('pay_order'), $order ['order_sn']));\n        }\n\n        if ($order ['bonus_id'] > 0 && $temp_amout > 0) {\n            model('Order')->use_bonus($order ['bonus_id'], $new_order_id);\n        }\n\n        /* 如果使用库存，且下订单时减库存，则减少库存 */\n        if (C('use_storage') == '1' && C('stock_dec_time') == SDT_PLACE) {\n            model('Order')->change_order_goods_storage($order ['order_id'], true, SDT_PLACE);\n        }\n\n        /* 给商家发邮件 */\n        /* 增加是否给客服发送邮件选项 */\n        if (C('send_service_email') && C('service_email') != '') {\n            $tpl = model('Base')->get_mail_template('remind_of_new_order');\n            $this->assign('order', $order);\n            $this->assign('goods_list', $cart_goods);\n            $this->assign('shop_name', C('shop_name'));\n            $this->assign('send_date', date(C('time_format')));\n            $content = ECTouch::$view->fetch('str:' . $tpl ['template_content']);\n            send_mail(C('shop_name'), C('service_email'), $tpl ['template_subject'], $content, $tpl ['is_html']);\n        }\n\n        /* 如果需要，发短信 */\n        if (C('sms_order_placed') == '1' && C('sms_shop_mobile') != '') {\n            $sms = new EcsSms();\n            $msg = $order ['pay_status'] == PS_UNPAYED ? L('order_placed_sms') : L('order_placed_sms') . '[' . L('sms_paid') . ']';\n            $sms->send(C('sms_shop_mobile'), sprintf($msg, $order ['consignee'], $order ['mobile']), '', 13, 1);\n        }\n        /* 如果需要，微信通知 by wanglu */\n        // if (method_exists('WechatController', 'do_oauth')) {\n        //     $order_url = __HOST__ . url('user/order_detail', array('order_id' => $order ['order_id']));\n        //     $order_url = urlencode(base64_encode($order_url));\n        //     send_wechat_message('order_remind', '', $order['order_sn'] . L('order_effective'), $order_url, $order['order_sn']);\n        // }\n        /* 如果订单金额为0 处理虚拟卡 */\n        if ($order ['order_amount'] <= 0) {\n            $sql = \"SELECT goods_id, goods_name, goods_number AS num FROM \" . $this->model->pre . \"cart WHERE is_real = 0 AND extension_code = 'virtual_card'\" . \" AND session_id = '\" . SESS_ID . \"' AND rec_type = '$flow_type'\";\n            $res = $this->model->query($sql);\n\n            $virtual_goods = array();\n            foreach ($res as $row) {\n                $virtual_goods ['virtual_card'] [] = array(\n                    'goods_id' => $row ['goods_id'],\n                    'goods_name' => $row ['goods_name'],\n                    'num' => $row ['num']\n                );\n            }\n\n            if ($virtual_goods and $flow_type != CART_GROUP_BUY_GOODS) {\n                /* 虚拟卡发货 */\n                if (model('OrderBase')->virtual_goods_ship($virtual_goods, $msg, $order ['order_sn'], true)) {\n                    /* 如果没有实体商品，修改发货状态，送积分和红包 */\n                    $count = $this->model->table('order_goods')->field('COUNT(*)')->where(\"order_id = '$order[order_id]' \" . \" AND is_real = 1\")->getOne();\n                    if ($count <= 0) {\n                        /* 修改订单状态 */\n                        model('Users')->update_order($order ['order_id'], array(\n                            'shipping_status' => SS_SHIPPED,\n                            'shipping_time' => gmtime()\n                        ));\n\n                        /* 如果订单用户不为空，计算积分，并发给用户；发红包 */\n                        if ($order ['user_id'] > 0) {\n                            /* 取得用户信息 */\n                            $user = model('Order')->user_info($order ['user_id']);\n\n                            /* 计算并发放积分 */\n                            $integral = model('Order')->integral_to_give($order);\n                            model('ClipsBase')->log_account_change($order ['user_id'], 0, 0, intval($integral ['rank_points']), intval($integral ['custom_points']), sprintf(L('order_gift_integral'), $order ['order_sn']));\n\n                            /* 发放红包 */\n                            model('Order')->send_order_bonus($order ['order_id']);\n                        }\n                    }\n                }\n            }\n        }\n\n        // 销量\n        model('Flow')->add_touch_goods($flow_type, $order ['extension_code']);\n        /* 清空购物车 */\n        model('Order')->clear_cart($flow_type);\n        /* 清除缓存，否则买了商品，但是前台页面读取缓存，商品数量不减少 */\n        clear_all_files();\n\n        /* 插入支付日志 */\n        $order ['log_id'] = model('ClipsBase')->insert_pay_log($new_order_id, $order ['order_amount'], PAY_ORDER);\n\n        /* 取得支付信息，生成支付代码 */\n        if ($order ['order_amount'] > 0) {\n            $payment = model('Order')->payment_info($order ['pay_id']);\n\n            include_once (ROOT_PATH . 'plugins/payment/' . $payment ['pay_code'] . '.php');\n\n            $pay_obj = new $payment ['pay_code'] ();\n\n            $pay_online = $pay_obj->get_code($order, unserialize_config($payment ['pay_config']));\n\n            $order ['pay_desc'] = $payment ['pay_desc'];\n\n            $this->assign('pay_online', $pay_online);\n        }\n        if (!empty($order ['shipping_name'])) {\n            $order ['shipping_name'] = trim(stripcslashes($order ['shipping_name']));\n        }\n        // 如果是银行汇款或货到付款 则显示支付描述\n        if ($payment['pay_code'] == 'bank' || $payment['pay_code'] == 'cod'){\n            if (empty($order ['pay_name'])) {\n                $order ['pay_name'] = trim(stripcslashes($payment ['pay_name']));\n            }\n            $this->assign('pay_desc',$order['pay_desc']);\n        }\n        // 货到付款不显示\n        if ($payment ['pay_code'] != 'balance') {\n            /* 生成订单后，修改支付，配送方式 */\n\n            // 支付方式\n            $payment_list = model('Order')->available_payment_list(0);\n            if (isset($payment_list)) {\n                foreach ($payment_list as $key => $payment) {\n\n                    /* 如果有易宝神州行支付 如果订单金额大于300 则不显示 */\n                    if ($payment ['pay_code'] == 'yeepayszx' && $total ['amount'] > 300) {\n                        unset($payment_list [$key]);\n                    }\n                    // 过滤掉当前的支付方式\n                    if ($payment ['pay_id'] == $order ['pay_id']) {\n                        unset($payment_list [$key]);\n                    }\n                    /* 如果有余额支付 */\n                    if ($payment ['pay_code'] == 'balance') {\n                        /* 如果未登录，不显示 */\n                        if ($_SESSION ['user_id'] == 0) {\n                            unset($payment_list [$key]);\n                        } else {\n                            if ($_SESSION ['flow_order'] ['pay_id'] == $payment ['pay_id']) {\n                                $this->assign('disable_surplus', 1);\n                            }\n                        }\n                    }\n                    // 如果不是微信浏览器访问并且不是微信会员 则不显示微信支付\n                    if ($payment ['pay_code'] == 'wxpay' && !is_wechat_browser() && empty($_SESSION['openid'])) {\n                        unset($payment_list [$key]);\n                    }\n                    // 兼容过滤ecjia支付方式\n                    if (substr($payment['pay_code'], 0 , 4) == 'pay_') {\n                        unset($payment_list[$key]);\n                    }\n                }\n            }\n            $this->assign('payment_list', $payment_list);\n            $this->assign('pay_code', 'no_balance');\n        }\n\n\n\n        /* 订单信息 */\n        $this->assign('order', $order);\n        $this->assign('total', $total);\n        $this->assign('goods_list', $cart_goods);\n        $this->assign('order_submit_back', sprintf(L('order_submit_back'), L('back_home'), L('goto_user_center'))); // 返回提示\n\n        user_uc_call('add_feed', array($order ['order_id'], BUY_GOODS)); // 推送feed到uc\n        unset($_SESSION ['flow_consignee']); // 清除session中保存的收货人信息\n        unset($_SESSION ['flow_order']);\n        unset($_SESSION ['direct_shopping']);\n\n        $this->assign('currency_format', C('currency_format'));\n        $this->assign('integral_scale', C('integral_scale'));\n        $this->assign('step', ACTION_NAME);\n\n        $this->assign('title', L('order_submit'));\n        $this->display('flow.dwt');\n    }\n\n    /**\n     * 改变支付方式\n     */\n    public function select_payment() {\n        $json = new EcsJson;\n        $result = array('error' => '', 'content' => '', 'need_insure' => 0, 'payment' => 1);\n\n        /* 取得购物类型 */\n        $flow_type = isset($_SESSION['flow_type']) ? intval($_SESSION['flow_type']) : CART_GENERAL_GOODS;\n\n        /* 获得收货人信息 */\n        $consignee = model('Order')->get_consignee($_SESSION['user_id']);\n\n        /* 对商品信息赋值 */\n        $cart_goods = model('Order')->cart_goods($flow_type); // 取得商品列表，计算合计\n\n        if (empty($cart_goods) || !model('Order')->check_consignee_info($consignee, $flow_type)) {\n            $result['error'] = L('no_goods_in_cart');\n        } else {\n            /* 取得购物流程设置 */\n            $this->assign('config', C('CFG'));\n\n            /* 取得订单信息 */\n            $order = model('Order')->flow_order_info();\n\n            $order['pay_id'] = intval($_REQUEST['payment']);\n            $payment_info = model('Order')->payment_info($order['pay_id']);\n            $result['pay_code'] = $payment_info['pay_code'];\n\n            /* 保存 session */\n            $_SESSION['flow_order'] = $order;\n\n            /* 计算订单的费用 */\n            $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n            $this->assign('total', $total);\n\n            /* 取得可以得到的积分和红包 */\n            $this->assign('total_integral', model('Order')->cart_amount(false, $flow_type) - $total['bonus'] - $total['integral_money']);\n            $this->assign('total_bonus', price_format(model('Order')->get_total_bonus(), false));\n\n            /* 团购标志 */\n            if ($flow_type == CART_GROUP_BUY_GOODS) {\n                $this->assign('is_group_buy', 1);\n            }\n\n            $result['content'] = ECTouch::$view->fetch('library/order_total.lbi');\n        }\n\n        echo $json->encode($result);\n        exit;\n    }\n\n    /**\n     *  订单提交后修改付款方式\n     */\n    public function get_total() {\n        /* 检查支付方式 */\n        $pay_id = I('post.payment_id');\n        $payment_info = model('Order')->payment_info($pay_id);\n\n        /* 检查订单号 */\n        $order_sn = I('post.order_sn');\n        $order = model('Order')->order_info(0, $order_sn);\n        $order_id = $order['order_id'];\n        $order_amount = $order ['order_amount'] - $order ['pay_fee'];\n        $pay_fee = pay_fee($pay_id, $order_amount);\n        $order_amount += $pay_fee;\n        $data = \"pay_id='$pay_id', pay_name='$payment_info[pay_name]', pay_fee='$pay_fee', order_amount='$order_amount'\";\n        $this->model->table('order_info')->data($data)->where('order_id = ' . $order_id)->update();\n        $order = model('Order')->order_info($order_id);\n        /* 插入支付日志 */\n        $order ['log_id'] = model('ClipsBase')->insert_pay_log($order_id, $order ['order_amount'], PAY_ORDER);\n\n        die($order['goods_amount']);\n    }\n\n    public function select_pack() {\n        $result = array('error' => '', 'content' => '', 'need_insure' => 0);\n        /* 取得购物类型 */\n        $flow_type = isset($_SESSION['flow_type']) ? intval($_SESSION['flow_type']) : CART_GENERAL_GOODS;\n\n        /* 获得收货人信息 */\n        $consignee = model('Order')->get_consignee($_SESSION['user_id']);\n\n        /* 对商品信息赋值 */\n        $cart_goods = model('Order')->cart_goods($flow_type); // 取得商品列表，计算合计\n\n        if (empty($cart_goods) || !model('Order')->check_consignee_info($consignee, $flow_type)) {\n            $result['error'] = L('no_goods_in_cart');\n        } else {\n            /* 取得购物流程设置 */\n            $this->assign('config', C('CFG'));\n\n            /* 取得订单信息 */\n            $order = model('Order')->flow_order_info();\n\n            $order['pack_id'] = I('request.pack', 0, 'intval');\n\n            /* 保存 session */\n            $_SESSION['flow_order'] = $order;\n\n            /* 计算订单的费用 */\n            $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n            $this->assign('total', $total);\n\n            /* 取得可以得到的积分和红包 */\n            $this->assign('total_integral', model('Order')->cart_amount(false, $flow_type) - $total['bonus'] - $total['integral_money']);\n            $this->assign('total_bonus', price_format(model('Order')->get_total_bonus(), false));\n\n            /* 团购标志 */\n            if ($flow_type == CART_GROUP_BUY_GOODS) {\n                $this->assign('is_group_buy', 1);\n            }\n\n            $result['content'] = ECTouch::$view->fetch('library/order_total.lbi');\n        }\n\n        echo json_encode($result);\n        exit;\n    }\n\n    /**\n     * 改变贺卡\n     */\n    public function select_card() {\n        $result = array('error' => '', 'content' => '', 'need_insure' => 0);\n\n        /* 取得购物类型 */\n        $flow_type = isset($_SESSION['flow_type']) ? intval($_SESSION['flow_type']) : CART_GENERAL_GOODS;\n\n        /* 获得收货人信息 */\n        $consignee = model('Order')->get_consignee($_SESSION['user_id']);\n\n        /* 对商品信息赋值 */\n        $cart_goods = model('Order')->cart_goods($flow_type); // 取得商品列表，计算合计\n\n        if (empty($cart_goods) || !model('Order')->check_consignee_info($consignee, $flow_type)) {\n            $result['error'] = L('no_goods_in_cart');\n        } else {\n            /* 取得购物流程设置 */\n            $this->assign('config', C('CFG'));\n\n            /* 取得订单信息 */\n            $order = model('Order')->flow_order_info();\n\n            $order['card_id'] = intval($_REQUEST['card']);\n\n            /* 保存 session */\n            $_SESSION['flow_order'] = $order;\n\n            /* 计算订单的费用 */\n            $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n            $this->assign('total', $total);\n\n            /* 取得可以得到的积分和红包 */\n            $this->assign('total_integral', model('Order')->cart_amount(false, $flow_type) - $order['bonus'] - $total['integral_money']);\n            $this->assign('total_bonus', price_format(model('Order')->get_total_bonus(), false));\n\n            /* 团购标志 */\n            if ($flow_type == CART_GROUP_BUY_GOODS) {\n                $this->assign('is_group_buy', 1);\n            }\n\n            $result['content'] = ECTouch::$view->fetch('library/order_total.lbi');\n        }\n\n        echo json_encode($result);\n        exit;\n    }\n\n    /**\n     * 改变余额\n     */\n    public function change_surplus() {\n        $surplus = floatval($_GET['surplus']);\n        $user_info = model('Order')->user_info($_SESSION['user_id']);\n\n        if ($user_info['user_money'] + $user_info['credit_line'] < $surplus) {\n            $result['error'] = L('surplus_not_enough');\n        } else {\n            /* 取得购物类型 */\n            $flow_type = isset($_SESSION['flow_type']) ? intval($_SESSION['flow_type']) : CART_GENERAL_GOODS;\n\n            /* 取得购物流程设置 */\n            $this->assign('config', C('CFG'));\n\n            /* 获得收货人信息 */\n            $consignee = model('Order')->get_consignee($_SESSION['user_id']);\n\n            /* 对商品信息赋值 */\n            $cart_goods = model('Order')->cart_goods($flow_type); // 取得商品列表，计算合计\n\n            if (empty($cart_goods) || !model('Order')->check_consignee_info($consignee, $flow_type)) {\n                $result['error'] = L('no_goods_in_cart');\n            } else {\n                /* 取得订单信息 */\n                $order = model('Order')->flow_order_info();\n                $order['surplus'] = $surplus;\n\n                /* 计算订单的费用 */\n                $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n                $this->assign('total', $total);\n\n                /* 团购标志 */\n                if ($flow_type == CART_GROUP_BUY_GOODS) {\n                    $this->assign('is_group_buy', 1);\n                }\n\n                $result['content'] = ECTouch::$view->fetch('library/order_total.lbi');\n            }\n        }\n\n        die(json_encode($result));\n    }\n\n    /**\n     * 改变积分\n     */\n    public function change_integral() {\n        $points = floatval($_GET['points']);\n        $user_info = model('Order')->user_info($_SESSION['user_id']);\n\n        /* 取得订单信息 */\n        $order = model('Order')->flow_order_info();\n\n        $flow_points = model('Flow')->flow_available_points();  // 该订单允许使用的积分\n        $user_points = $user_info['pay_points']; // 用户的积分总数\n\n        if ($points > $user_points) {\n            $result['error'] = L('integral_not_enough');\n        } elseif ($points > $flow_points) {\n            $result['error'] = sprintf(L('integral_too_much'), $flow_points);\n        } else {\n            /* 取得购物类型 */\n            $flow_type = isset($_SESSION['flow_type']) ? intval($_SESSION['flow_type']) : CART_GENERAL_GOODS;\n\n            $order['integral'] = $points;\n\n            /* 获得收货人信息 */\n            $consignee = model('Order')->get_consignee($_SESSION['user_id']);\n\n            /* 对商品信息赋值 */\n            $cart_goods = model('Order')->cart_goods($flow_type); // 取得商品列表，计算合计\n\n            if (empty($cart_goods) || !model('Order')->check_consignee_info($consignee, $flow_type)) {\n                $result['error'] = L('no_goods_in_cart');\n            } else {\n                /* 计算订单的费用 */\n                $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n                $this->assign('total', $total);\n                $this->assign('config', C('CFG'));\n\n                /* 团购标志 */\n                if ($flow_type == CART_GROUP_BUY_GOODS) {\n                    $this->assign('is_group_buy', 1);\n                }\n\n                $result['content'] = ECTouch::$view->fetch('library/order_total.lbi');\n                $result['error'] = '';\n            }\n        }\n\n        die(json_encode($result));\n    }\n\n    /**\n     * 改变红包\n     */\n    public function change_bonus() {\n        $result = array('error' => '', 'content' => '');\n\n        /* 取得购物类型 */\n        $flow_type = isset($_SESSION['flow_type']) ? intval($_SESSION['flow_type']) : CART_GENERAL_GOODS;\n\n        /* 获得收货人信息 */\n        $consignee = model('Order')->get_consignee($_SESSION['user_id']);\n\n        /* 对商品信息赋值 */\n        $cart_goods = model('Order')->cart_goods($flow_type); // 取得商品列表，计算合计\n\n        if (empty($cart_goods) || !model('Order')->check_consignee_info($consignee, $flow_type)) {\n            $result['error'] = L('no_goods_in_cart');\n        } else {\n            /* 取得购物流程设置 */\n            $this->assign('config', C('CFG'));\n\n            /* 取得订单信息 */\n            $order = model('Order')->flow_order_info();\n\n            $bonus = model('Order')->bonus_info(intval($_GET['bonus']));\n\n            if ((!empty($bonus) && $bonus['user_id'] == $_SESSION['user_id']) || $_GET['bonus'] == 0) {\n                $order['bonus_id'] = intval($_GET['bonus']);\n            } else {\n                $order['bonus_id'] = 0;\n                $result['error'] = L('invalid_bonus');\n            }\n\n            /* 计算订单的费用 */\n            $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n            $this->assign('total', $total);\n\n            /* 团购标志 */\n            if ($flow_type == CART_GROUP_BUY_GOODS) {\n                $this->assign('is_group_buy', 1);\n            }\n\n            $result['content'] = ECTouch::$view->fetch('library/order_total.lbi');\n        }\n\n        die(json_encode($result));\n    }\n\n    /**\n     * 改变发票的设置\n     */\n    public function change_needinv() {\n        $result = array('error' => '', 'content' => '');\n        $_GET['inv_type'] = !empty($_GET['inv_type']) ? json_str_iconv(urldecode($_GET['inv_type'])) : '';\n        $_GET['invPayee'] = !empty($_GET['invPayee']) ? json_str_iconv(urldecode($_GET['invPayee'])) : '';\n        $_GET['inv_content'] = !empty($_GET['inv_content']) ? json_str_iconv(urldecode($_GET['inv_content'])) : '';\n\n        /* 取得购物类型 */\n        $flow_type = isset($_SESSION['flow_type']) ? intval($_SESSION['flow_type']) : CART_GENERAL_GOODS;\n\n        /* 获得收货人信息 */\n        $consignee = model('Order')->get_consignee($_SESSION['user_id']);\n\n        /* 对商品信息赋值 */\n        $cart_goods = model('Order')->cart_goods($flow_type); // 取得商品列表，计算合计\n\n        if (empty($cart_goods) || !model('Order')->check_consignee_info($consignee, $flow_type)) {\n            $result['error'] = L('no_goods_in_cart');\n            die(json_encode($result));\n        } else {\n            /* 取得购物流程设置 */\n            $this->assign('config', C('CFG'));\n\n            /* 取得订单信息 */\n            $order = model('Order')->flow_order_info();\n\n            if (isset($_GET['need_inv']) && intval($_GET['need_inv']) == 1) {\n                $order['need_inv'] = 1;\n                $order['inv_type'] = trim(stripslashes($_GET['inv_type']));\n                $order['inv_payee'] = trim(stripslashes($_GET['inv_payee']));\n                $order['inv_content'] = trim(stripslashes($_GET['inv_content']));\n            } else {\n                $order['need_inv'] = 0;\n                $order['inv_type'] = '';\n                $order['inv_payee'] = '';\n                $order['inv_content'] = '';\n            }\n\n            /* 计算订单的费用 */\n            $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n            $this->assign('total', $total);\n\n            /* 团购标志 */\n            if ($flow_type == CART_GROUP_BUY_GOODS) {\n                $this->assign('is_group_buy', 1);\n            }\n\n            die(ECTouch::$view->fetch('library/order_total.lbi'));\n        }\n    }\n\n    /**\n     * 改变缺货处理时的方式\n     */\n    public function change_oos() {\n        /* 取得订单信息 */\n        $order = model('Order')->flow_order_info();\n\n        $order['how_oos'] = intval($_GET['oos']);\n\n        /* 保存 session */\n        $_SESSION['flow_order'] = $order;\n    }\n\n    /**\n     * 检查用户输入的余额\n     */\n    public function check_surplus() {\n        /* ------------------------------------------------------ */\n        //-- 检查用户输入的余额\n        /* ------------------------------------------------------ */\n        $surplus = floatval($_GET['surplus']);\n        $user_info = model('Order')->user_info($_SESSION['user_id']);\n\n        if (($user_info['user_money'] + $user_info['credit_line'] < $surplus)) {\n            die(L('surplus_not_enough'));\n        }\n\n        exit;\n    }\n\n    /**\n     * 检查用户输入的余额\n     */\n    public function check_integral() {\n        $points = floatval($_GET['integral']);\n        $user_info = model('Order')->user_info($_SESSION['user_id']);\n        $flow_points = model('Flow')->flow_available_points();  // 该订单允许使用的积分\n        $user_points = $user_info['pay_points']; // 用户的积分总数\n\n        if ($points > $user_points) {\n            die(L('integral_not_enough'));\n        }\n\n        if ($points > $flow_points) {\n            die(sprintf(L('integral_too_much'), $flow_points));\n        }\n\n        exit;\n    }\n\n    /**\n     * 放入收藏夹\n     */\n    public function drop_to_collect() {\n        if ($_SESSION['user_id'] > 0) {\n            $rec_id = intval($_GET['id']);\n            $goods_id = $this->model->table('cart')->field('goods_id')->where(\"rec_id = '$rec_id' AND session_id = '\" . SESS_ID . \"'\")->getOne();\n            $count = $this->model->table('collect_goods')->field('goods_id')->where(\"user_id = '$_SESSION[user_id]' AND goods_id = '$goods_id'\")->getOne();\n            if (empty($count)) {\n                $data['user_id'] = $_SESSION[user_id];\n                $data['goods_id'] = $goods_id;\n                $data['add_time'] = gmtime();\n                $this->model->table('collect_goods')->data($data)->insert();\n            }\n            model('Flow')->flow_drop_cart_goods($rec_id);\n        }\n        ecs_header(\"Location: \" . url('flow/index') . \"\\n\");\n        exit;\n    }\n\n    /**\n     *  验证红包序列号\n     */\n    public function validate_bonus() {\n        $bonus_sn = trim($_REQUEST['bonus_sn']);\n        if (is_numeric($bonus_sn)) {\n            $bonus = model('Order')->bonus_info(0, $bonus_sn);\n        } else {\n            $bonus = array();\n        }\n        $bonus_kill = price_format($bonus['type_money'], false);\n\n        $result = array('error' => '', 'content' => '');\n\n        /* 取得购物类型 */\n        $flow_type = isset($_SESSION['flow_type']) ? intval($_SESSION['flow_type']) : CART_GENERAL_GOODS;\n\n        /* 获得收货人信息 */\n        $consignee = model('Order')->get_consignee($_SESSION['user_id']);\n\n        /* 对商品信息赋值 */\n        $cart_goods = model('Order')->cart_goods($flow_type); // 取得商品列表，计算合计\n\n        if (empty($cart_goods) || !model('Order')->check_consignee_info($consignee, $flow_type)) {\n            $result['error'] = L('no_goods_in_cart');\n        } else {\n            /* 取得购物流程设置 */\n            $this->assign('config', C('CFG'));\n\n            /* 取得订单信息 */\n            $order = model('Order')->flow_order_info();\n\n\n            if (((!empty($bonus) && $bonus['user_id'] == $_SESSION['user_id']) || ($bonus['type_money'] > 0 && empty($bonus['user_id']))) && $bonus['order_id'] <= 0) {\n                //$order['bonus_kill'] = $bonus['type_money'];\n                $now = gmtime();\n                if ($now > $bonus['use_end_date']) {\n                    $order['bonus_id'] = '';\n                    $result['error'] = L('bonus_use_expire');\n                } else {\n                    $order['bonus_id'] = $bonus['bonus_id'];\n                    $order['bonus_sn'] = $bonus_sn;\n                }\n            } else {\n                $order['bonus_id'] = '';\n                $result['error'] = L('invalid_bonus');\n            }\n\n            /* 计算订单的费用 */\n            $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n\n            if ($total['goods_price'] < $bonus['min_goods_amount']) {\n                $order['bonus_id'] = '';\n                /* 重新计算订单 */\n                $total = model('Users')->order_fee($order, $cart_goods, $consignee);\n                $result['error'] = sprintf(L('bonus_min_amount_error'), price_format($bonus['min_goods_amount'], false));\n            }\n\n            $this->assign('total', $total);\n\n            /* 团购标志 */\n            if ($flow_type == CART_GROUP_BUY_GOODS) {\n                $this->assign('is_group_buy', 1);\n            }\n\n            $result['content'] = ECTouch::$view->fetch('library/order_total.lbi');\n        }\n        die(json_encode($result));\n    }\n\n    /**\n     * 添加礼包到购物车\n     */\n    public function add_package_to_cart() {\n        $_POST['package_info'] = json_str_iconv($_POST['package_info']);\n\n        $result = array('error' => 0, 'message' => '', 'content' => '', 'package_id' => '');\n\n        if (empty($_POST['package_info'])) {\n            $result['error'] = 1;\n            die(json_encode($result));\n        }\n        $json = new EcsJson;\n        $package = $json->decode($_POST['package_info']);\n\n        /* 如果是一步购物，先清空购物车 */\n        if (C('one_step_buy') == '1') {\n            model('Order')->clear_cart();\n        }\n\n        /* 商品数量是否合法 */\n        if (!is_numeric($package->number) || intval($package->number) <= 0) {\n            $result['error'] = 1;\n            $result['message'] = L('invalid_number');\n        } else {\n            /* 添加到购物车 */\n            if (model('Order')->add_package_to_cart($package->package_id, $package->number)) {\n                if (C('cart_confirm') > 2) {\n                    $result['message'] = '';\n                } else {\n                    $result['message'] = C('cart_confirm') == 1 ? L('addto_cart_success_1') : L('addto_cart_success_2');\n                }\n\n                $result['content'] = insert_cart_info();\n                $result['one_step_buy'] = C('one_step_buy');\n            } else {\n                $result['message'] = ECTouch::err()->last_message();\n                $result['error'] = ECTouch::err()->error_no;\n                $result['package_id'] = stripslashes($package->package_id);\n            }\n        }\n        $cart_confirm = C('cart_confirm');\n        $result['confirm_type'] = !empty($cart_confirm) ? $cart_confirm : 2;\n        die(json_encode($result));\n    }\n\n    /**\n     * 改变配送地址\n     */\n    public function select_address() {\n        $result = array('error' => '', 'content' => '', 'need_insure' => 0, 'address' => 1);\n        $address_id = intval($_REQUEST['address']);\n        if (model('Users')->save_consignee_default($address_id)) {\n            die(json_encode($result));\n        } else {\n            $result['error'] = '选择错误';\n            die(json_encode($result));\n        }\n    }\n\n    /**\n     * 更换支付方式\n     */\n    public function change_payment() {\n        if ($_POST) {\n            // 接收数据\n            $payment_id = intval($_POST ['payment']);\n            $order_sn = $_POST ['order_sn'];\n\n            if ($order_sn) {\n                // 订单信息\n                $order_info = model('Order')->order_info(0, $order_sn);\n                $payment_id = $payment_id ? $payment_id : $order_info['pay_id'];\n                // 支付信息\n                $payment_info = model('Order')->payment_info($payment_id);\n\n                // 用户不对应\n                if ($_SESSION ['user_id'] != $order_info ['user_id']) {\n                    show_message('请选择对应的订单', '订单列表', url('user/order_list'));\n                    exit();\n                }\n                $amount = $order_info ['order_amount'] - $order_info ['pay_fee'];\n                $pay_fee = pay_fee($payment_id, $amount, 0);\n\n                /* 如果全部使用余额支付，检查余额是否足够 */\n                if ($payment_info ['pay_code'] == 'balance' && $order_info ['order_amount'] > 0) {\n                    //用户信息\n                    $user_info = model('Order')->user_info($_SESSION ['user_id']);\n\n                    if ($order_info ['order_amount'] > ($user_info ['user_money'] + $user_info ['credit_line'])) {\n                        show_message(L('balance_not_enough'));\n                    } else {\n                        $order ['surplus'] = $order_info ['order_amount'];\n                        $order ['order_amount'] = 0;\n                    }\n                    /* 如果订单金额为0（使用余额或积分或红包支付），修改订单状态为已确认、已付款 */\n                    if ($order ['order_amount'] <= 0) {\n                        $order ['order_status'] = OS_CONFIRMED;\n                        $order ['confirm_time'] = gmtime();\n                        $order ['pay_status'] = PS_PAYED;\n                        $order ['pay_time'] = gmtime();\n                        $order ['order_amount'] = 0;\n                    }\n\n                    /* 处理余额 */\n                    if ($order_info ['user_id'] > 0 && $order ['surplus'] > 0) {\n                        model('ClipsBase')->log_account_change($order_info ['user_id'], $order ['surplus'] * (- 1), 0, 0, 0, sprintf(L('pay_order'), $order_info ['order_sn']));\n                    }\n                    $data['pay_id'] = $payment_info['pay_id'];\n                    $data['pay_name'] = $payment_info ['pay_name'];\n                    $data['pay_fee'] = $pay_fee;\n                    $data['surplus'] = $order['surplus'];\n                    $data['order_amount'] = $order['order_amount'];\n                    $data['order_status'] = $order['order_status'];\n                    $data['confirm_time'] = $order['confirm_time'];\n                    $data['pay_status'] = $order['pay_status'];\n                    $data['pay_time'] = $order['pay_time'];\n                    $this->model->table('order_info')->data($data)->where('order_id = ' . $order_info ['order_id'])->update();\n                    $info['order_amount'] = $order['order_amount'];\n                    $this->model->table('pay_log')->data($info)->where('order_id = ' . $order_info ['order_id'])->update();\n                    $this->alert('支付成功', url('user/order_list'));\n                } else {\n\n                    // 最新总额\n                    $order_amount = $amount + $pay_fee;\n                    $data_order['pay_id'] = $payment_id;\n                    $data_order['pay_name'] = $payment_info ['pay_name'];\n                    $data_order['pay_fee'] = $pay_fee;\n                    $data_order['order_amount'] = $order_amount;\n                    $this->model->table('order_info')->data($data_order)->where('order_id = ' . $order_info ['order_id'])->update();\n                    $data_pay['order_amount'] = $order_amount;\n                    $this->model->table('pay_log')->data($data_pay)->where('order_id = ' . $order_info ['order_id'])->update();\n                    /* 调用相应的支付方式文件 */\n                    include_once (ROOT_PATH . 'plugins/payment/' . $payment_info ['pay_code'] . '.php');\n\n                    /* 取得在线支付方式的支付链接，直接跳转 */\n                    $pay_obj = new $payment_info ['pay_code'] ();\n                    $pay_code = $pay_obj->get_code($order_info, $payment_info);\n\n                    if (empty($pay_code)) {\n                        $this->redirect('user/order_list');\n                        exit;\n                    }\n\n                    echo $pay_code;\n                }\n                exit();\n            } else {\n                show_message('请重新选择支付方式', '订单列表', url('user/order_list'));\n            }\n        } else {\n            $this->redirect(url('flow/index'));\n        }\n    }\n\n    /**\n\n     * 获取配送地址列表\n\n     */\n    public function consignee_list() {\n        if (IS_AJAX) {\n            $start = $_POST ['last'];\n            $limit = $_POST ['amount'];\n            // 获得用户所有的收货人信息\n            $consignee_list = model('Users')->get_consignee_list($_SESSION['user_id'], 0, $limit, $start);\n            if ($consignee_list) {\n                foreach ($consignee_list as $k => $v) {\n                    $address = '';\n                    if ($v['province']) {\n                        $address .= model('RegionBase')->get_region_name($v['province']);\n                    }\n                    if ($v['city']) {\n                        $address .= model('RegionBase')->get_region_name($v['city']);\n                    }\n                    if ($v['district']) {\n                        $address .= model('RegionBase')->get_region_name($v['district']);\n                    }\n                    $v['address'] = $address . ' ' . $v['address'];\n                    $v['url'] = url('flow/consignee', array('id' => $v ['address_id']));\n                    $this->assign('consignee', $v);\n                    $sayList [] = array(\n                        'single_item' => ECTouch::view()->fetch('library/asynclist_info.lbi')\n                    );\n                }\n            }\n            die(json_encode($sayList));\n            exit();\n        }\n        // 赋值于模板\n        $this->assign('title', L('consignee_info'));\n        // 加载user语言包\n        require(APP_PATH . C('_APP_NAME') . '/languages/' . C('LANG') . '/user.php');\n        $_LANG = array_merge(L(), $_LANG);\n        $this->assign('lang', $_LANG);\n        $this->display('flow_consignee_list.dwt');\n    }\n\n    /**\n\n     * 删除收货人信息\n\n     */\n    public function drop_consignee() {\n        $consignee_id = intval($_GET['id']);\n        if (model('Users')->drop_consignee($consignee_id)) {\n            ecs_header(\"Location: \" . url('flow/consignee_list') . \"\\n\");\n            exit;\n        } else {\n            show_message(L('not_fount_consignee'));\n        }\n    }\n\n}\n",
			"file": "include/apps/default/controllers/FlowController.class.php",
			"file_size": 98243,
			"file_write_time": 131084692540000000,
			"settings":
			{
				"buffer_size": 89691,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n<div class=\"con\">\n  <div class=\"ect-bg\">\n  <header class=\"ect-header ect-margin-tb ect-margin-lr text-center ect-bg icon-write\"> <a href=\"javascript:history.go(-1)\" class=\"pull-left ect-icon ect-icon1 ect-icon-history\"></a> <span>{$title}</span> <a href=\"javascript:;\" onClick=\"openMune()\" class=\"pull-right ect-icon ect-icon1 ect-icon-mune\"></a></header>\n  <nav class=\"ect-nav ect-nav-list\" style=\"display:none;\"> <!-- #BeginLibraryItem \"/library/page_menu.lbi\" --><!-- #EndLibraryItem --> </nav>\n</div>\n  <section class=\"ect-bg-colorf ect-padding-lr flow-done\">\n  		<i class=\"glyphicon glyphicon-ok\"></i>\n        <p class=\"ect-margin-tb\">{$lang.remember_order_number}：<b class=\"ect-color\">{$order.order_sn}</b></p>\n        <p class=\"ect-margin-tb\"><!--{if $order.shipping_name}-->{$lang.select_shipping}:<b>{$order.shipping_name}</b><!--{/if}--></p>\n        <p class=\"ect-margin-tb\">{$lang.order_amount}: <b>{$total.amount_formated}</b></p>\n        <!--{if $virtual_card}-->\n        <div class=\"alert alert-warning\" role=\"alert\" style=\"height: 100px;\">\n 	    <!--{foreach from=$virtual_card item=vgoods}-->\n            <h3 style=\"color:#2359B1; font-size:15px;\">{$vgoods.goods_name}</h3>\n            <!--{foreach from=$vgoods.info item=card}-->\n            <ul style=\"list-style:none;padding:0;margin:0;clear:both\">\n              <!--{if $card.card_sn}-->\n              <li> <strong>{$lang.card_sn}:</strong><span style=\"color:red;\">{$card.card_sn}</span> </li>\n              <!--{/if}--> \n              <!--{if $card.card_password}-->\n              <li> <strong>{$lang.card_password}:</strong><span style=\"color:red;\">{$card.card_password}</span> </li>\n              <!--{/if}--> \n              <!--{if $card.end_date}-->\n              <li> <strong>{$lang.end_date}:</strong>{$card.end_date} </li>\n              <!--{/if}-->\n            </ul>\n        	<!--{/foreach}--> \n        <!--{/foreach}--> \n		</div>\n        <!-- {/if} -->\n      {if $pay_desc}\n      <p class=\"ect-margin-tb\">{$lang.select_payment}: <b>{$order.pay_name}</b></p>\n      <p class=\"ect-margin-tb text-center\" style=\"background-color: rgb(255, 240, 240);padding: 10px;\">{$pay_desc}</p>\n      {/if}\n       <p class=\"ect-margin-tb text-center\">{$pay_online}</p>\n       <p class=\"ect-margin-tb text-center\">{$order_submit_back}</p>\n  </section>\n</div>",
			"file": "themes/default/flow_done.dwt",
			"file_size": 2360,
			"file_write_time": 131084692540000000,
			"settings":
			{
				"buffer_size": 2320,
				"line_ending": "Windows"
			}
		},
		{
			"file": "themes/default/flow.dwt",
			"settings":
			{
				"buffer_size": 2655,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/Users/bbmm/github/dazahui/ectouch20/include/base/helpers/function.php",
		"/Users/bbmm/workspace/vou/code/application/views/monitor.php",
		"/Users/bbmm/workspace/vou/code/application/config/database.php",
		"/Users/bbmm/github/dazahui/ectouch20/admin/index.php",
		"/Users/bbmm/github/dazahui/ectouch20/themes/default/default/index.dwt",
		"/Users/bbmm/github/dazahui/ectouch20/data/caches/compiled/index.dwt.php",
		"/Users/bbmm/github/dazahui/ectouch20/安装说明.docx",
		"/Users/bbmm/github/dazahui/ectouch20/index.php"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"send_wechat_message",
			"p.openid",
			"send_wechat_message",
			"p.openid",
			"openid",
			"sale/apply",
			"sale/apply\n",
			"');\n",
			"apply",
			"></"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 131775,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										18092,
										18098
									],
									[
										21191,
										21197
									],
									[
										21301,
										21307
									],
									[
										21312,
										21318
									],
									[
										21671,
										21677
									],
									[
										21727,
										21733
									],
									[
										21771,
										21777
									],
									[
										22081,
										22087
									],
									[
										22326,
										22332
									],
									[
										22527,
										22533
									],
									[
										22714,
										22720
									],
									[
										22872,
										22878
									],
									[
										23019,
										23025
									],
									[
										23127,
										23133
									],
									[
										23298,
										23304
									],
									[
										23393,
										23399
									],
									[
										23480,
										23486
									],
									[
										23523,
										23529
									],
									[
										23540,
										23546
									],
									[
										23754,
										23760
									],
									[
										23771,
										23777
									],
									[
										23985,
										23991
									],
									[
										24002,
										24008
									],
									[
										24092,
										24098
									],
									[
										24134,
										24140
									],
									[
										24327,
										24333
									],
									[
										24494,
										24500
									],
									[
										24510,
										24516
									],
									[
										24536,
										24542
									],
									[
										24546,
										24552
									],
									[
										24563,
										24569
									],
									[
										24575,
										24581
									],
									[
										24707,
										24713
									],
									[
										24900,
										24906
									],
									[
										25191,
										25197
									],
									[
										25212,
										25218
									],
									[
										25398,
										25404
									],
									[
										25999,
										26005
									],
									[
										26014,
										26020
									],
									[
										26503,
										26509
									],
									[
										26574,
										26580
									],
									[
										26843,
										26849
									],
									[
										26866,
										26872
									],
									[
										27316,
										27322
									],
									[
										27932,
										27938
									],
									[
										28118,
										28124
									],
									[
										28493,
										28499
									],
									[
										28503,
										28509
									],
									[
										28790,
										28796
									],
									[
										28816,
										28822
									],
									[
										28958,
										28964
									],
									[
										28974,
										28980
									],
									[
										29293,
										29299
									],
									[
										29314,
										29320
									],
									[
										29592,
										29598
									],
									[
										29892,
										29898
									],
									[
										29921,
										29927
									],
									[
										29944,
										29950
									],
									[
										30431,
										30437
									],
									[
										30727,
										30733
									],
									[
										30992,
										30998
									],
									[
										31376,
										31382
									],
									[
										31463,
										31469
									],
									[
										31556,
										31562
									],
									[
										31578,
										31584
									],
									[
										31695,
										31701
									],
									[
										32049,
										32055
									],
									[
										32140,
										32146
									],
									[
										32240,
										32246
									],
									[
										32262,
										32268
									],
									[
										32387,
										32393
									],
									[
										32765,
										32771
									],
									[
										32860,
										32866
									],
									[
										32964,
										32970
									],
									[
										32986,
										32992
									],
									[
										33119,
										33125
									],
									[
										33481,
										33487
									],
									[
										33818,
										33824
									],
									[
										33933,
										33939
									],
									[
										33968,
										33974
									],
									[
										34417,
										34423
									],
									[
										34706,
										34712
									],
									[
										34743,
										34749
									],
									[
										34839,
										34845
									],
									[
										35306,
										35312
									],
									[
										35373,
										35379
									],
									[
										35464,
										35470
									],
									[
										35631,
										35637
									],
									[
										35643,
										35649
									],
									[
										35897,
										35903
									],
									[
										36022,
										36028
									],
									[
										36224,
										36230
									],
									[
										36242,
										36248
									],
									[
										36540,
										36546
									],
									[
										36792,
										36798
									],
									[
										36998,
										37004
									],
									[
										37219,
										37225
									],
									[
										37232,
										37238
									],
									[
										37569,
										37575
									],
									[
										37861,
										37867
									],
									[
										38165,
										38171
									],
									[
										38418,
										38424
									],
									[
										38620,
										38626
									],
									[
										38638,
										38644
									],
									[
										38830,
										38836
									],
									[
										38904,
										38910
									],
									[
										38975,
										38981
									],
									[
										38987,
										38993
									],
									[
										39232,
										39238
									],
									[
										39583,
										39589
									],
									[
										39620,
										39626
									],
									[
										39864,
										39870
									],
									[
										39907,
										39913
									],
									[
										39934,
										39940
									],
									[
										39967,
										39973
									],
									[
										40343,
										40349
									],
									[
										40362,
										40368
									],
									[
										40414,
										40420
									],
									[
										40431,
										40437
									],
									[
										40693,
										40699
									],
									[
										41102,
										41108
									],
									[
										41255,
										41261
									],
									[
										41440,
										41446
									],
									[
										41850,
										41856
									],
									[
										42034,
										42040
									],
									[
										42051,
										42057
									],
									[
										42086,
										42092
									],
									[
										42116,
										42122
									],
									[
										42159,
										42165
									],
									[
										42285,
										42291
									],
									[
										42425,
										42431
									],
									[
										42437,
										42443
									],
									[
										42619,
										42625
									],
									[
										42631,
										42637
									],
									[
										42940,
										42946
									],
									[
										43384,
										43390
									],
									[
										43483,
										43489
									],
									[
										43588,
										43594
									],
									[
										43610,
										43616
									],
									[
										43751,
										43757
									],
									[
										44165,
										44171
									],
									[
										44268,
										44274
									],
									[
										44380,
										44386
									],
									[
										44402,
										44408
									],
									[
										44551,
										44557
									],
									[
										44989,
										44995
									],
									[
										45096,
										45102
									],
									[
										45212,
										45218
									],
									[
										45234,
										45240
									],
									[
										45391,
										45397
									],
									[
										45747,
										45753
									],
									[
										45768,
										45774
									],
									[
										45954,
										45960
									],
									[
										46227,
										46233
									],
									[
										46499,
										46505
									],
									[
										46757,
										46763
									],
									[
										46818,
										46824
									],
									[
										47020,
										47026
									],
									[
										47035,
										47041
									],
									[
										47142,
										47148
									],
									[
										47185,
										47191
									],
									[
										47391,
										47397
									],
									[
										47586,
										47592
									],
									[
										47596,
										47602
									],
									[
										47701,
										47707
									],
									[
										47832,
										47838
									],
									[
										47962,
										47968
									],
									[
										47972,
										47978
									],
									[
										48087,
										48093
									],
									[
										48187,
										48193
									],
									[
										48319,
										48325
									],
									[
										48329,
										48335
									],
									[
										48581,
										48587
									],
									[
										48590,
										48596
									],
									[
										48695,
										48701
									],
									[
										48812,
										48818
									],
									[
										48822,
										48828
									],
									[
										48964,
										48970
									],
									[
										48978,
										48984
									],
									[
										49100,
										49106
									],
									[
										49222,
										49228
									],
									[
										49237,
										49243
									],
									[
										49410,
										49416
									],
									[
										49576,
										49582
									],
									[
										49609,
										49615
									],
									[
										49820,
										49826
									],
									[
										49947,
										49953
									],
									[
										49957,
										49963
									],
									[
										50092,
										50098
									],
									[
										50195,
										50201
									],
									[
										50321,
										50327
									],
									[
										50331,
										50337
									],
									[
										50496,
										50502
									],
									[
										50686,
										50692
									],
									[
										50707,
										50713
									],
									[
										50910,
										50916
									],
									[
										50979,
										50985
									],
									[
										50990,
										50996
									],
									[
										51147,
										51153
									],
									[
										51168,
										51174
									],
									[
										51370,
										51376
									],
									[
										51439,
										51445
									],
									[
										51450,
										51456
									],
									[
										51581,
										51587
									],
									[
										51602,
										51608
									],
									[
										51751,
										51757
									],
									[
										51963,
										51969
									],
									[
										51973,
										51979
									],
									[
										52088,
										52094
									],
									[
										52109,
										52115
									],
									[
										52285,
										52291
									],
									[
										52321,
										52327
									],
									[
										52468,
										52474
									],
									[
										52504,
										52510
									],
									[
										52665,
										52671
									],
									[
										52686,
										52692
									],
									[
										52870,
										52876
									],
									[
										52906,
										52912
									],
									[
										53131,
										53137
									],
									[
										53167,
										53173
									],
									[
										53425,
										53431
									],
									[
										53705,
										53711
									],
									[
										53719,
										53725
									],
									[
										53740,
										53746
									],
									[
										53769,
										53775
									],
									[
										54083,
										54089
									],
									[
										54313,
										54319
									],
									[
										54347,
										54353
									],
									[
										54359,
										54365
									],
									[
										54583,
										54589
									],
									[
										54733,
										54739
									],
									[
										54781,
										54787
									],
									[
										54947,
										54953
									],
									[
										54961,
										54967
									],
									[
										55113,
										55119
									],
									[
										55203,
										55209
									],
									[
										55242,
										55248
									],
									[
										55254,
										55260
									],
									[
										55463,
										55469
									],
									[
										55641,
										55647
									],
									[
										55915,
										55921
									],
									[
										56173,
										56179
									],
									[
										56234,
										56240
									],
									[
										56436,
										56442
									],
									[
										56451,
										56457
									],
									[
										56558,
										56564
									],
									[
										56601,
										56607
									],
									[
										56807,
										56813
									],
									[
										57002,
										57008
									],
									[
										57012,
										57018
									],
									[
										57117,
										57123
									],
									[
										57248,
										57254
									],
									[
										57378,
										57384
									],
									[
										57388,
										57394
									],
									[
										57503,
										57509
									],
									[
										57603,
										57609
									],
									[
										57735,
										57741
									],
									[
										57745,
										57751
									],
									[
										57997,
										58003
									],
									[
										58006,
										58012
									],
									[
										58111,
										58117
									],
									[
										58228,
										58234
									],
									[
										58238,
										58244
									],
									[
										58380,
										58386
									],
									[
										58394,
										58400
									],
									[
										58516,
										58522
									],
									[
										58638,
										58644
									],
									[
										58653,
										58659
									],
									[
										58826,
										58832
									],
									[
										58992,
										58998
									],
									[
										59025,
										59031
									],
									[
										59236,
										59242
									],
									[
										59363,
										59369
									],
									[
										59373,
										59379
									],
									[
										59508,
										59514
									],
									[
										59611,
										59617
									],
									[
										59737,
										59743
									],
									[
										59747,
										59753
									],
									[
										59912,
										59918
									],
									[
										60102,
										60108
									],
									[
										60123,
										60129
									],
									[
										60326,
										60332
									],
									[
										60395,
										60401
									],
									[
										60406,
										60412
									],
									[
										60563,
										60569
									],
									[
										60584,
										60590
									],
									[
										60786,
										60792
									],
									[
										60855,
										60861
									],
									[
										60866,
										60872
									],
									[
										60997,
										61003
									],
									[
										61018,
										61024
									],
									[
										61167,
										61173
									],
									[
										61379,
										61385
									],
									[
										61389,
										61395
									],
									[
										61504,
										61510
									],
									[
										61525,
										61531
									],
									[
										61701,
										61707
									],
									[
										61737,
										61743
									],
									[
										61884,
										61890
									],
									[
										61920,
										61926
									],
									[
										62081,
										62087
									],
									[
										62102,
										62108
									],
									[
										62286,
										62292
									],
									[
										62322,
										62328
									],
									[
										62547,
										62553
									],
									[
										62583,
										62589
									],
									[
										62841,
										62847
									],
									[
										63121,
										63127
									],
									[
										63135,
										63141
									],
									[
										63156,
										63162
									],
									[
										63185,
										63191
									],
									[
										63499,
										63505
									],
									[
										63733,
										63739
									],
									[
										63767,
										63773
									],
									[
										63779,
										63785
									],
									[
										64003,
										64009
									],
									[
										64153,
										64159
									],
									[
										64201,
										64207
									],
									[
										64367,
										64373
									],
									[
										64381,
										64387
									],
									[
										64533,
										64539
									],
									[
										64623,
										64629
									],
									[
										64662,
										64668
									],
									[
										64674,
										64680
									],
									[
										64883,
										64889
									],
									[
										65061,
										65067
									],
									[
										65438,
										65444
									],
									[
										65738,
										65744
									],
									[
										66010,
										66016
									],
									[
										66325,
										66331
									],
									[
										66823,
										66829
									],
									[
										66843,
										66849
									],
									[
										66935,
										66941
									],
									[
										67028,
										67034
									],
									[
										67391,
										67397
									],
									[
										67585,
										67591
									],
									[
										67686,
										67692
									],
									[
										67902,
										67908
									],
									[
										67964,
										67970
									],
									[
										68021,
										68027
									],
									[
										68148,
										68154
									],
									[
										68210,
										68216
									],
									[
										68222,
										68228
									],
									[
										68381,
										68387
									],
									[
										68604,
										68610
									],
									[
										68726,
										68732
									],
									[
										68738,
										68744
									],
									[
										68952,
										68958
									],
									[
										69033,
										69039
									],
									[
										69043,
										69049
									],
									[
										69470,
										69476
									],
									[
										69490,
										69496
									],
									[
										69582,
										69588
									],
									[
										69675,
										69681
									],
									[
										70038,
										70044
									],
									[
										70268,
										70274
									],
									[
										70611,
										70617
									],
									[
										70910,
										70916
									],
									[
										71163,
										71169
									],
									[
										71189,
										71195
									],
									[
										71214,
										71220
									],
									[
										71427,
										71433
									],
									[
										71628,
										71634
									],
									[
										71650,
										71656
									],
									[
										71970,
										71976
									],
									[
										71991,
										71997
									],
									[
										72328,
										72334
									],
									[
										72350,
										72356
									],
									[
										72386,
										72392
									],
									[
										72406,
										72412
									],
									[
										72616,
										72622
									],
									[
										72639,
										72645
									],
									[
										72665,
										72671
									],
									[
										72703,
										72709
									],
									[
										72725,
										72731
									],
									[
										72762,
										72768
									],
									[
										72780,
										72786
									],
									[
										72933,
										72939
									],
									[
										72944,
										72950
									],
									[
										73324,
										73330
									],
									[
										73444,
										73450
									],
									[
										73469,
										73475
									],
									[
										73891,
										73897
									],
									[
										73969,
										73975
									],
									[
										73994,
										74000
									],
									[
										74356,
										74362
									],
									[
										74725,
										74731
									],
									[
										74756,
										74762
									],
									[
										75088,
										75094
									],
									[
										75352,
										75358
									],
									[
										75375,
										75381
									],
									[
										75774,
										75780
									],
									[
										76359,
										76365
									],
									[
										76750,
										76756
									],
									[
										77275,
										77281
									],
									[
										77533,
										77539
									],
									[
										78032,
										78038
									],
									[
										78415,
										78421
									],
									[
										78433,
										78439
									],
									[
										78539,
										78545
									],
									[
										78554,
										78560
									],
									[
										79019,
										79025
									],
									[
										79030,
										79036
									],
									[
										79469,
										79475
									],
									[
										79492,
										79498
									],
									[
										79684,
										79690
									],
									[
										79702,
										79708
									],
									[
										79742,
										79748
									],
									[
										79953,
										79959
									],
									[
										79968,
										79974
									],
									[
										80259,
										80265
									],
									[
										80271,
										80277
									],
									[
										80619,
										80625
									],
									[
										81002,
										81008
									],
									[
										81020,
										81026
									],
									[
										81126,
										81132
									],
									[
										81141,
										81147
									],
									[
										81606,
										81612
									],
									[
										81617,
										81623
									],
									[
										82056,
										82062
									],
									[
										82079,
										82085
									],
									[
										82257,
										82263
									],
									[
										82275,
										82281
									],
									[
										82315,
										82321
									],
									[
										82547,
										82553
									],
									[
										82562,
										82568
									],
									[
										82902,
										82908
									],
									[
										82914,
										82920
									],
									[
										83254,
										83260
									],
									[
										83779,
										83785
									],
									[
										84156,
										84162
									],
									[
										84657,
										84663
									],
									[
										85168,
										85174
									],
									[
										85659,
										85665
									],
									[
										86084,
										86090
									],
									[
										86609,
										86615
									],
									[
										86867,
										86873
									],
									[
										87366,
										87372
									],
									[
										87749,
										87755
									],
									[
										87818,
										87824
									],
									[
										87929,
										87935
									],
									[
										87944,
										87950
									],
									[
										88409,
										88415
									],
									[
										88420,
										88426
									],
									[
										88859,
										88865
									],
									[
										88899,
										88905
									],
									[
										89091,
										89097
									],
									[
										89160,
										89166
									],
									[
										89205,
										89211
									],
									[
										89388,
										89394
									],
									[
										89509,
										89515
									],
									[
										89524,
										89530
									],
									[
										89845,
										89851
									],
									[
										89857,
										89863
									],
									[
										108032,
										108038
									],
									[
										128910,
										128916
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								41630,
								41630
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ 	].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 9053.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "include/apps/default/helpers/function.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 53449,
						"regions":
						{
						},
						"selection":
						[
							[
								51792,
								51797
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 23488.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "include/apps/default/controllers/MY_FlowController.class.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 24516,
						"regions":
						{
						},
						"selection":
						[
							[
								15088,
								15107
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4776.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "include/apps/default/controllers/FlowController.class.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 89691,
						"regions":
						{
						},
						"selection":
						[
							[
								59161,
								59161
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 21676.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "themes/default/flow_done.dwt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2320,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "themes/default/flow.dwt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2655,
						"regions":
						{
						},
						"selection":
						[
							[
								1744,
								1744
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 511.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "untitled.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"my_flow",
				"include/apps/default/controllers/MY_FlowController.class.php"
			],
			[
				"flow.w",
				"themes/default/flow.dwt"
			],
			[
				"flowc",
				"include/apps/default/controllers/FlowController.class.php"
			],
			[
				"function",
				"include/apps/default/helpers/function.php"
			],
			[
				"func",
				"include/base/helpers/function.php"
			],
			[
				"drp",
				"admin/drp.php"
			],
			[
				"stor",
				"include/apps/default/controllers/StoreController.class.php"
			],
			[
				"salec",
				"include/apps/default/controllers/SaleController.class.php"
			],
			[
				"store",
				"ectouch20/include/apps/default/controllers/StoreController.class.php"
			],
			[
				"salecontroller",
				"ectouch20/include/apps/default/controllers/SaleController.class.php"
			],
			[
				"sale_set",
				"ectouch20/themes/default/sale_set.dwt"
			],
			[
				"storecon",
				"ectouch20/include/apps/default/controllers/StoreController.class.php"
			],
			[
				"user.dwt",
				"ectouch20/themes/default/user.dwt"
			],
			[
				"usercontro",
				"ectouch20/include/apps/default/controllers/UserController.class.php"
			],
			[
				"sale_apply",
				"themes/default/sale_apply.dwt"
			],
			[
				"index.dwt",
				"data/caches/compiled/index.dwt.php"
			],
			[
				"index.dw",
				"themes/default/index.dwt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 311.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
